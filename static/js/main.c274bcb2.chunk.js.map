{"version":3,"sources":["util/helper.js","util/interact.js","components/CreateGame.js","components/GameCard.js","components/GamesGallery.js","components/hmtknModals/GetHMTKN.js","components/hmtknModals/CashoutHMTKN.js","components/CommonTop.js","components/ErrorPage.js","components/GameTransactionsHistory.js","components/GameActiveListings.js","components/GameDialogs/GameErrorDialog.js","components/GameDialogs/PurchaseConfirmationDialog.js","components/GameDialogs/IncreaseAllowanceDialog.js","components/GameDrawers/CreateListingDrawer.js","components/GameDrawers/ListingDetailDrawer.js","components/GameDialogs/ClaimWinningIncAllowanceDialog.js","components/GameDialogs/ClaimWinningDialog.js","components/Game.js","components/PlayersHistory.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["shortenAddr","addr","String","substring","sleep","ms","Promise","resolve","setTimeout","identfyToken","chainId","i","chains","length","parseInt","require","config","path","process","web3","createAlchemyWeb3","hwangMarketABI","hwangMarketAddr","gameContractABI","mainTokenABI","gameTokenABI","iListableTokenABI","erc20TokenABI","hwangMarket","eth","Contract","createAGame","address","resolveTime","oracleAddr","threshold","category","title","a","window","ethereum","status","transactionParameters","to","from","data","methods","createGame","toString","encodeABI","request","method","params","console","log","getGameById","id","gameContractRegistry","call","game","getMainTokenAddr","mainTokenAddress","getGameTrxsByAddr","gameAddr","gameContract","getTrxs","trxs","getCurrentWalletConnected","addressArray","message","target","href","connectWallet","obj","getAllGames","games","getMainTokenBalance","ownerAddr","mainTokenAddr","mainTokenContract","balanceOf","getMainToken2SenderApprovalAmt","senderAddr","allowance","withdrawWinnings","withdrawAmt","trxHash","err","getTokenAllowance","tokenAddr","tokenContract","getGameTokenAddrByGameAddr","side","gtAddr","gameYesTokenContractAddress","gameNoTokenContractAddress","approveMainTokenSender","wallet","mainTokenAmt","approve","approveTokenSender","owner","sender","approvalAmt","mintGameTokenFromMainToken","buyTokenSide","buyTokenAmt","maxLimit","addPlayer","getBalance","gameTokenContract","getERC20Tokenbalance","erc20TokenContract","listTokensUp","token1Addr","token1Amt","token2Addr","token2Amt","iListableTokenContract","listUpTokensForExchange","acceptTokenExchange","listing","token2","listingAddr","getNetworkTokenBalance","getNetworkTokenInfo","getChainId","getNetworkID","net","getNetworkType","mintMainToken","mintAmt","value","BigNumber","mul","toHexString","mint","cashoutMainToken","cashoutAmt","cashout","triggerResolve","performUpkeep","getPlayersTrxRecords","CreateGame","walletAddress","setStatus","useState","Date","setResolveTime","setThreshold","useDisclosure","isOpen","onOpen","onClose","setTitle","colorMode","useColorMode","setCategory","mkt","setMkt","markets","description","provider","providerLink","dec","submitCreateGame","parsedThreshold","pow","parsedResolveTime","getTime","leftIcon","icon","faPlus","colorScheme","onClick","size","mt","mb","isRequired","placeholder","onChange","e","map","cat","my","find","m","o","display","flexDir","rowGap","justifyContent","border","borderRadius","p","alignItems","columnGap","label","placement","faQuestionCircle","mx","mr","variant","isExternal","faExternalLink","color","selected","datetime","showTimeSelect","timeFormat","dateFormat","minDate","v","w","isDisabled","GameCard","percentage","setPercentage","diffText","setDiffText","useEffect","intervalId","setInterval","perc","Math","min","floor","now","createdTime","timeLeft","max","s","clearInterval","navigate","useNavigate","bgColor","_hover","boxShadow","px","py","minW","h","minH","text","styles","buildStyles","textSize","textColor","trailColor","pathColor","strokeWidth","ml","textAlign","fontSize","fontWeight","totalAmount","pb","pt","maxW","completed","betYesAmount","maxCompleted","baseBgColor","customLabel","width","labelSize","height","betNoAmount","GamesGallery","isLoading","setLoading","ongoingGames","setOngoingGames","closedGames","setClosedGames","showClosed","setShowClosed","toast","useToast","events","GameCreated","error","returnValues","gameMetadata","duration","isClosable","prev","GameConcluded","getGames","isChecked","flexWrap","slice","reverse","g","GetHMTKN","networkTknBalance","setNetworkTknBalance","networkId","setNetworkId","setMintAmt","setMainTokenAddr","networkInfo","setNetworkInfo","update","mintHMTKN","faHeart","style","marginRight","nativeCurrency","symbol","type","name","disabled","gt","as","CashoutHMTKN","mainTknBalance","setMainTknBalance","setCashoutAmt","cashoutHMTKN","faMoneyBillTransfer","CommonTop","setWallet","toggleColorMode","hmtknAddr","setHmtknAddr","hmtknBalance","setHmtknBalance","isGetHMTKN","setIsGetHMTKN","addHMTKNTransferListener","Transfer","details","toLowerCase","add","sub","connectWalletPressed","walletResponse","fetchWallet","updateHmtknMetadata","on","accounts","cursor","faMoon","faSun","ErrorPage","GameTransactionsHistory","gameTrxs","setGameTrxs","setBgColor","updateTrxs","PlayerJoinedGameEvent","player","trxAmt","amount","gameSide","betSide","overflowY","maxH","trx","base","lg","GameActiveListings","setIsDialog","gytAddr","gntAddr","setIsCreate","setListingSelected","openListings","setOpenListings","setClosedListings","delListing","setDelListing","addListingFulfilledListener","ListingFulfilled","listingInfo","ol","listingId","filter","getAllListings","listings","l","fulfilled","NewListing","parseAddr","marginLeft","token1","player2","GameErrorDialog","errorMsg","PurchaseConfirmationDialog","IncreaseAllowanceDialog","allowAmt","setIsLoading","doApprove","faX","allowToggle","flex","CreateListingDrawer","gytBalance","gntBalance","offeredTokenAddr","setOfferedTokenAddr","offeredTokenAmt","setOfferedTokenAmt","expectedTokenAddr","setExpectedTokenAddr","customExpectedTokenAddr","setCustomExpectedTokenAddr","expectedTokenAmt","setExpectedTokenAmt","pressCreateListing","children","routerLink","ListingDetailDrawer","listingSelected","token2Balance","setToken2Balance","updateTokenBalance","triggerAcceptListing","player1","textDecor","ClaimWinningIncAllowanceDialog","outcome","winningTokenAddr","ClaimWinningDialog","totalLoseAmt","totalWinAmt","doClaimWinning","winningAmt","div","Game","useParams","setGame","setBuyTokenSide","setBuyTokenAmt","setMaxLimit","purchaseTrxHash","setPurchaseTrxHash","setErrorMsg","main2TknAllowance","setMain2TknAllowance","setGytBalance","setGntBalance","setGytAddr","setGntAddr","isDialog","isCreate","winningTokenAllowance","setWinningTokenAllowance","winningTokenBalance","setWinningTokenBalance","cancelRef","React","useRef","gameOutcome","setGameOutcome","getGame","triggerPurchase","addNewListingListener","addHMTKNApprovalListener","Approval","spender","addGYTListener","addGNTApprovalListener","updateAllowance","setBalance","setGameTokenAddr","addGameConcludedListener","gameId","copy","JSON","parse","stringify","updateGameOutcome","tag","fontFamily","radius","lineWidth","segmentsStyle","transition","animate","dataEntry","labelPosition","labelStyle","fill","pointerEvents","whiteSpace","faQuestion","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZoneName","format","motionPreset","leastDestructiveRef","isCentered","finalFocusRef","PlayersHistory","records","setRecords","getRecords","isNumeric","r","activityType","trxTime","App","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c274bcb2.chunk.js","sourcesContent":["import chains from \"./chains.json\";\r\n\r\nexport const shortenAddr = (addr) => {\r\n  return String(addr).substring(0, 6) + \"...\" + String(addr).substring(38);\r\n};\r\n\r\nexport const eth2MainConversionRate = 1; // this is a fixed constant\r\nexport const game2MainConversionRate = 1; // this is a fixed constant\r\n\r\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n/*\r\n  {\r\n    \"name\": \"GoChain\",\r\n    \"chain\": \"GO\",\r\n    \"rpc\": [\r\n      \"https://rpc.gochain.io\"\r\n    ],\r\n    \"faucets\": [\r\n      \"https://free-online-app.com/faucet-for-eth-evm-chains/\"\r\n    ],\r\n    \"nativeCurrency\": {\r\n      \"name\": \"GoChain Ether\",\r\n      \"symbol\": \"GO\",\r\n      \"decimals\": 18\r\n    },\r\n    \"infoURL\": \"https://gochain.io\",\r\n    \"shortName\": \"go\",\r\n    \"chainId\": 60,\r\n    \"networkId\": 60,\r\n    \"slip44\": 6060,\r\n    \"explorers\": [\r\n      {\r\n        \"name\": \"GoChain Explorer\",\r\n        \"url\": \"https://explorer.gochain.io\",\r\n        \"standard\": \"EIP3091\"\r\n      }\r\n    ]\r\n  },\r\n*/\r\nexport const identfyToken = (chainId) => {\r\n  for (let i = 0; chains.length; i++) {\r\n    if (parseInt(chainId) === parseInt(chains[i].chainId)) {\r\n      return chains[i];\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n","import { BigNumber } from \"ethers\";\r\nimport {\r\n  eth2MainConversionRate,\r\n  game2MainConversionRate,\r\n  identfyToken,\r\n} from \"./helper\";\r\n\r\n/* Abstractions to deal with all functions interacting with the blockchain */\r\nrequire(\"dotenv\").config({ path: `./.env.${process.env.NODE_ENV}` });\r\n\r\nlet temp = null;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const Web3 = require(\"web3\");\r\n  temp = new Web3(\r\n    new Web3.providers.WebsocketProvider(process.env.REACT_APP_Local_Provider)\r\n  );\r\n} else {\r\n  const alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\r\n  const { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n  temp = createAlchemyWeb3(alchemyKey);\r\n}\r\n\r\nexport const web3 = temp;\r\n\r\nconst hwangMarketABI = require(\"../contracts/HwangMarket-abi.json\");\r\nexport const hwangMarketAddr = process.env.REACT_APP_HwangMarket_Address;\r\n\r\nexport const gameContractABI = require(\"../contracts/GameContract-abi.json\");\r\nexport const mainTokenABI = require(\"../contracts/MainToken-abi.json\");\r\nconst gameTokenABI = require(\"../contracts/GameERC20Token-abi.json\");\r\nconst iListableTokenABI = require(\"../contracts/IListableToken-abi.json\");\r\nexport const erc20TokenABI = require(\"../contracts/IERC20-abi.json\");\r\n\r\nexport const hwangMarket = new web3.eth.Contract(\r\n  hwangMarketABI,\r\n  hwangMarketAddr\r\n);\r\n\r\nexport const createAGame = async (\r\n  address,\r\n  resolveTime,\r\n  oracleAddr,\r\n  threshold,\r\n  category,\r\n  title\r\n) => {\r\n  if (!window.ethereum || address === null) {\r\n    return {\r\n      status:\r\n        \"💡 Connect your Metamask wallet to update the message on the blockchain.\",\r\n    };\r\n  }\r\n\r\n  const transactionParameters = {\r\n    to: hwangMarketAddr, // Required except during contract publications.\r\n    from: address, // must match user's active address.\r\n    data: hwangMarket.methods\r\n      .createGame(\r\n        resolveTime,\r\n        oracleAddr,\r\n        threshold.toString(),\r\n        category,\r\n        title\r\n      )\r\n      .encodeABI(),\r\n  };\r\n\r\n  //sign the transaction\r\n  try {\r\n    await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n  } catch (error) {\r\n    console.log(\"something went wrong!\", error);\r\n  }\r\n};\r\n\r\nexport const getGameById = async (id) => {\r\n  const game = await hwangMarket.methods.gameContractRegistry(id).call();\r\n  return game;\r\n};\r\n\r\nexport const getMainTokenAddr = async () => {\r\n  return await hwangMarket.methods.mainTokenAddress().call();\r\n};\r\n\r\nexport const getGameTrxsByAddr = async (gameAddr) => {\r\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\r\n  const trxs = await gameContract.methods.getTrxs().call();\r\n  console.log(\"received trxs: \", trxs);\r\n  return trxs;\r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        status: \"\",\r\n        address: addressArray[0],\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getAllGames = async () => {\r\n  const games = await hwangMarket.methods.getAllGames().call();\r\n  return games;\r\n};\r\n\r\nexport const getMainTokenBalance = async (ownerAddr) => {\r\n  if (!window.ethereum || !ownerAddr) {\r\n    return 0;\r\n  }\r\n  const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\r\n  const mainTokenContract = new web3.eth.Contract(mainTokenABI, mainTokenAddr);\r\n\r\n  return await mainTokenContract.methods.balanceOf(ownerAddr).call();\r\n};\r\n\r\nexport const getMainToken2SenderApprovalAmt = async (ownerAddr, senderAddr) => {\r\n  if (!window.ethereum || !ownerAddr || !senderAddr) {\r\n    return 0;\r\n  }\r\n  const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\r\n  const mainTokenContract = new web3.eth.Contract(mainTokenABI, mainTokenAddr);\r\n\r\n  return await mainTokenContract.methods\r\n    .allowance(ownerAddr, senderAddr)\r\n    .call();\r\n};\r\n\r\nexport const withdrawWinnings = async (ownerAddr, gameAddr, withdrawAmt) => {\r\n  if (!ownerAddr || !gameAddr || !withdrawAmt) {\r\n    return { trxHash: \"\", err: \"Bad fields to withdraw\" };\r\n  }\r\n  //sign the transaction\r\n  try {\r\n    const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\r\n\r\n    const transactionParameters = {\r\n      to: gameAddr, // Required except during contract publications.\r\n      from: ownerAddr, // must match user's active address.\r\n      data: gameContract.methods.withdrawWinnings(withdrawAmt).encodeABI(),\r\n    };\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return { trxHash: trxHash, err: \"\" };\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n    return { trxHash: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport const getTokenAllowance = async (ownerAddr, senderAddr, tokenAddr) => {\r\n  if (!window.ethereum || !ownerAddr || !senderAddr || !tokenAddr) {\r\n    return 0;\r\n  }\r\n\r\n  const tokenContract = new web3.eth.Contract(erc20TokenABI, tokenAddr);\r\n\r\n  return await tokenContract.methods.allowance(ownerAddr, senderAddr).call();\r\n};\r\n\r\nexport const getGameTokenAddrByGameAddr = async (gameAddr, side) => {\r\n  if (!window.ethereum || !gameAddr || (side !== 1 && side !== 2)) {\r\n    return \"\";\r\n  }\r\n\r\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\r\n  let gtAddr = \"\";\r\n  if (side === 1) {\r\n    gtAddr = await gameContract.methods.gameYesTokenContractAddress().call();\r\n  } else {\r\n    gtAddr = await gameContract.methods.gameNoTokenContractAddress().call();\r\n  }\r\n  return gtAddr;\r\n};\r\n\r\nexport const approveMainTokenSender = async (\r\n  wallet,\r\n  senderAddr,\r\n  mainTokenAmt\r\n) => {\r\n  if (!window.ethereum || !wallet || !senderAddr) {\r\n    return \"\";\r\n  }\r\n  const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\r\n  const mainTokenContract = new web3.eth.Contract(mainTokenABI, mainTokenAddr);\r\n  const transactionParameters = {\r\n    to: mainTokenAddr, // Required except during contract publications.\r\n    from: wallet, // must match user's active address.\r\n    data: mainTokenContract.methods\r\n      .approve(senderAddr, mainTokenAmt)\r\n      .encodeABI(),\r\n  };\r\n\r\n  //sign the transaction\r\n  try {\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return trxHash;\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const approveTokenSender = async (\r\n  tokenAddr,\r\n  owner,\r\n  sender,\r\n  approvalAmt\r\n) => {\r\n  if (!window.ethereum || !tokenAddr || !owner || !sender || !approvalAmt) {\r\n    return \"\";\r\n  }\r\n  const tokenContract = new web3.eth.Contract(erc20TokenABI, tokenAddr);\r\n  const transactionParameters = {\r\n    to: tokenAddr, // Required except during contract publications.\r\n    from: owner, // must match user's active address.\r\n    data: tokenContract.methods.approve(sender, approvalAmt).encodeABI(),\r\n  };\r\n\r\n  //sign the transaction\r\n  try {\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return trxHash;\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexport const mintGameTokenFromMainToken = async (\r\n  wallet,\r\n  gameAddr,\r\n  buyTokenSide,\r\n  buyTokenAmt,\r\n  maxLimit\r\n) => {\r\n  if (\r\n    !window.ethereum ||\r\n    !wallet ||\r\n    (buyTokenSide !== \"1\" && buyTokenSide !== \"2\") ||\r\n    buyTokenAmt < 0 ||\r\n    buyTokenAmt > maxLimit\r\n  ) {\r\n    return { trxHash: \"\", err: \"\" };\r\n  }\r\n\r\n  //sign the transaction\r\n  try {\r\n    const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\r\n\r\n    const transactionParameters = {\r\n      to: gameAddr, // Required except during contract publications.\r\n      from: wallet, // must match user's active address.\r\n      data: gameContract.methods\r\n        .addPlayer(wallet, game2MainConversionRate * buyTokenAmt, buyTokenSide)\r\n        .encodeABI(),\r\n    };\r\n\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return { trxHash: trxHash, err: \"\" };\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n    return { trxHash: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport const getBalance = async (wallet, gameAddr, side) => {\r\n  if (!wallet || !gameAddr || (side !== 1 && side !== 2)) {\r\n    return 0;\r\n  }\r\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\r\n  let gtAddr = \"\";\r\n  if (side === 1) {\r\n    gtAddr = await gameContract.methods.gameYesTokenContractAddress().call();\r\n  } else {\r\n    gtAddr = await gameContract.methods.gameNoTokenContractAddress().call();\r\n  }\r\n  const gameTokenContract = new web3.eth.Contract(gameTokenABI, gtAddr);\r\n  return await gameTokenContract.methods.balanceOf(wallet).call();\r\n};\r\n\r\nexport const getERC20Tokenbalance = async (wallet, tokenAddr) => {\r\n  if (!wallet || !tokenAddr) {\r\n    return 0;\r\n  }\r\n  const erc20TokenContract = new web3.eth.Contract(erc20TokenABI, tokenAddr);\r\n  return await erc20TokenContract.methods.balanceOf(wallet).call();\r\n};\r\n\r\nexport const listTokensUp = async (\r\n  wallet,\r\n  token1Addr,\r\n  token1Amt,\r\n  token2Addr,\r\n  token2Amt\r\n) => {\r\n  if (!wallet || !token1Addr || !token1Amt || !token2Addr || !token2Amt) {\r\n    return { trxHash: \"\", err: \"Invalid fields to create listing.\" };\r\n  }\r\n\r\n  //sign the transaction\r\n  try {\r\n    const iListableTokenContract = new web3.eth.Contract(\r\n      iListableTokenABI,\r\n      token1Addr\r\n    );\r\n\r\n    const transactionParameters = {\r\n      to: token1Addr, // Required except during contract publications.\r\n      from: wallet, // must match user's active address.\r\n      data: iListableTokenContract.methods\r\n        .listUpTokensForExchange(token1Amt, token2Addr, token2Amt)\r\n        .encodeABI(),\r\n    };\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return { trxHash: trxHash, err: \"\" };\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n    return { trxHash: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport const acceptTokenExchange = async (wallet, listing) => {\r\n  if (!wallet || !listing.token2 || !listing.listingAddr) {\r\n    return { trxHash: \"\", err: \"Invalid fields to accept listing exchange.\" };\r\n  }\r\n\r\n  //sign the transaction\r\n  try {\r\n    const iListableTokenContract = new web3.eth.Contract(\r\n      iListableTokenABI,\r\n      listing.token2\r\n    );\r\n\r\n    const transactionParameters = {\r\n      to: listing.token2, // Required except during contract publications.\r\n      from: wallet, // must match user's active address.\r\n      data: iListableTokenContract.methods\r\n        .acceptTokenExchange(listing.listingAddr)\r\n        .encodeABI(),\r\n    };\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return { trxHash: trxHash, err: \"\" };\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n    return { trxHash: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport const getNetworkTokenBalance = async (wallet) => {\r\n  if (!wallet) {\r\n    return 0;\r\n  }\r\n  return await web3.eth.getBalance(wallet);\r\n};\r\n\r\nexport const getNetworkTokenInfo = async () => {\r\n  const chainId = await web3.eth.getChainId();\r\n  return identfyToken(chainId);\r\n};\r\n\r\nexport const getNetworkID = async () => {\r\n  return await web3.eth.net.getNetworkType();\r\n};\r\n\r\nexport const mintMainToken = async (wallet, mintAmt) => {\r\n  if (!wallet || !mintAmt) {\r\n    return { trxHash: \"\", err: \"Invalid fields to mint HMTKN.\" };\r\n  }\r\n\r\n  //sign the transaction\r\n  try {\r\n    const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\r\n    const mainTokenContract = new web3.eth.Contract(\r\n      mainTokenABI,\r\n      mainTokenAddr\r\n    );\r\n    const transactionParameters = {\r\n      to: mainTokenAddr, // Required except during contract publications.\r\n      from: wallet, // must match user's active address.\r\n      value: BigNumber.from(mintAmt)\r\n        .mul(1 / eth2MainConversionRate)\r\n        .toHexString(),\r\n      data: mainTokenContract.methods\r\n        .mint(wallet, BigNumber.from(mintAmt).toString())\r\n        .encodeABI(),\r\n    };\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return { trxHash: trxHash, err: \"\" };\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n    return { trxHash: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport const cashoutMainToken = async (wallet, cashoutAmt) => {\r\n  if (!wallet || !cashoutAmt) {\r\n    return { trxHash: \"\", err: \"Invalid fields to cashout HMTKN.\" };\r\n  }\r\n\r\n  //sign the transaction\r\n  try {\r\n    const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\r\n    const mainTokenContract = new web3.eth.Contract(\r\n      mainTokenABI,\r\n      mainTokenAddr\r\n    );\r\n    const transactionParameters = {\r\n      to: mainTokenAddr, // Required except during contract publications.\r\n      from: wallet, // must match user's active address.\r\n      data: mainTokenContract.methods.cashout(cashoutAmt).encodeABI(),\r\n    };\r\n    const trxHash = await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n\r\n    return { trxHash: trxHash, err: \"\" };\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n    return { trxHash: \"\", err: error.message };\r\n  }\r\n};\r\n\r\nexport const triggerResolve = async (wallet, gameAddr) => {\r\n  if (!wallet || !gameAddr) {\r\n    return;\r\n  }\r\n\r\n  //sign the transaction\r\n  try {\r\n    const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\r\n    const transactionParameters = {\r\n      to: gameAddr, // Required except during contract publications.\r\n      from: wallet, // must match user's active address.\r\n      data: gameContract.methods.performUpkeep().encodeABI(),\r\n    };\r\n    await window.ethereum.request({\r\n      method: \"eth_sendTransaction\",\r\n      params: [transactionParameters],\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error thrown:\", error.message);\r\n  }\r\n};\r\n\r\nexport const getPlayersTrxRecords = async (wallet) => {\r\n  if (!wallet) {\r\n    return [];\r\n  }\r\n\r\n  return await hwangMarket.methods.getPlayersTrxRecords(wallet).call();\r\n};\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Button,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Text,\r\n  Select,\r\n  FormControl,\r\n  FormLabel,\r\n  Link,\r\n  Badge,\r\n  Tooltip,\r\n  NumberInput,\r\n  NumberInputField,\r\n  Input,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faExternalLink,\r\n  faPlus,\r\n  faQuestionCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"./css/react-datepicker.css\";\r\nimport { BigNumber } from \"ethers\";\r\n\r\nimport {\r\n  hwangMarket,\r\n  createAGame,\r\n  getGameAddrById,\r\n  getCurrentWalletConnected,\r\n  connectWallet,\r\n} from \"../util/interact\";\r\n\r\nconst CreateGame = ({ walletAddress, setStatus }) => {\r\n  const [resolveTime, setResolveTime] = useState(new Date());\r\n  const [threshold, setThreshold] = useState(0);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n  const allowedCategories = [\r\n    \"Price Feeds\",\r\n    \"Sports\",\r\n    \"NFTs\",\r\n    \"Assets\",\r\n    \"Weather\",\r\n  ];\r\n\r\n  const [mkt, setMkt] = useState(null);\r\n  const markets = {\r\n    \"Price Feeds\": [\r\n      {\r\n        description: \"BTC / ETH\",\r\n        oracleAddr: \"0x779877A7B0D9E8603169DdbD7836e478b4624789\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 18,\r\n      },\r\n      {\r\n        description: \"BTC / USD\",\r\n        oracleAddr: \"0xA39434A63A52E749F02807ae27335515BA4b07F7\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 8,\r\n      },\r\n      {\r\n        description: \"DAI / USD\",\r\n        oracleAddr: \"0x0d79df66BE487753B02D015Fb622DED7f0E9798d\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 8,\r\n      },\r\n      {\r\n        description: \"ETH / USD\",\r\n        oracleAddr: \"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 8,\r\n      },\r\n      {\r\n        description: \"FORTH / USD\",\r\n        oracleAddr: \"0x7A65Cf6C2ACE993f09231EC1Ea7363fb29C13f2F\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 8,\r\n      },\r\n      {\r\n        description: \"JPY / USD\",\r\n        oracleAddr: \"0x295b398c95cEB896aFA18F25d0c6431Fd17b1431\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 18,\r\n      },\r\n      {\r\n        description: \"LINK / ETH\",\r\n        oracleAddr: \"0xb4c4a493AB6356497713A78FFA6c60FB53517c63\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 18,\r\n      },\r\n      {\r\n        description: \"LINK / USD\",\r\n        oracleAddr: \"0x48731cF7e84dc94C5f84577882c14Be11a5B7456\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 8,\r\n      },\r\n      {\r\n        description: \"Stader Labs PoR\",\r\n        oracleAddr: \"0x3de1bE9407645533CD0CbeCf88dFE5297E7125e6\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 18,\r\n      },\r\n      {\r\n        description: \"Swell PoR\",\r\n        oracleAddr: \"0xDe9C980F79b636B46b9c3bc04cfCC94A29D18D19\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 18,\r\n      },\r\n      {\r\n        description: \"USDC / USD\",\r\n        oracleAddr: \"0xAb5c49580294Aff77670F839ea425f5b78ab3Ae7\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 8,\r\n      },\r\n      {\r\n        description: \"XAU / USD\",\r\n        oracleAddr: \"0x7b219F57a8e9C7303204Af681e9fA69d17ef626f\",\r\n        provider: \"Chainlink\",\r\n        providerLink: \"https://chain.link/\",\r\n        dec: 18,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const submitCreateGame = async () => {\r\n    onClose();\r\n    const parsedThreshold = BigNumber.from(threshold).mul(\r\n      BigNumber.from(10).pow(mkt.dec)\r\n    );\r\n    const parsedResolveTime = parseInt(resolveTime.getTime() / 1000);\r\n    await createAGame(\r\n      walletAddress,\r\n      parsedResolveTime,\r\n      mkt.oracleAddr,\r\n      parsedThreshold,\r\n      category,\r\n      title\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Button\r\n        leftIcon={<FontAwesomeIcon icon={faPlus} />}\r\n        colorScheme=\"green\"\r\n        onClick={onOpen}\r\n      >\r\n        New Game\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Create a new game</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <FormControl mt=\"1\" mb=\"5\" isRequired>\r\n              <FormLabel>Game category</FormLabel>\r\n              <Select\r\n                placeholder=\"Select a game category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                value={category}\r\n              >\r\n                {allowedCategories.map((cat) => (\r\n                  <option key={cat} value={cat}>\r\n                    {cat}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            {category && (\r\n              <FormControl my=\"5\" isRequired>\r\n                <FormLabel>Market</FormLabel>\r\n                <Select\r\n                  placeholder=\"Select a market\"\r\n                  onChange={(e) =>\r\n                    setMkt(\r\n                      markets[category].find(\r\n                        (m) => m.description === e.target.value\r\n                      )\r\n                    )\r\n                  }\r\n                  value={mkt ? mkt.description : \"\"}\r\n                >\r\n                  {markets[category] &&\r\n                    markets[category].map((o) => (\r\n                      <option key={o.description} value={o.description}>\r\n                        {o.description}\r\n                      </option>\r\n                    ))}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n\r\n            {category && mkt && (\r\n              <Box\r\n                display=\"flex\"\r\n                flexDir=\"column\"\r\n                rowGap=\"2\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Box\r\n                  border=\"2px solid teal\"\r\n                  borderRadius=\"15px\"\r\n                  p=\"5\"\r\n                  // bgColor={colorMode === \"light\" ? \"teal.100\" : \"cyan.700\"}\r\n                  my=\"2\"\r\n                >\r\n                  <Box display=\"flex\" alignItems=\"center\" mb=\"2\" columnGap=\"3\">\r\n                    <Heading size=\"md\">Oracle information</Heading>\r\n                    <Tooltip\r\n                      label=\"We only use verified oracles for our data feeds. Find out more in our FAQ.\"\r\n                      placement=\"right\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faQuestionCircle} />\r\n                    </Tooltip>\r\n                  </Box>\r\n\r\n                  <Text>\r\n                    Resolver:{\" \"}\r\n                    <Badge mx=\"1\" mr=\"4\" colorScheme=\"blue\" variant=\"outline\">\r\n                      <Link isExternal href={mkt.providerLink}>\r\n                        {mkt.provider} <FontAwesomeIcon icon={faExternalLink} />\r\n                      </Link>\r\n                    </Badge>\r\n                  </Text>\r\n                  <Text>\r\n                    Contract address:{\" \"}\r\n                    <Link\r\n                      isExternal\r\n                      href={`https://goerli.etherscan.io/address/${mkt.oracleAddr}`}\r\n                      color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                    >\r\n                      {mkt.oracleAddr} <FontAwesomeIcon icon={faExternalLink} />\r\n                    </Link>\r\n                  </Text>\r\n                </Box>\r\n\r\n                <FormControl isRequired mt=\"2\" mb=\"2\">\r\n                  <FormLabel>Title</FormLabel>\r\n                  <Input\r\n                    placeholder=\"Enter a short title describing the game\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl isRequired my=\"5\">\r\n                  <FormLabel>Resolution time</FormLabel>\r\n                  <DatePicker\r\n                    id={colorMode === \"dark\" && \"darkmode\"}\r\n                    selected={resolveTime}\r\n                    onChange={(datetime) => setResolveTime(datetime)}\r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                    minDate={new Date()}\r\n                  />\r\n                </FormControl>\r\n                <FormControl isRequired my=\"5\">\r\n                  <FormLabel>Price Threshold (in terms of base unit)</FormLabel>\r\n                  <NumberInput\r\n                    value={threshold}\r\n                    onChange={(v) => setThreshold(v)}\r\n                  >\r\n                    <NumberInputField />\r\n                  </NumberInput>\r\n                </FormControl>\r\n              </Box>\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            columnGap=\"14\"\r\n          >\r\n            <Button\r\n              colorScheme=\"green\"\r\n              w=\"80%\"\r\n              variant=\"outline\"\r\n              onClick={submitCreateGame}\r\n              isDisabled={!category || !mkt || !resolveTime}\r\n            >\r\n              Create game\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateGame;\r\n","import { Box, Button, Heading, Text, useColorMode } from \"@chakra-ui/react\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst GameCard = ({ game }) => {\r\n  /*\r\n  addr: \"0x64C3bb915Dd98231B3b2649A350B28d746a087Af\"\r\n  betNoAmount: \"0\"\r\n  betYesAmount: \"0\"\r\n  createdTime: \"1666719306\"\r\n  gameOutcome: \"0\"\r\n  id: \"2\"\r\n  ongoing: true\r\n  oracleAddr: \"0x0d79df66BE487753B02D015Fb622DED7f0E9798d\"\r\n  resolveTime: \"1666722600\"\r\n  tag: \"Price Feeds\"\r\n  threshold: \"200000000000\"\r\n  title: \"Hello world!\"\r\n  totalAmount: \"0\"\r\n  */\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [diffText, setDiffText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      //assign interval to a variable to clear it.\r\n      let perc = Math.min(\r\n        Math.floor(\r\n          ((Date.now() / 1000 - game.createdTime) /\r\n            (game.resolveTime - game.createdTime)) *\r\n            100\r\n        ),\r\n        100\r\n      );\r\n      if (perc < 0) {\r\n        perc = 100;\r\n      }\r\n      setPercentage(perc);\r\n\r\n      const timeLeft = Math.max(\r\n        0,\r\n        Math.floor(game.resolveTime - Date.now() / 1000)\r\n      );\r\n      let s = \"\";\r\n      if (timeLeft === 0) {\r\n        setDiffText(\"Closed\");\r\n      } else if (timeLeft < 60) {\r\n        if (timeLeft > 1) {\r\n          s = \"s\";\r\n        }\r\n        setDiffText(`${timeLeft} second${s}`);\r\n      } else if (timeLeft < 60 * 60) {\r\n        if (Math.max(1, Math.floor(timeLeft / 60)) > 1) {\r\n          s = \"s\";\r\n        }\r\n        setDiffText(`${Math.max(1, Math.floor(timeLeft / 60))} minute${s}`);\r\n      } else if (timeLeft < 24 * 60 * 60) {\r\n        if (Math.max(1, Math.floor(timeLeft / (60 * 60))) > 1) {\r\n          s = \"s\";\r\n        }\r\n        setDiffText(\r\n          `${Math.max(1, Math.floor(timeLeft / (60 * 60)))} hour${s}`\r\n        );\r\n      } else {\r\n        setDiffText(\">24 hours\");\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId); //This is important\r\n  }, [game.createdTime, game.resolveTime]);\r\n\r\n  const navigate = useNavigate();\r\n  const totalSupply = 1000; // hardcoded 1000 token supply limit\r\n  return (\r\n    <Box w=\"40%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box\r\n        w=\"100%\"\r\n        border={colorMode === \"light\" ? \"1px solid black\" : \"1px solid gray\"}\r\n        borderRadius=\"15px\"\r\n        bgColor={colorMode === \"light\" ? \"gray.100\" : \"gray.900\"}\r\n        _hover={{\r\n          // background: colorMode === \"light\" ? \"facebook.200\" : \"facebook.800\",\r\n          // cursor: \"pointer\",\r\n          // borderColor: \"facebook.200\",\r\n          boxShadow: \"3px 6px #888888\",\r\n        }}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          px=\"5\"\r\n          py=\"8\"\r\n          columnGap=\"5\"\r\n        >\r\n          <Box w=\"80px\" minW=\"80px\" h=\"65px\" minH=\"65px\" p=\"0.5\" mr=\"4\">\r\n            <CircularProgressbar\r\n              value={percentage}\r\n              text={diffText}\r\n              styles={buildStyles({\r\n                textSize: \"16px\",\r\n                textColor: colorMode === \"light\" ? \"black\" : \"white\",\r\n                trailColor: colorMode === \"light\" ? \"#718096\" : \"#d6d6d6\",\r\n                pathColor: colorMode === \"light\" ? \"#38B2AC\" : \"#3182CE\",\r\n              })}\r\n              strokeWidth={10}\r\n            />\r\n          </Box>\r\n          <Heading size=\"md\">{game.title}</Heading>\r\n          <Button\r\n            ml=\"auto\"\r\n            colorScheme=\"telegram\"\r\n            borderRadius=\"15px\"\r\n            onClick={() => navigate(`/game/${game.id}`)}\r\n            minW=\"80px\"\r\n            variant=\"outline\"\r\n          >\r\n            Details\r\n          </Button>\r\n        </Box>\r\n\r\n        <Box display=\"flex\">\r\n          <Box px=\"5\" py=\"2\" textAlign=\"center\" mr=\"1\">\r\n            <Text fontSize=\"md\">Total Amount</Text>\r\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\r\n              {game.totalAmount} HMTKN\r\n            </Text>\r\n          </Box>\r\n          <Box pb=\"5\" pt=\"1\" mx=\"auto\" w=\"450px\" maxW=\"65%\">\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-evenly\"\r\n              columnGap=\"3\"\r\n              py=\"1.5\"\r\n            >\r\n              <Heading size=\"md\" w=\"40px\">\r\n                Yes\r\n              </Heading>\r\n              <Box w=\"100%\" maxW=\"100%\">\r\n                <ProgressBar\r\n                  completed={Math.floor(\r\n                    (parseInt(game.betYesAmount) / totalSupply) * 100\r\n                  )}\r\n                  maxCompleted={100}\r\n                  bgColor=\"#3CCF4E\"\r\n                  baseBgColor={colorMode === \"light\" ? \"#4A5568\" : \"#EBF8FF\"}\r\n                  customLabel={`${game.betYesAmount}`}\r\n                  width=\"100%\"\r\n                  labelSize=\"14px\"\r\n                  height=\"30px\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-evenly\"\r\n              columnGap=\"3\"\r\n              py=\"1.5\"\r\n            >\r\n              <Heading size=\"md\" w=\"40px\">\r\n                No\r\n              </Heading>\r\n              <Box w=\"100%\" maxW=\"100%\">\r\n                <ProgressBar\r\n                  completed={Math.floor(\r\n                    (parseInt(game.betNoAmount) / totalSupply) * 100\r\n                  )}\r\n                  maxCompleted={100}\r\n                  bgColor=\"#FF1E1E\"\r\n                  baseBgColor={colorMode === \"light\" ? \"#4A5568\" : \"#EBF8FF\"}\r\n                  customLabel={`${game.betNoAmount}`}\r\n                  width=\"100%\"\r\n                  labelSize=\"14px\"\r\n                  height=\"30px\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GameCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Spinner,\r\n  Switch,\r\n  Text,\r\n  useColorMode,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { hwangMarket, getAllGames } from \"../util/interact\";\r\n\r\nimport CreateGame from \"./CreateGame\";\r\nimport GameCard from \"./GameCard\";\r\n\r\nconst GamesGallery = ({ walletAddress }) => {\r\n  const [status, setStatus] = useState(\"\");\r\n  const [getGameId, setGetGameId] = useState(0);\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [ongoingGames, setOngoingGames] = useState(null);\r\n  const [closedGames, setClosedGames] = useState([]);\r\n  const [showClosed, setShowClosed] = useState(false);\r\n\r\n  const { colorMode } = useColorMode();\r\n  const toast = useToast();\r\n\r\n  function addHwangMarketListener() {\r\n    console.log(\"hwang market game created listener added\");\r\n    hwangMarket.events.GameCreated({}, (error, data) => {\r\n      if (error) {\r\n        setStatus(\"😥 Cannot connect to the network\");\r\n        console.log(error.message);\r\n        setLoading(false);\r\n      } else if (data && data.returnValues && data.returnValues.gameMetadata) {\r\n        toast({\r\n          title: \"New game created!\",\r\n          description: `${data.returnValues.gameMetadata.title}`,\r\n          status: \"success\",\r\n          duration: 8000,\r\n          isClosable: true,\r\n        });\r\n        setOngoingGames((prev) => [...prev, data.returnValues.gameMetadata]);\r\n        // setStatus(\"🎉 Your game was created!\");\r\n      }\r\n    });\r\n\r\n    hwangMarket.events.GameConcluded({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const games = await getAllGames();\r\n        setOngoingGames(games.ongoingGames);\r\n        setClosedGames(games.closedGames);\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    addHwangMarketListener();\r\n    setLoading(true);\r\n    async function getGames() {\r\n      try {\r\n        const games = await getAllGames();\r\n        setOngoingGames(games.ongoingGames);\r\n        setClosedGames(games.closedGames);\r\n      } catch {\r\n        setStatus(\"😥 Cannot connect to the network\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n    getGames();\r\n  }, []);\r\n\r\n  return (\r\n    <Box px=\"28\" py=\"7\">\r\n      <Heading size=\"2xl\" textAlign=\"center\">\r\n        Markets Gallery\r\n      </Heading>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        columnGap=\"10\"\r\n        mt=\"7\"\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          columnGap=\"2\"\r\n          rowGap=\"2\"\r\n        >\r\n          <Text>Show closed games:</Text>\r\n          <Switch\r\n            colorScheme=\"teal\"\r\n            size=\"lg\"\r\n            isChecked={showClosed}\r\n            onChange={() => setShowClosed((prev) => !prev)}\r\n          />\r\n        </Box>\r\n        <Text\r\n          px=\"4\"\r\n          py=\"2\"\r\n          border={colorMode === \"light\" ? \"1px solid black\" : \"1px solid white\"}\r\n          borderRadius=\"10px\"\r\n        >\r\n          Number of open games: {ongoingGames ? ongoingGames.length : 0}\r\n        </Text>\r\n        <CreateGame walletAddress={walletAddress} setStatus={setStatus} />\r\n      </Box>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        flexWrap=\"wrap\"\r\n        rowGap=\"16\"\r\n        columnGap=\"16\"\r\n        my=\"24\"\r\n      >\r\n        {isLoading ? (\r\n          <Spinner size=\"lg\" color=\"red.500\" />\r\n        ) : status ? (\r\n          <Heading>{status}</Heading>\r\n        ) : ongoingGames && ongoingGames.length > 0 ? (\r\n          ongoingGames\r\n            .slice()\r\n            .reverse()\r\n            .map((g) => <GameCard key={g.addr} game={g} />)\r\n        ) : (\r\n          <Box>\r\n            <Text fontSize=\"3xl\">\r\n              No open games, create one to get started!\r\n            </Text>\r\n          </Box>\r\n        )}\r\n\r\n        <Divider />\r\n        {showClosed &&\r\n          (closedGames && closedGames.length > 0 ? (\r\n            closedGames\r\n              .slice()\r\n              .reverse()\r\n              .map((g) => <GameCard key={g.addr} game={g} />)\r\n          ) : (\r\n            <Text fontSize=\"3xl\">No closed games!</Text>\r\n          ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GamesGallery;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useColorMode,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  FormHelperText,\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  useToast,\r\n  StatGroup,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n} from \"@chakra-ui/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  getMainTokenAddr,\r\n  getNetworkID,\r\n  getNetworkTokenBalance,\r\n  getNetworkTokenInfo,\r\n  mintMainToken,\r\n} from \"../../util/interact\";\r\nimport { eth2MainConversionRate, shortenAddr } from \"../../util/helper\";\r\nimport { BigNumber } from \"ethers\";\r\n\r\nexport default function GetHMTKN({ wallet, isOpen, onClose }) {\r\n  const [networkTknBalance, setNetworkTknBalance] = useState(0);\r\n  const [networkId, setNetworkId] = useState(\"\");\r\n  const [mintAmt, setMintAmt] = useState(\"\");\r\n  const [mainTokenAddr, setMainTokenAddr] = useState(\"\");\r\n  const [networkInfo, setNetworkInfo] = useState(null);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      setNetworkTknBalance(await getNetworkTokenBalance(wallet));\r\n      setNetworkId(await getNetworkID());\r\n      setMainTokenAddr(await getMainTokenAddr());\r\n      setNetworkInfo(await getNetworkTokenInfo());\r\n    };\r\n    update();\r\n  }, [wallet]);\r\n\r\n  const mintHMTKN = async () => {\r\n    const { trxHash, err } = await mintMainToken(wallet, mintAmt);\r\n    if (err) {\r\n      toast({\r\n        title: \"Transaction failed!\",\r\n        description: err,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Creating listing...\",\r\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\r\n        status: \"info\",\r\n        duration: 20000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setMintAmt(\"\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\r\n      <ModalOverlay />\r\n      <ModalContent borderRadius=\"17px\">\r\n        <ModalHeader>\r\n          <FontAwesomeIcon\r\n            color=\"#ECC94B\"\r\n            icon={faHeart}\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Get HMTKN\r\n        </ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Box>\r\n            <Box my=\"2\">\r\n              <Heading size=\"sm\">Network ID: {networkId}</Heading>\r\n              <Text fontSize=\"sm\">\r\n                This is a guesstimate of the network you are on.\r\n              </Text>\r\n            </Box>\r\n            <Heading size=\"sm\" my=\"5\">\r\n              Network Token balance: {networkTknBalance}\r\n            </Heading>\r\n          </Box>\r\n          <Heading size=\"sm\">HMTKN address: </Heading>{\" \"}\r\n          <Text my=\"1\" fontWeight=\"bold\" fontSize=\"sm\">\r\n            {mainTokenAddr}\r\n          </Text>\r\n          <Divider my=\"5\" />\r\n          <FormControl>\r\n            <FormLabel>Amount of HMTKN to mint</FormLabel>\r\n            <NumberInput\r\n              value={mintAmt}\r\n              min={1}\r\n              max={networkTknBalance}\r\n              onChange={(v) => setMintAmt(v)}\r\n            >\r\n              <NumberInputField />\r\n              <NumberInputStepper>\r\n                <NumberIncrementStepper />\r\n                <NumberDecrementStepper />\r\n              </NumberInputStepper>\r\n            </NumberInput>\r\n            <FormHelperText>\r\n              Mints HMTKN from an uncapped supply, in exchange for the network's\r\n              main token. Your maximum mintable amount: {networkTknBalance}\r\n            </FormHelperText>\r\n          </FormControl>\r\n          {mintAmt !== \"\" && (\r\n            <>\r\n              <Box mt=\"8\" mb=\"4\">\r\n                <Heading size=\"sm\">Transaction Summary</Heading>\r\n                <Text fontSize=\"xs\">\r\n                  The network native currency is a \"best effort guess\" by us. It\r\n                  may or may not be accurate. Do refer to the actual\r\n                  confirmation by Metamask when prompted.\r\n                </Text>\r\n              </Box>\r\n              <StatGroup w=\"100%\">\r\n                <Stat>\r\n                  <StatLabel>Exchange rate for 1 HMTKN</StatLabel>\r\n                  <StatNumber>\r\n                    1{\" \"}\r\n                    {networkInfo && networkInfo.nativeCurrency\r\n                      ? networkInfo.nativeCurrency.symbol\r\n                      : \"Network native currency\"}\r\n                  </StatNumber>\r\n                  <StatHelpText>Fixed</StatHelpText>\r\n                </Stat>\r\n                <Stat>\r\n                  <StatLabel>\r\n                    {networkInfo && networkInfo.nativeCurrency\r\n                      ? networkInfo.nativeCurrency.symbol\r\n                      : \"Network native currency\"}\r\n                  </StatLabel>\r\n                  <StatNumber>\r\n                    {mintAmt * (1 / eth2MainConversionRate)}\r\n                  </StatNumber>\r\n                  <StatHelpText>\r\n                    <StatArrow type=\"decrease\" />\r\n                    Lose {mintAmt * (1 / eth2MainConversionRate)}{\" \"}\r\n                    {networkInfo && networkInfo.nativeCurrency\r\n                      ? networkInfo.nativeCurrency.name\r\n                      : \"Network native currency\"}\r\n                  </StatHelpText>\r\n                  <StatHelpText>\r\n                    <Text fontSize=\"xs\">\r\n                      {networkInfo && networkInfo.nativeCurrency\r\n                        ? networkInfo.nativeCurrency.name\r\n                        : \"Network native currency\"}\r\n                    </Text>\r\n                  </StatHelpText>\r\n                </Stat>\r\n                <Stat>\r\n                  <StatLabel>HMTKN</StatLabel>\r\n                  <StatNumber>{mintAmt}</StatNumber>\r\n                  <StatHelpText>\r\n                    <StatArrow type=\"increase\" />\r\n                    Gain {mintAmt} HMTKN\r\n                  </StatHelpText>\r\n                  <StatHelpText>\r\n                    <Text fontSize=\"xs\">{mainTokenAddr}</Text>\r\n                  </StatHelpText>\r\n                </Stat>\r\n              </StatGroup>\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" mr={3} onClick={onClose} variant=\"outline\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            colorScheme=\"whatsapp\"\r\n            disabled={\r\n              mintAmt !== \"\" &&\r\n              BigNumber.from(mintAmt).gt(BigNumber.from(networkTknBalance))\r\n            }\r\n            onClick={mintHMTKN}\r\n          >\r\n            Mint\r\n          </Button>\r\n        </ModalFooter>\r\n\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n          <FontAwesomeIcon\r\n            color=\"#ECC94B\"\r\n            icon={faHeart}\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          <Text as=\"cite\" my=\"5\">\r\n            If it works, do not touch it!\r\n          </Text>\r\n        </Box>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useColorMode,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  Heading,\r\n  FormControl,\r\n  FormLabel,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  FormHelperText,\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  useToast,\r\n  StatGroup,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n} from \"@chakra-ui/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHeart,\r\n  faMoneyBillTransfer,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  cashoutMainToken,\r\n  getMainTokenAddr,\r\n  getMainTokenBalance,\r\n  getNetworkID,\r\n  getNetworkTokenInfo,\r\n  mainTokenABI,\r\n  mintMainToken,\r\n  web3,\r\n} from \"../../util/interact\";\r\nimport { eth2MainConversionRate, shortenAddr } from \"../../util/helper\";\r\nimport { BigNumber } from \"ethers\";\r\n\r\nexport default function CashoutHMTKN({ wallet, isOpen, onClose }) {\r\n  const [mainTknBalance, setMainTknBalance] = useState(0);\r\n  const [networkId, setNetworkId] = useState(\"\");\r\n  const [cashoutAmt, setCashoutAmt] = useState(\"\");\r\n  const [mainTokenAddr, setMainTokenAddr] = useState(\"\");\r\n  const [networkInfo, setNetworkInfo] = useState(null);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      setMainTknBalance(await getMainTokenBalance(wallet));\r\n      setNetworkId(await getNetworkID());\r\n      setMainTokenAddr(await getMainTokenAddr());\r\n      setNetworkInfo(await getNetworkTokenInfo());\r\n    };\r\n    update();\r\n  }, [wallet]);\r\n\r\n  const cashoutHMTKN = async () => {\r\n    const { trxHash, err } = await cashoutMainToken(wallet, cashoutAmt);\r\n    if (err) {\r\n      toast({\r\n        title: \"Transaction failed!\",\r\n        description: err,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Creating listing...\",\r\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\r\n        status: \"info\",\r\n        duration: 20000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setCashoutAmt(\"\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\r\n      <ModalOverlay />\r\n      <ModalContent borderRadius=\"17px\">\r\n        <ModalHeader>\r\n          <FontAwesomeIcon\r\n            color=\"#48BB78\"\r\n            icon={faMoneyBillTransfer}\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Cash out HMTKN\r\n        </ModalHeader>\r\n        <ModalCloseButton />\r\n        <ModalBody>\r\n          <Box>\r\n            <Box my=\"2\">\r\n              <Heading size=\"sm\">Network ID: {networkId}</Heading>\r\n              <Text fontSize=\"sm\">\r\n                This is a guesstimate of the network you are on.\r\n              </Text>\r\n            </Box>\r\n            <Heading size=\"sm\" my=\"5\">\r\n              HMTKN balance: {mainTknBalance}\r\n            </Heading>\r\n          </Box>\r\n          <Heading size=\"sm\">HMTKN address: </Heading>{\" \"}\r\n          <Text my=\"1\" fontWeight=\"bold\" fontSize=\"sm\">\r\n            {mainTokenAddr}\r\n          </Text>\r\n          <Divider my=\"5\" />\r\n          <FormControl>\r\n            <FormLabel>Amount of HMTKN to cash out</FormLabel>\r\n            <NumberInput\r\n              value={cashoutAmt}\r\n              min={1}\r\n              max={getMainTokenBalance}\r\n              onChange={(v) => setCashoutAmt(v)}\r\n            >\r\n              <NumberInputField />\r\n              <NumberInputStepper>\r\n                <NumberIncrementStepper />\r\n                <NumberDecrementStepper />\r\n              </NumberInputStepper>\r\n            </NumberInput>\r\n            <FormHelperText>\r\n              Withdraws HMTKN from your account and deposits the equivalent\r\n              amount into your wallet in the form of the network's native token.\r\n            </FormHelperText>\r\n          </FormControl>\r\n          {cashoutAmt !== \"\" && (\r\n            <>\r\n              <Box mt=\"8\" mb=\"4\">\r\n                <Heading size=\"sm\">Transaction Summary</Heading>\r\n                <Text fontSize=\"xs\">\r\n                  The network native currency is a \"best effort guess\" by us. It\r\n                  may or may not be accurate. Do refer to the actual\r\n                  confirmation by Metamask when prompted.\r\n                </Text>\r\n              </Box>\r\n              <StatGroup w=\"100%\">\r\n                <Stat>\r\n                  <StatLabel>Exchange rate for 1 HMTKN</StatLabel>\r\n                  <StatNumber>\r\n                    1{\" \"}\r\n                    {networkInfo && networkInfo.nativeCurrency\r\n                      ? networkInfo.nativeCurrency.symbol\r\n                      : \"Network native currency\"}\r\n                  </StatNumber>\r\n                  <StatHelpText>Fixed</StatHelpText>\r\n                </Stat>\r\n                <Stat>\r\n                  <StatLabel>\r\n                    {networkInfo && networkInfo.nativeCurrency\r\n                      ? networkInfo.nativeCurrency.symbol\r\n                      : \"Network native currency\"}\r\n                  </StatLabel>\r\n                  <StatNumber>\r\n                    {cashoutAmt * (1 / eth2MainConversionRate)}\r\n                  </StatNumber>\r\n                  <StatHelpText>\r\n                    <StatArrow type=\"increase\" />\r\n                    Gain {cashoutAmt * (1 / eth2MainConversionRate)}{\" \"}\r\n                    {networkInfo && networkInfo.nativeCurrency\r\n                      ? networkInfo.nativeCurrency.name\r\n                      : \"Network native currency\"}\r\n                  </StatHelpText>\r\n                  <StatHelpText>\r\n                    <Text fontSize=\"xs\">\r\n                      {networkInfo && networkInfo.nativeCurrency\r\n                        ? networkInfo.nativeCurrency.name\r\n                        : \"Network native currency\"}\r\n                    </Text>\r\n                  </StatHelpText>\r\n                </Stat>\r\n                <Stat>\r\n                  <StatLabel>HMTKN</StatLabel>\r\n                  <StatNumber>{cashoutAmt}</StatNumber>\r\n                  <StatHelpText>\r\n                    <StatArrow type=\"decrease\" />\r\n                    Lose {cashoutAmt} HMTKN\r\n                  </StatHelpText>\r\n                  <StatHelpText>\r\n                    <Text fontSize=\"xs\">{mainTokenAddr}</Text>\r\n                  </StatHelpText>\r\n                </Stat>\r\n              </StatGroup>\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n\r\n        <ModalFooter>\r\n          <Button colorScheme=\"blue\" mr={3} onClick={onClose} variant=\"outline\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            colorScheme=\"whatsapp\"\r\n            disabled={\r\n              cashoutAmt !== \"\" &&\r\n              BigNumber.from(cashoutAmt).gt(BigNumber.from(mainTknBalance))\r\n            }\r\n            onClick={cashoutHMTKN}\r\n          >\r\n            Cash out\r\n          </Button>\r\n        </ModalFooter>\r\n\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n          <FontAwesomeIcon\r\n            color=\"#48BB78\"\r\n            icon={faMoneyBillTransfer}\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          <Text as=\"cite\" my=\"5\">\r\n            Cash me outside howbow dah\r\n          </Text>\r\n        </Box>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  useToast,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  StatGroup,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  hwangMarket,\r\n  createAGame,\r\n  getGameAddrById,\r\n  getCurrentWalletConnected,\r\n  connectWallet,\r\n  web3,\r\n  mainTokenABI,\r\n  getMainTokenAddr,\r\n  getMainTokenBalance,\r\n} from \"../util/interact\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSun,\r\n  faMoon,\r\n  faHeart,\r\n  faEthernet,\r\n  faCashRegister,\r\n  faMoneyBill,\r\n  faMoneyBillTransfer,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { shortenAddr } from \"../util/helper\";\r\nimport { BigNumber } from \"ethers\";\r\nimport GetHMTKN from \"./hmtknModals/GetHMTKN\";\r\nimport CashoutHMTKN from \"./hmtknModals/CashoutHMTKN\";\r\n\r\nconst CommonTop = ({ wallet, setWallet, colorMode, toggleColorMode }) => {\r\n  const [status, setStatus] = useState(\"\");\r\n  const [hmtknAddr, setHmtknAddr] = useState(\"\");\r\n  const [hmtknBalance, setHmtknBalance] = useState(\"-\");\r\n  const [isGetHMTKN, setIsGetHMTKN] = useState(true);\r\n\r\n  const toast = useToast();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const addHMTKNTransferListener = async () => {\r\n    console.log(\"HMTKN transfer listener added\");\r\n    const mainTokenContract = new web3.eth.Contract(\r\n      mainTokenABI,\r\n      await getMainTokenAddr()\r\n    );\r\n    mainTokenContract.events.Transfer({}, (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        /*\r\n        from: \"0x3E0944145a5B83D03C09b93CD4CCdFaE6dd817AB\"\r\n        to: \"0xb50b7E6629901979580a440B8C066122506Ed7ae\"\r\n        value: \"4\"\r\n        */\r\n        if (String(details.to).toLowerCase() === String(wallet).toLowerCase()) {\r\n          toast({\r\n            title: \"HMTKN received!\",\r\n            description: `You have received ${\r\n              details.value\r\n            } HMTKN from ${shortenAddr(details.from)}`,\r\n            status: \"success\",\r\n            duration: 8000,\r\n            isClosable: true,\r\n          });\r\n\r\n          setHmtknBalance((prev) =>\r\n            BigNumber.from(prev).add(BigNumber.from(details.value)).toString()\r\n          );\r\n        } else if (\r\n          String(details.from).toLowerCase() === String(wallet).toLowerCase()\r\n        ) {\r\n          toast({\r\n            title: \"HMTKN sent!\",\r\n            description: `You have sent ${details.value} HMTKN to ${shortenAddr(\r\n              details.to\r\n            )}`,\r\n            status: \"success\",\r\n            duration: 8000,\r\n            isClosable: true,\r\n          });\r\n          setHmtknBalance((prev) =>\r\n            BigNumber.from(prev).sub(BigNumber.from(details.value)).toString()\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const connectWalletPressed = async () => {\r\n    if (wallet) {\r\n      return;\r\n    }\r\n    const walletResponse = await connectWallet();\r\n\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" href={`https://metamask.io/download`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchWallet() {\r\n      const { address, status } = await getCurrentWalletConnected();\r\n      setWallet(address);\r\n      setStatus(status);\r\n    }\r\n    fetchWallet();\r\n\r\n    async function updateHmtknMetadata() {\r\n      setHmtknBalance(await getMainTokenBalance(wallet));\r\n      setHmtknAddr(await getMainTokenAddr());\r\n    }\r\n    updateHmtknMetadata();\r\n\r\n    addWalletListener();\r\n    addHMTKNTransferListener();\r\n  }, [wallet]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Box display=\"flex\" p=\"5\" alignItems=\"center\" px=\"5%\" flexWrap=\"wrap\">\r\n      <Box _hover={{ cursor: \"pointer\" }} onClick={() => navigate(\"/\")}>\r\n        <Heading color=\"blue.600\">HWANGMARKET</Heading>\r\n        <Text>The only place to lose your money, fast.</Text>\r\n      </Box>\r\n      <Box\r\n        mr=\"auto\"\r\n        ml=\"24\"\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n        columnGap=\"16\"\r\n      >\r\n        <Button\r\n          variant=\"outline\"\r\n          colorScheme=\"facebook\"\r\n          borderRadius=\"13px\"\r\n          p=\"5\"\r\n          onClick={() => navigate(\"/\")}\r\n        >\r\n          Markets\r\n        </Button>\r\n        <Button\r\n          variant=\"outline\"\r\n          colorScheme=\"facebook\"\r\n          borderRadius=\"13px\"\r\n          p=\"5\"\r\n          onClick={() => navigate(\"/history\")}\r\n        >\r\n          History\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir=\"column\"\r\n          alignItems=\"flex-end\"\r\n          columnGap=\"5\"\r\n          rowGap=\"4\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n            rowGap=\"5\"\r\n            columnGap=\"10\"\r\n          >\r\n            <Button\r\n              onClick={toggleColorMode}\r\n              variant=\"outline\"\r\n              colorScheme={colorMode === \"dark\" ? \"orange\" : \"black\"}\r\n            >\r\n              {colorMode === \"light\" ? (\r\n                <FontAwesomeIcon icon={faMoon} />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faSun} />\r\n              )}\r\n            </Button>\r\n            <Box\r\n              display=\"flex\"\r\n              flexDir=\"column\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              rowGap=\"2\"\r\n            >\r\n              <Button\r\n                mt=\"2\"\r\n                onClick={connectWalletPressed}\r\n                variant=\"outline\"\r\n                colorScheme=\"linkedin\"\r\n              >\r\n                {wallet.length > 0 ? (\r\n                  \"Connected: \" + shortenAddr(wallet)\r\n                ) : (\r\n                  <span>Connect Wallet</span>\r\n                )}\r\n              </Button>\r\n              <Text>{status}</Text>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n            flexWrap=\"wrap\"\r\n            rowGap=\"5\"\r\n            columnGap=\"10\"\r\n          >\r\n            <Stat>\r\n              <StatLabel>HMTKN Balance</StatLabel>\r\n              <StatNumber>{hmtknBalance} HMTKN</StatNumber>\r\n              <StatHelpText>{shortenAddr(hmtknAddr)}</StatHelpText>\r\n            </Stat>\r\n            <Button\r\n              variant=\"outline\"\r\n              colorScheme=\"yellow\"\r\n              leftIcon={<FontAwesomeIcon icon={faHeart} />}\r\n              onClick={() => {\r\n                onOpen();\r\n                setIsGetHMTKN(true);\r\n              }}\r\n            >\r\n              Get HMTKN\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              colorScheme=\"whatsapp\"\r\n              leftIcon={<FontAwesomeIcon icon={faMoneyBillTransfer} />}\r\n              onClick={() => {\r\n                onOpen();\r\n                setIsGetHMTKN(false);\r\n              }}\r\n            >\r\n              Cash out HMTKN\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n\r\n      {isGetHMTKN ? (\r\n        <GetHMTKN wallet={wallet} isOpen={isOpen} onClose={onClose} />\r\n      ) : (\r\n        <CashoutHMTKN wallet={wallet} isOpen={isOpen} onClose={onClose} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CommonTop;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport { useRouteError } from \"react-router-dom\";\r\n\r\nexport default function ErrorPage() {\r\n  return (\r\n    <Box\r\n      my=\"16\"\r\n      display=\"flex\"\r\n      flexDir=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <h1>Oops!</h1>\r\n      <p>Sorry, an unexpected error has occurred.</p>\r\n      <p>\r\n        <i>Not Found</i>\r\n      </p>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  TableContainer,\r\n  Table,\r\n  TableCaption,\r\n  Thead,\r\n  Tr,\r\n  Td,\r\n  Th,\r\n  Tbody,\r\n  Tfoot,\r\n  Badge,\r\n  Tooltip,\r\n  Tag,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  Text,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { getGameTrxsByAddr, hwangMarket } from \"../util/interact\";\r\nimport { shortenAddr, sleep } from \"../util/helper\";\r\n\r\nexport default function GameTransactionsHistory({ gameAddr }) {\r\n  const [gameTrxs, setGameTrxs] = useState([]);\r\n  const [bgColor, setBgColor] = useState(\"\");\r\n  const { colorMode } = useColorMode();\r\n  /*\r\n    [\r\n      amount: \"1\"\r\n      betSide: \"1\"\r\n      gameAddr: \"0x439AB69D18De2aDEdBdde92146FDC14a155F3f8b\"\r\n      gameId: \"1\"\r\n      player: \"0xb50b7E6629901979580a440B8C066122506Ed\"\r\n    ]\r\n  */\r\n\r\n  const addPlayerJoinedGameListener = () => {\r\n    console.log(\"hwang market player joined game listener added\");\r\n    hwangMarket.events.PlayerJoinedGameEvent({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        setGameTrxs((prev) => [\r\n          ...prev,\r\n          {\r\n            ...details,\r\n            to: details.player,\r\n            from: gameAddr,\r\n            trxAmt: details.amount,\r\n            gameSide: details.betSide,\r\n          },\r\n        ]);\r\n        let color = \"\";\r\n        if (details.betSide === \"1\") {\r\n          color = colorMode === \"light\" ? \"#9AE6B4\" : \"#22543D\";\r\n        } else {\r\n          color = colorMode === \"light\" ? \"#FED7D7\" : \"#822727\";\r\n        }\r\n        setBgColor(color);\r\n        await sleep(1500);\r\n        // reset back to normal color\r\n        setBgColor(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateTrxs = async () => {\r\n      const trxs = await getGameTrxsByAddr(gameAddr);\r\n      setGameTrxs(trxs);\r\n    };\r\n    updateTrxs();\r\n    addPlayerJoinedGameListener();\r\n  }, [colorMode, gameAddr]);\r\n\r\n  return (\r\n    <Box>\r\n      <Heading my=\"5\" fontSize=\"xl\">\r\n        Latest Transactions\r\n      </Heading>\r\n      <TableContainer overflowY=\"scroll\" maxH=\"60vh\">\r\n        <Table variant=\"simple\">\r\n          <TableCaption>Transactions logged in game contract</TableCaption>\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Address</Th>\r\n              <Th>Amount (in HMTKN)</Th>\r\n              <Th>Prediction</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {gameTrxs && gameTrxs.length > 0 ? (\r\n              gameTrxs\r\n                .slice()\r\n                .reverse()\r\n                .map((trx, i) => (\r\n                  <Tr key={i} bgColor={i === 0 ? bgColor : \"\"}>\r\n                    <Td>\r\n                      <Popover>\r\n                        <PopoverTrigger>\r\n                          <Tag _hover={{ cursor: \"pointer\" }}>\r\n                            {shortenAddr(trx.to)}\r\n                          </Tag>\r\n                        </PopoverTrigger>\r\n                        <PopoverContent\r\n                          minW={{ base: \"100%\", lg: \"max-content\" }}\r\n                        >\r\n                          <PopoverArrow />\r\n                          <PopoverCloseButton />\r\n                          <PopoverHeader>Player Address</PopoverHeader>\r\n                          <PopoverBody>\r\n                            <Box>\r\n                              <Text fontSize=\"sm\">{trx.to}</Text>\r\n                            </Box>\r\n                          </PopoverBody>\r\n                        </PopoverContent>\r\n                      </Popover>\r\n                    </Td>\r\n                    <Td>{trx.trxAmt}</Td>\r\n                    <Td>\r\n                      {trx.gameSide === \"1\" ? (\r\n                        <Badge colorScheme=\"green\" variant=\"outline\">\r\n                          Yes\r\n                        </Badge>\r\n                      ) : (\r\n                        <Badge colorScheme=\"red\" variant=\"outline\">\r\n                          No\r\n                        </Badge>\r\n                      )}\r\n                    </Td>\r\n                  </Tr>\r\n                ))\r\n            ) : (\r\n              <Tr>\r\n                <Td>-</Td>\r\n                <Td>-</Td>\r\n                <Td>-</Td>\r\n              </Tr>\r\n            )}\r\n          </Tbody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  useColorMode,\r\n  Text,\r\n  TableContainer,\r\n  Table,\r\n  TableCaption,\r\n  Thead,\r\n  Tr,\r\n  Td,\r\n  Th,\r\n  Tbody,\r\n  Tfoot,\r\n  Badge,\r\n  Tooltip,\r\n  Tag,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  faPlus,\r\n  faPlusCircle,\r\n  faPlusSquare,\r\n  faQuestion,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { shortenAddr, sleep } from \"../util/helper\";\r\nimport { gameContractABI, web3 } from \"../util/interact\";\r\n\r\nexport default function GameActiveListings({\r\n  game,\r\n  setIsDialog,\r\n  onOpen,\r\n  gytAddr,\r\n  gntAddr,\r\n  hmtknAddr,\r\n  setIsCreate,\r\n  setListingSelected,\r\n}) {\r\n  // useEffect(() => {\r\n  //   getGameTrxs(gameAddr, setGameTrxs);\r\n  // }, [gameAddr]);\r\n  const [openListings, setOpenListings] = useState([]);\r\n  const [bgColor, setBgColor] = useState(\"\");\r\n  const [closedListings, setClosedListings] = useState([]);\r\n  const gameContract = new web3.eth.Contract(gameContractABI, game.addr);\r\n  const [delListing, setDelListing] = useState(null);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const addNewListingListener = () => {\r\n    console.log(\"game new listing listener added\");\r\n\r\n    gameContract.events.NewListing({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues.listingInfo;\r\n        /*\r\n          fulfilled: false\r\n          listingAddr: \"0xD2be281e9379F56fDB84C61973a6b341f495106F\"\r\n          listingId: \"0\"\r\n          player1: \"0xc55De8931433adB28eE7767782E716dD00F7DEd9\"\r\n          player2: \"0x0000000000000000000000000000000000000000\"\r\n          token1: \"0x2063eE55A823B9F80DB2Ee5Ef503abbC44347eeD\"\r\n          token1Amt: \"100\"\r\n          token2: \"0x1AB8b37A77DC9563190f1058AD72f00aa2698d96\"\r\n          token2Amt: \"150\"\r\n        */\r\n        if (!details.fulfilled) {\r\n          setOpenListings((prev) => [...prev, details]);\r\n        } else {\r\n          setClosedListings((prev) => [...prev, details]);\r\n        }\r\n        setBgColor(colorMode === \"light\" ? \"#9AE6B4\" : \"#22543D\");\r\n        await sleep(1500);\r\n        // reset back to normal color\r\n        setBgColor(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const addListingFulfilledListener = async () => {\r\n    if (!game) {\r\n      return;\r\n    }\r\n    console.log(\"listing fulfilled listener added\");\r\n    const gameContract = await new web3.eth.Contract(\r\n      gameContractABI,\r\n      game.addr\r\n    );\r\n    gameContract.events.ListingFulfilled({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues.listingInfo;\r\n        // let it shine red for 1.5s\r\n        setDelListing(details);\r\n        // trigger rerender\r\n        setOpenListings((prev) =>\r\n          prev.map((ol) => (ol.listingId === details.listingId ? details : ol))\r\n        );\r\n        await sleep(1500);\r\n\r\n        setOpenListings((prev) =>\r\n          prev.filter((ol) => ol.listingId !== details.listingId)\r\n        );\r\n        setClosedListings((prev) => [...prev, details]);\r\n        setDelListing(null);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addNewListingListener();\r\n    addListingFulfilledListener();\r\n\r\n    async function getAllListings() {\r\n      const listings = await gameContract.methods.getAllListings().call();\r\n      console.log(\"listings loaded in\", listings);\r\n      setOpenListings(listings.filter((l) => !l.fulfilled));\r\n      setClosedListings(listings.filter((l) => l.fulfilled));\r\n    }\r\n    getAllListings();\r\n  }, []);\r\n\r\n  const parseAddr = (addr) => {\r\n    return addr === gntAddr\r\n      ? \"GNT\"\r\n      : addr === gytAddr\r\n      ? \"GYT\"\r\n      : addr === hmtknAddr\r\n      ? \"HMTKN\"\r\n      : shortenAddr(addr);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n    // border=\"1px solid\"\r\n    // borderColor={colorMode === \"light\" ? \"gray\" : \"white\"}\r\n    // borderRadius=\"21px\"\r\n    >\r\n      <Box\r\n        mb=\"5\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Heading fontSize=\"xl\">Open Listings</Heading>\r\n        <Button\r\n          leftIcon={\r\n            <FontAwesomeIcon style={{ marginLeft: \"6px\" }} icon={faPlus} />\r\n          }\r\n          size=\"sm\"\r\n          colorScheme=\"teal\"\r\n          variant=\"outline\"\r\n          onClick={() => {\r\n            setIsDialog(false);\r\n            setIsCreate(true);\r\n            onOpen();\r\n          }}\r\n        >\r\n          Create Listing\r\n        </Button>\r\n      </Box>\r\n      <TableContainer overflowY=\"scroll\" maxH=\"60vh\">\r\n        <Table variant=\"simple\" size=\"sm\">\r\n          <TableCaption>\r\n            For convenience, GYT and GNT tokens refer to this game's tokens.\r\n            Other game's tokens are referred to by their address.\r\n          </TableCaption>\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Offered Token</Th>\r\n              <Th>Offered Amount</Th>\r\n              <Th>Expecting Token</Th>\r\n              <Th>Expecting Amount</Th>\r\n              <Th>Info</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {openListings && openListings.length > 0 ? (\r\n              openListings\r\n                .slice()\r\n                .reverse()\r\n                .map((ol, i) => (\r\n                  <Tr\r\n                    key={`${ol.listingId}|${ol.player2}|${ol.fulfilled}`}\r\n                    bgColor={\r\n                      delListing && delListing.listingId === ol.listingId\r\n                        ? colorMode === \"light\"\r\n                          ? \"#FED7D7\"\r\n                          : \"#822727\"\r\n                        : i === 0\r\n                        ? bgColor\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <Td fontWeight=\"bold\">{parseAddr(ol.token1)}</Td>\r\n                    <Td>{ol.token1Amt}</Td>\r\n                    <Td fontWeight=\"bold\">{parseAddr(ol.token2)}</Td>\r\n                    <Td>{ol.token2Amt}</Td>\r\n                    <Td>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        colorScheme=\"telegram\"\r\n                        variant=\"outline\"\r\n                        onClick={() => {\r\n                          setIsCreate(false);\r\n                          setIsDialog(false);\r\n                          setListingSelected(ol);\r\n                          onOpen();\r\n                        }}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </Td>\r\n                  </Tr>\r\n                ))\r\n            ) : (\r\n              <Tr>\r\n                <Td>-</Td>\r\n                <Td>-</Td>\r\n                <Td>-</Td>\r\n                <Td>-</Td>\r\n                <Td>-</Td>\r\n              </Tr>\r\n            )}\r\n          </Tbody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Link,\r\n  Button,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogCloseButton,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function GameErrorDialog({ errorMsg, onClose }) {\r\n  return (\r\n    <>\r\n      <AlertDialogHeader>Purchase failed</AlertDialogHeader>\r\n      <AlertDialogCloseButton />\r\n      <AlertDialogBody>\r\n        <Text>Sorry, something went wong! Your funds are still safe.</Text>\r\n        <Text>{errorMsg}</Text>\r\n      </AlertDialogBody>\r\n\r\n      <AlertDialogFooter>\r\n        <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onClose}>\r\n          Acknowledge\r\n        </Button>\r\n      </AlertDialogFooter>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Link,\r\n  Button,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogCloseButton,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function PurchaseConfirmationDialog({ trxHash, onClose }) {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <>\r\n      <AlertDialogHeader>Transaction confirmation 🚀</AlertDialogHeader>\r\n      <AlertDialogCloseButton />\r\n      <AlertDialogBody>\r\n        <Text>You can monitor your transaction at:</Text>\r\n        <Link\r\n          fontWeight=\"bold\"\r\n          color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n          isExternal\r\n          href={`https://goerli.etherscan.io/address/${trxHash}`}\r\n        >\r\n          {trxHash}\r\n          <FontAwesomeIcon icon={faExternalLink} />\r\n        </Link>\r\n        <Text>No further actions are needed on your end.</Text>\r\n        <Box pt=\"6\" mb=\"-6\">\r\n          <Text mt=\"8\" fontSize=\"11pt\" as=\"cite\">\r\n            Good luck! And may the odds be ever in your favour. 🦉\r\n          </Text>\r\n        </Box>\r\n      </AlertDialogBody>\r\n\r\n      <AlertDialogFooter>\r\n        <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onClose}>\r\n          Acknowledge\r\n        </Button>\r\n      </AlertDialogFooter>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogCloseButton,\r\n  Spinner,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Link,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  approveMainTokenSender,\r\n  getMainToken2SenderApprovalAmt,\r\n  getMainTokenBalance,\r\n  hwangMarketAddr,\r\n} from \"../../util/interact\";\r\n\r\nexport default function IncreaseAllowanceDialog({\r\n  wallet,\r\n  gameAddr,\r\n  onClose,\r\n  allowAmt,\r\n}) {\r\n  const [mainTknBalance, setMainTknBalance] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  useEffect(() => {\r\n    const getBalance = async () => {\r\n      setIsLoading(true);\r\n      setMainTknBalance(await getMainTokenBalance(wallet));\r\n      setIsLoading(false);\r\n    };\r\n    getBalance();\r\n  }, [wallet]);\r\n\r\n  const doApprove = async () => {\r\n    await approveMainTokenSender(wallet, gameAddr, allowAmt);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AlertDialogHeader>Increase allowance 🚀</AlertDialogHeader>\r\n      <AlertDialogCloseButton />\r\n\r\n      <AlertDialogBody>\r\n        {isLoading ? (\r\n          <Box display=\"flex\" columnGap=\"3\" alignItems=\"center\">\r\n            <Text>Fetching your balance</Text>\r\n            <Spinner color=\"red\" />\r\n          </Box>\r\n        ) : (\r\n          <Box>\r\n            <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n              <Text>Your HMTKN balance:</Text>\r\n              <Heading size=\"sm\">{mainTknBalance} HMTKN</Heading>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" my=\"3\" columnGap=\"2\">\r\n              <Text>Allowance amount:</Text>\r\n              <Heading size=\"sm\">{allowAmt} HMTKN</Heading>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n              <Text>Approved sender:</Text>\r\n              <Heading size=\"sm\">{gameAddr}</Heading>\r\n            </Box>\r\n            {allowAmt > mainTknBalance && (\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                my=\"2\"\r\n                border=\"1px solid red\"\r\n                borderRadius=\"15px\"\r\n                textAlign=\"center\"\r\n                px=\"6\"\r\n                py=\"2.5\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faX}\r\n                  color=\"red\"\r\n                  style={{ marginRight: \"16px\" }}\r\n                />\r\n                <Text>\r\n                  You cannot allow more than you own. Get more HMTKN and try\r\n                  again.\r\n                </Text>\r\n              </Box>\r\n            )}\r\n            <Box my=\"5\">\r\n              <Heading size=\"md\" my=\"2\">\r\n                FAQ 🙋\r\n              </Heading>\r\n              <Accordion maxW=\"550px\" allowToggle>\r\n                <AccordionItem>\r\n                  <Heading>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        What does it mean to approve?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </Heading>\r\n                  <AccordionPanel pb={4}>\r\n                    Our tokens (\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      HMTKN and other game tokens\r\n                    </span>\r\n                    ) all conform to the{\" \"}\r\n                    <Link\r\n                      isExternal\r\n                      href={\r\n                        \"https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20\"\r\n                      }\r\n                      color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                    >\r\n                      IERC20 token standard\r\n                    </Link>\r\n                    . This means that for all transactions involving a third\r\n                    party contract to safely execute a transfer on behalf of\r\n                    you, you would have to explicitly give it permission to do\r\n                    so. In this case, you are allowing this specific game\r\n                    contract to transfer your{\" \"}\r\n                    <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens out\r\n                    of your balance in exchange for the game token.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n\r\n                <AccordionItem>\r\n                  <Heading>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        How do I know I can trust you?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </Heading>\r\n                  <AccordionPanel pb={4}>\r\n                    Fantastic question! Here at HwangMarket<span>&copy;</span>,\r\n                    we pride ourselves on transparency and urge you to in fact\r\n                    not trust us, or anyone on the internet for that matter! Our\r\n                    contracts are available to be reviewed in full{\" \"}\r\n                    <Link\r\n                      isExternal\r\n                      color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                      href={`https://goerli.etherscan.io/address/${hwangMarketAddr}`}\r\n                    >\r\n                      here\r\n                    </Link>\r\n                    .\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n\r\n                <AccordionItem>\r\n                  <Heading>\r\n                    <AccordionButton>\r\n                      <Box flex=\"1\" textAlign=\"left\">\r\n                        Does this mean I get my game tokens after approving?\r\n                      </Box>\r\n                      <AccordionIcon />\r\n                    </AccordionButton>\r\n                  </Heading>\r\n                  <AccordionPanel pb={4}>\r\n                    No, approving does not actually transfer any tokens. Your{\" \"}\r\n                    <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens are\r\n                    still all intact with you until you actually complete the\r\n                    transaction by pressing the Mint Game Tokens button later.\r\n                    In which case, the actual exchange of your{\" \"}\r\n                    <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens for\r\n                    the requested game tokens are executed.\r\n                  </AccordionPanel>\r\n                </AccordionItem>\r\n              </Accordion>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </AlertDialogBody>\r\n\r\n      <AlertDialogFooter>\r\n        {allowAmt > mainTknBalance ? (\r\n          <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onClose}>\r\n            Acknowledge\r\n          </Button>\r\n        ) : (\r\n          <Button colorScheme=\"green\" variant=\"outline\" onClick={doApprove}>\r\n            Approve\r\n          </Button>\r\n        )}\r\n      </AlertDialogFooter>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Link,\r\n  Select,\r\n  FormLabel,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  FormControl,\r\n  Button,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  Input,\r\n  Code,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport { listTokensUp } from \"../../util/interact\";\r\nimport { Link as routerLink } from \"react-router-dom\";\r\n\r\nexport default function CreateListingDrawer({\r\n  wallet,\r\n  gytAddr,\r\n  gytBalance,\r\n  gntAddr,\r\n  gntBalance,\r\n  hmtknAddr,\r\n  toast,\r\n  onClose,\r\n}) {\r\n  /*\r\n    create listing states\r\n  */\r\n  const [offeredTokenAddr, setOfferedTokenAddr] = useState(\"\");\r\n  const [offeredTokenAmt, setOfferedTokenAmt] = useState(\"\");\r\n\r\n  const [expectedTokenAddr, setExpectedTokenAddr] = useState(\"\");\r\n  const [customExpectedTokenAddr, setCustomExpectedTokenAddr] = useState(\"\");\r\n  const [expectedTokenAmt, setExpectedTokenAmt] = useState(\"\");\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  const pressCreateListing = async () => {\r\n    const { trxHash, err } = await listTokensUp(\r\n      wallet,\r\n      offeredTokenAddr,\r\n      offeredTokenAmt,\r\n      customExpectedTokenAddr ? customExpectedTokenAddr : expectedTokenAddr,\r\n      expectedTokenAmt\r\n    );\r\n    if (err) {\r\n      toast({\r\n        title: \"Transaction failed!\",\r\n        description: err,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Creating listing...\",\r\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\r\n        status: \"info\",\r\n        duration: 20000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n    setOfferedTokenAddr(\"\");\r\n    setOfferedTokenAmt(\"\");\r\n    setExpectedTokenAddr(\"\");\r\n    setCustomExpectedTokenAddr(\"\");\r\n    setExpectedTokenAmt(\"\");\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <DrawerContent>\r\n      <DrawerCloseButton />\r\n      <DrawerHeader mt=\"2\" fontSize=\"2xl\" mb=\"4\">\r\n        Create a new listing 🚀\r\n      </DrawerHeader>\r\n\r\n      <DrawerBody display=\"flex\" flexDir=\"column\" rowGap=\"8\">\r\n        <FormControl isRequired>\r\n          <FormLabel>Bid Token</FormLabel>\r\n          <Select\r\n            placeholder=\"Select bid token\"\r\n            onChange={(e) => {\r\n              setOfferedTokenAddr(e.target.value);\r\n              setOfferedTokenAmt(\"\");\r\n            }}\r\n          >\r\n            <option value={gytAddr}>GYT ({gytAddr})</option>\r\n            <option value={gntAddr}>GNT ({gntAddr})</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl isRequired>\r\n          <FormLabel>Bid Token Amount</FormLabel>\r\n          {offeredTokenAddr && (\r\n            <Text fontWeight=\"bold\" mb=\"3\">\r\n              Available balance:\r\n              <span style={{ marginLeft: \"5px\" }}>\r\n                {offeredTokenAddr === gytAddr ? gytBalance : gntBalance}\r\n              </span>\r\n            </Text>\r\n          )}\r\n\r\n          <NumberInput\r\n            value={offeredTokenAmt}\r\n            min={1}\r\n            max={offeredTokenAddr === gytAddr ? gytBalance : gntBalance}\r\n            onChange={(v) => setOfferedTokenAmt(v)}\r\n          >\r\n            <NumberInputField />\r\n            <NumberInputStepper>\r\n              <NumberIncrementStepper />\r\n              <NumberDecrementStepper />\r\n            </NumberInputStepper>\r\n          </NumberInput>\r\n        </FormControl>\r\n\r\n        <FormControl isRequired>\r\n          <FormLabel>Ask Token</FormLabel>\r\n          <Select\r\n            placeholder=\"Select ask token\"\r\n            onChange={(e) => {\r\n              if (e.target.value !== \"custom\") {\r\n                setCustomExpectedTokenAddr(\"\");\r\n              }\r\n              setExpectedTokenAddr(e.target.value);\r\n              setExpectedTokenAmt(\"\");\r\n            }}\r\n          >\r\n            <option value={gytAddr}>GYT ({gytAddr})</option>\r\n            <option value={gntAddr}>GNT ({gntAddr})</option>\r\n            <option value={hmtknAddr}>HMTKN ({hmtknAddr})</option>\r\n            <option value=\"custom\">Custom Token</option>\r\n          </Select>\r\n        </FormControl>\r\n        {expectedTokenAddr === \"custom\" && (\r\n          <>\r\n            <FormControl isRequired>\r\n              <FormLabel>Custom token address</FormLabel>\r\n              <Input\r\n                onChange={(e) => {\r\n                  setCustomExpectedTokenAddr(e.target.value);\r\n                }}\r\n                value={customExpectedTokenAddr}\r\n              />\r\n              <Text fontSize=\"sm\" mt=\"3\">\r\n                We allow any token that implements the{\" \"}\r\n                <Code\r\n                  fontSize=\"sm\"\r\n                  children=\"IListableToken\"\r\n                  colorScheme=\"teal\"\r\n                />{\" \"}\r\n                interface to be listed on our frontend. If you are looking to\r\n                trade HwangMarket games' tokens across different games, this is\r\n                fully supported, just enter the token's address. However, if you\r\n                are looking to trade a different{\" \"}\r\n                <Code fontSize=\"sm\" children=\"ERC20\" colorScheme=\"yellow\" />{\" \"}\r\n                compliant token minted outside of HwangMarket, unless the other\r\n                token is compliant with{\" \"}\r\n                <Code\r\n                  fontSize=\"sm\"\r\n                  children=\"IListableToken\"\r\n                  colorScheme=\"teal\"\r\n                />\r\n                , our frontend does not support that, although it is entirely\r\n                possible to still perform the swap so long as it is{\" \"}\r\n                <Code fontSize=\"sm\" children=\"ERC20\" colorScheme=\"yellow\" />{\" \"}\r\n                compliant, just not via the UI we have built out. We answer this\r\n                in more detail under our{\" \"}\r\n                <Link\r\n                  color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                  as={routerLink}\r\n                  to=\"/faq\"\r\n                >\r\n                  FAQ\r\n                </Link>\r\n                .\r\n              </Text>\r\n            </FormControl>\r\n          </>\r\n        )}\r\n\r\n        <FormControl isRequired>\r\n          <FormLabel>Ask Token Amount</FormLabel>\r\n          <NumberInput\r\n            value={expectedTokenAmt}\r\n            min={1}\r\n            onChange={(v) => setExpectedTokenAmt(v)}\r\n          >\r\n            <NumberInputField />\r\n            <NumberInputStepper>\r\n              <NumberIncrementStepper />\r\n              <NumberDecrementStepper />\r\n            </NumberInputStepper>\r\n          </NumberInput>\r\n        </FormControl>\r\n\r\n        <Box ml=\"auto\" my=\"6\" mx=\"auto\">\r\n          <Button\r\n            variant=\"outline\"\r\n            mr=\"16\"\r\n            onClick={onClose}\r\n            colorScheme=\"telegram\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"whatsapp\"\r\n            variant=\"outline\"\r\n            onClick={pressCreateListing}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Box>\r\n      </DrawerBody>\r\n      <DrawerFooter>\r\n        <Heading as=\"cite\" fontSize=\"md\" fontWeight=\"bold\" mx=\"auto\" my=\"15\">\r\n          <span style={{ marginRight: \"15px\" }}>⭐</span> \"Fortune Favours The\r\n          Brave\" - Virgil <span style={{ marginLeft: \"15px\" }}>⭐</span>\r\n        </Heading>\r\n      </DrawerFooter>\r\n    </DrawerContent>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  FormLabel,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  FormControl,\r\n  Button,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  Text,\r\n  useColorMode,\r\n  Link,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n  StatGroup,\r\n  Divider,\r\n  Badge,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { acceptTokenExchange, getERC20Tokenbalance } from \"../../util/interact\";\r\n\r\nexport default function ListingDetailDrawer({\r\n  wallet,\r\n  onClose,\r\n  listingSelected,\r\n  toast,\r\n}) {\r\n  /*\r\n    fulfilled: false\r\n    listingAddr: \"0xD2be281e9379F56fDB84C61973a6b341f495106F\"\r\n    listingId: \"0\"\r\n    player1: \"0xc55De8931433adB28eE7767782E716dD00F7DEd9\"\r\n    player2: \"0x0000000000000000000000000000000000000000\"\r\n    token1: \"0x2063eE55A823B9F80DB2Ee5Ef503abbC44347eeD\"\r\n    token1Amt: \"100\"\r\n    token2: \"0x1AB8b37A77DC9563190f1058AD72f00aa2698d96\"\r\n    token2Amt: \"150\"\r\n  */\r\n\r\n  const { colorMode } = useColorMode();\r\n  const [token2Balance, setToken2Balance] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const updateTokenBalance = async () => {\r\n      setToken2Balance(\r\n        await getERC20Tokenbalance(wallet, listingSelected.token2)\r\n      );\r\n    };\r\n\r\n    updateTokenBalance();\r\n  }, []);\r\n\r\n  const triggerAcceptListing = async () => {\r\n    const { trxHash, err } = await acceptTokenExchange(wallet, listingSelected);\r\n    if (err) {\r\n      toast({\r\n        title: \"Transaction failed!\",\r\n        description: err,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Accepting listing...\",\r\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\r\n        status: \"info\",\r\n        duration: 20000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {listingSelected ? (\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          {token2Balance === -1 ? (\r\n            <Box textAlign=\"center\" my=\"auto\">\r\n              <Spinner size=\"xl\" color=\"red.500\" mx=\"auto\" />\r\n              <Text my=\"4\" fontSize=\"sm\">\r\n                Hang on, we are fetching some stuff...\r\n              </Text>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              <DrawerHeader mt=\"2\" fontSize=\"2xl\" mb=\"4\">\r\n                Listing Information ✨\r\n              </DrawerHeader>\r\n\r\n              <DrawerBody display=\"flex\" flexDir=\"column\" rowGap=\"3.5\">\r\n                <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n                  <Heading size=\"sm\">Listing contract address: </Heading>\r\n                  <Link\r\n                    isExternal\r\n                    href={`https://goerli.etherscan.io/address/${listingSelected.listingAddr}`}\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                  >\r\n                    {listingSelected.listingAddr}\r\n\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"6px\" }}\r\n                      icon={faExternalLink}\r\n                    />\r\n                  </Link>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n                  <Heading size=\"sm\">Creator address: </Heading>\r\n                  <Link\r\n                    isExternal\r\n                    href={`https://goerli.etherscan.io/address/${listingSelected.player1}`}\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                  >\r\n                    {listingSelected.player1}\r\n\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"6px\" }}\r\n                      icon={faExternalLink}\r\n                    />\r\n                  </Link>\r\n                </Box>\r\n\r\n                <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n                  <Heading size=\"sm\">Listing status: </Heading>\r\n                  <Badge\r\n                    colorScheme={listingSelected.fulfilled ? \"red\" : \"whatsapp\"}\r\n                    variant=\"outline\"\r\n                  >\r\n                    {listingSelected.fulfilled ? \"Closed\" : \"Open\"}\r\n                  </Badge>\r\n                </Box>\r\n                <Divider my=\"4\" />\r\n                <Heading size=\"md\">Listing Summary for you</Heading>\r\n                <Box>\r\n                  <StatGroup mt=\"3\" mb=\"4\">\r\n                    <Stat>\r\n                      <StatLabel>Offering</StatLabel>\r\n                      <StatNumber>{listingSelected.token1Amt}</StatNumber>\r\n                      <StatHelpText\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        columnGap=\"1\"\r\n                      >\r\n                        <StatArrow type=\"increase\" />\r\n                        Offered token:\r\n                        <Link\r\n                          isExternal\r\n                          href={`https://goerli.etherscan.io/address/${listingSelected.token1}`}\r\n                          display=\"flex\"\r\n                          alignItems=\"center\"\r\n                          color={\r\n                            colorMode === \"light\" ? \"teal.700\" : \"teal.300\"\r\n                          }\r\n                          fontSize=\"sm\"\r\n                        >\r\n                          {listingSelected.token1}\r\n\r\n                          <FontAwesomeIcon\r\n                            style={{ marginLeft: \"6px\" }}\r\n                            icon={faExternalLink}\r\n                          />\r\n                        </Link>\r\n                      </StatHelpText>\r\n                    </Stat>\r\n                  </StatGroup>\r\n\r\n                  <StatGroup>\r\n                    <Stat>\r\n                      <StatLabel>In exchange for</StatLabel>\r\n                      <StatNumber>{listingSelected.token2Amt}</StatNumber>\r\n                      <StatHelpText\r\n                        display=\"flex\"\r\n                        alignItems=\"center\"\r\n                        columnGap=\"1\"\r\n                      >\r\n                        <StatArrow type=\"decrease\" />\r\n                        Asked token:\r\n                        <Link\r\n                          isExternal\r\n                          href={`https://goerli.etherscan.io/address/${listingSelected.token2}`}\r\n                          display=\"flex\"\r\n                          alignItems=\"center\"\r\n                          color={\r\n                            colorMode === \"light\" ? \"teal.700\" : \"teal.300\"\r\n                          }\r\n                          fontSize=\"sm\"\r\n                        >\r\n                          {listingSelected.token2}\r\n\r\n                          <FontAwesomeIcon\r\n                            style={{ marginLeft: \"6px\" }}\r\n                            icon={faExternalLink}\r\n                          />\r\n                        </Link>\r\n                      </StatHelpText>\r\n                    </Stat>\r\n                  </StatGroup>\r\n\r\n                  <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n                    <Heading size=\"xs\">Your available balance: </Heading>\r\n                    <Text fontWeight=\"bold\">{token2Balance}</Text>\r\n                  </Box>\r\n\r\n                  {token2Balance < parseInt(listingSelected.token2Amt) ? (\r\n                    <Box\r\n                      p=\"3\"\r\n                      border=\"1px solid red\"\r\n                      borderRadius=\"17px\"\r\n                      w=\"fit-content\"\r\n                      mx=\"auto\"\r\n                      mt=\"7\"\r\n                    >\r\n                      <Text>\r\n                        ❌ You have insufficient balance to partake in this\r\n                        listing.{\" \"}\r\n                      </Text>\r\n                    </Box>\r\n                  ) : (\r\n                    <Box\r\n                      p=\"3\"\r\n                      border=\"1px solid green\"\r\n                      borderRadius=\"17px\"\r\n                      w=\"fit-content\"\r\n                      mx=\"auto\"\r\n                      my=\"4\"\r\n                    >\r\n                      <Text>\r\n                        ✅ You have sufficient balance to partake in this\r\n                        listing.{\" \"}\r\n                      </Text>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n\r\n                <Box ml=\"auto\" my=\"6\" mx=\"auto\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    mr=\"16\"\r\n                    onClick={onClose}\r\n                    colorScheme=\"telegram\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    colorScheme=\"whatsapp\"\r\n                    variant=\"outline\"\r\n                    disabled={\r\n                      token2Balance < parseInt(listingSelected.token2Amt)\r\n                    }\r\n                    onClick={triggerAcceptListing}\r\n                  >\r\n                    Accept\r\n                  </Button>\r\n                </Box>\r\n              </DrawerBody>\r\n            </>\r\n          )}\r\n\r\n          <DrawerFooter>\r\n            <Heading\r\n              as=\"cite\"\r\n              fontSize=\"md\"\r\n              fontWeight=\"bold\"\r\n              mx=\"auto\"\r\n              my=\"15\"\r\n            >\r\n              <span style={{ marginRight: \"15px\" }}>♦️</span>\r\n              <Link\r\n                textDecor=\"underline\"\r\n                href=\"https://youtu.be/yE4fYr47iRI\"\r\n                isExternal\r\n              >\r\n                You are something special\r\n              </Link>\r\n              <span style={{ marginLeft: \"15px\" }}>♦️</span>\r\n            </Heading>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      ) : (\r\n        <Text>Invalid listing</Text>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogCloseButton,\r\n  Spinner,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Link,\r\n  useColorMode,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  approveMainTokenSender,\r\n  approveTokenSender,\r\n  getMainToken2SenderApprovalAmt,\r\n  getMainTokenBalance,\r\n  getTokenAllowance,\r\n  hwangMarketAddr,\r\n} from \"../../util/interact\";\r\n\r\nexport default function ClaimWinningIncAllowanceDialog({\r\n  wallet,\r\n  gameAddr,\r\n  outcome,\r\n  onClose,\r\n  approvalAmt,\r\n  winningTokenAddr,\r\n}) {\r\n  const { colorMode } = useColorMode();\r\n  const toast = useToast();\r\n\r\n  const doApprove = async () => {\r\n    const trxHash = await approveTokenSender(\r\n      winningTokenAddr,\r\n      wallet,\r\n      gameAddr,\r\n      approvalAmt\r\n    );\r\n    if (!trxHash) {\r\n      toast({\r\n        title: \"Transaction failed!\",\r\n        description: \"The approval failed!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n\r\n      return;\r\n    }\r\n    toast({\r\n      title: \"Approval processing!\",\r\n      description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\r\n      status: \"info\",\r\n      duration: 20000,\r\n      isClosable: true,\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AlertDialogHeader>Approve Winning Token Transfer 🚀</AlertDialogHeader>\r\n      <AlertDialogCloseButton />\r\n\r\n      <AlertDialogBody>\r\n        <Box>\r\n          <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n            <Text>Your winning token balance:</Text>\r\n            <Heading size=\"sm\">\r\n              {approvalAmt} {outcome === \"1\" ? \"GYT\" : \"GNT\"}\r\n            </Heading>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" my=\"3\" columnGap=\"2\">\r\n            <Text>Allowance amount to approve:</Text>\r\n            <Heading size=\"sm\">\r\n              {approvalAmt} {outcome === \"1\" ? \"GYT\" : \"GNT\"}\r\n            </Heading>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n            <Text>Approved sender:</Text>\r\n            <Heading size=\"sm\">{gameAddr}</Heading>\r\n          </Box>\r\n          <Box my=\"5\">\r\n            <Heading size=\"md\" my=\"2\">\r\n              FAQ 🙋\r\n            </Heading>\r\n            <Accordion maxW=\"540px\" allowToggle>\r\n              <AccordionItem>\r\n                <Heading>\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      What does it mean to approve?\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </Heading>\r\n                <AccordionPanel pb={4}>\r\n                  Our tokens (\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    HMTKN and other game tokens\r\n                  </span>\r\n                  ) all conform to the{\" \"}\r\n                  <Link\r\n                    isExternal\r\n                    href={\r\n                      \"https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20\"\r\n                    }\r\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                  >\r\n                    IERC20 token standard\r\n                  </Link>\r\n                  . This means that for all transactions involving a third party\r\n                  contract to safely execute a transfer on behalf of you, you\r\n                  would have to explicitly give it permission to do so. In this\r\n                  case, you are allowing this specific game contract to transfer\r\n                  your <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens\r\n                  out of your balance in exchange for the game token.\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n\r\n              <AccordionItem>\r\n                <Heading>\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      How do I know I can trust you?\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </Heading>\r\n                <AccordionPanel pb={4}>\r\n                  Fantastic question! Here at HwangMarket<span>&copy;</span>, we\r\n                  pride ourselves on transparency and urge you to in fact not\r\n                  trust us, or anyone on the internet for that matter! Our\r\n                  contracts are available to be reviewed in full{\" \"}\r\n                  <Link\r\n                    isExternal\r\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                    href={`https://goerli.etherscan.io/address/${hwangMarketAddr}`}\r\n                  >\r\n                    here\r\n                  </Link>\r\n                  .\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n\r\n              <AccordionItem>\r\n                <Heading>\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      Does this mean I get my HMTKN winnings after approving?\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </Heading>\r\n                <AccordionPanel pb={4}>\r\n                  No, approving does not actually transfer any tokens. Your{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {outcome === \"1\" ? \"GYT\" : \"GNT\"}\r\n                  </span>{\" \"}\r\n                  tokens are still all intact with you until you actually\r\n                  complete the transaction by pressing the Mint Game Tokens\r\n                  button later. In which case, the actual exchange of your{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {outcome === \"1\" ? \"GYT\" : \"GNT\"}\r\n                  </span>{\" \"}\r\n                  tokens for the requested HMTKN are executed.\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n              <AccordionItem>\r\n                <Heading>\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      How do I claim my winning in terms of ETH?\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </Heading>\r\n                <AccordionPanel pb={4}>\r\n                  We currently only support exchanging winning tokens for HMTKN,\r\n                  which you can than cash out for ETH, or the network's main\r\n                  token, using the Cash out button on the top menu.\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n            </Accordion>\r\n          </Box>\r\n        </Box>\r\n      </AlertDialogBody>\r\n\r\n      <AlertDialogFooter>\r\n        <Button colorScheme=\"green\" variant=\"outline\" onClick={doApprove}>\r\n          Approve\r\n        </Button>\r\n      </AlertDialogFooter>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogCloseButton,\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  useToast,\r\n  StatGroup,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  StatArrow,\r\n} from \"@chakra-ui/react\";\r\nimport { withdrawWinnings } from \"../../util/interact\";\r\nimport { shortenAddr } from \"../../util/helper\";\r\nimport { BigNumber } from \"ethers\";\r\n\r\nexport default function ClaimWinningDialog({\r\n  wallet,\r\n  gameAddr,\r\n  outcome,\r\n  onClose,\r\n  withdrawAmt,\r\n  hmtknAddr,\r\n  winningTokenAddr,\r\n  totalLoseAmt,\r\n  totalWinAmt,\r\n}) {\r\n  const toast = useToast();\r\n\r\n  const doClaimWinning = async () => {\r\n    const { trxHash, err } = await withdrawWinnings(\r\n      wallet,\r\n      gameAddr,\r\n      withdrawAmt\r\n    );\r\n    if (err) {\r\n      toast({\r\n        title: \"Transaction failed!\",\r\n        description: `The transfer failed! Error: ${err}`,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n\r\n      return;\r\n    }\r\n    toast({\r\n      title: \"Transfer processing!\",\r\n      description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\r\n      status: \"info\",\r\n      duration: 20000,\r\n      isClosable: true,\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  console.log(withdrawAmt);\r\n  const winningAmt = BigNumber.from(withdrawAmt).add(\r\n    BigNumber.from(withdrawAmt)\r\n      .div(totalWinAmt)\r\n      .mul(BigNumber.from(totalLoseAmt))\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AlertDialogHeader>Claim Winning 🚀</AlertDialogHeader>\r\n      <AlertDialogCloseButton />\r\n\r\n      <AlertDialogBody>\r\n        <Box>\r\n          <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\r\n            <Text>Approved sender:</Text>\r\n            <Heading size=\"sm\">{gameAddr}</Heading>\r\n          </Box>\r\n          <Box>\r\n            <Heading mt=\"8\" mb=\"4\" size=\"sm\">\r\n              Transaction Summary\r\n            </Heading>\r\n            <StatGroup w=\"100%\">\r\n              <Stat>\r\n                <StatLabel>HMTKN</StatLabel>\r\n                <StatNumber>{winningAmt.toString()}</StatNumber>\r\n                <StatHelpText>\r\n                  <StatArrow type=\"increase\" />\r\n                  Gain {winningAmt.toString()} HMTKN\r\n                </StatHelpText>\r\n                <StatHelpText>\r\n                  <Text fontSize=\"xs\">{shortenAddr(hmtknAddr)}</Text>\r\n                </StatHelpText>\r\n              </Stat>\r\n\r\n              <Stat>\r\n                <StatLabel>{outcome === \"1\" ? \"GYT\" : \"GNT\"}</StatLabel>\r\n                <StatNumber>{withdrawAmt}</StatNumber>\r\n                <StatHelpText>\r\n                  <StatArrow type=\"decrease\" />\r\n                  Lose {withdrawAmt} {outcome === \"1\" ? \"GYT\" : \"GNT\"}\r\n                </StatHelpText>\r\n                <StatHelpText>\r\n                  <Text fontSize=\"xs\">{shortenAddr(winningTokenAddr)}</Text>\r\n                </StatHelpText>\r\n              </Stat>\r\n            </StatGroup>\r\n          </Box>\r\n          <Box my=\"5\">\r\n            <Heading size=\"md\" my=\"2\">\r\n              FAQ 🙋\r\n            </Heading>\r\n            <Accordion maxW=\"550px\" allowToggle>\r\n              <AccordionItem>\r\n                <Heading>\r\n                  <AccordionButton>\r\n                    <Box flex=\"1\" textAlign=\"left\">\r\n                      How do I claim my winning in terms of ETH?\r\n                    </Box>\r\n                    <AccordionIcon />\r\n                  </AccordionButton>\r\n                </Heading>\r\n                <AccordionPanel pb={4}>\r\n                  We currently only support exchanging winning tokens for HMTKN,\r\n                  which you can than cash out for ETH, or the network's main\r\n                  token, using the Cash out button on the top menu.\r\n                </AccordionPanel>\r\n              </AccordionItem>\r\n            </Accordion>\r\n          </Box>\r\n        </Box>\r\n      </AlertDialogBody>\r\n\r\n      <AlertDialogFooter>\r\n        <Button colorScheme=\"green\" variant=\"outline\" onClick={doClaimWinning}>\r\n          Collect Winnings\r\n        </Button>\r\n      </AlertDialogFooter>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  useColorMode,\r\n  Link,\r\n  Tooltip,\r\n  Badge,\r\n  Divider,\r\n  StatGroup,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  Select,\r\n  FormLabel,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  FormControl,\r\n  Button,\r\n  AlertDialog,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  useDisclosure,\r\n  StatArrow,\r\n  Spinner,\r\n  Drawer,\r\n  DrawerOverlay,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  getGameById,\r\n  hwangMarket,\r\n  mintGameTokenFromMainToken,\r\n  getMainToken2SenderApprovalAmt,\r\n  getBalance,\r\n  getGameTokenAddrByGameAddr,\r\n  getGameTrxsByAddr,\r\n  getMainTokenAddr,\r\n  getMainTokenBalance,\r\n  listTokensUp,\r\n  gameContractABI,\r\n  web3,\r\n  getTokenAllowance,\r\n  hwangMarketAddr,\r\n  erc20TokenABI,\r\n  triggerResolve,\r\n} from \"../util/interact\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCircleQuestion,\r\n  faExternalLink,\r\n  faQuestion,\r\n  faQuestionCircle,\r\n  faX,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport GameTransactionsHistory from \"./GameTransactionsHistory\";\r\nimport GameActiveListings from \"./GameActiveListings\";\r\nimport GameErrorDialog from \"./GameDialogs/GameErrorDialog\";\r\nimport PurchaseConfirmationDialog from \"./GameDialogs/PurchaseConfirmationDialog\";\r\nimport IncreaseAllowanceDialog from \"./GameDialogs/IncreaseAllowanceDialog\";\r\nimport { game2MainConversionRate, shortenAddr, sleep } from \"../util/helper\";\r\nimport CreateListingDrawer from \"./GameDrawers/CreateListingDrawer\";\r\nimport ListingDetailDrawer from \"./GameDrawers/ListingDetailDrawer\";\r\nimport ClaimWinningIncAllowanceDialog from \"./GameDialogs/ClaimWinningIncAllowanceDialog\";\r\nimport ClaimWinningDialog from \"./GameDialogs/ClaimWinningDialog\";\r\nimport { BigNumber } from \"ethers\";\r\n\r\nexport default function Game({ wallet }) {\r\n  const { id } = useParams();\r\n  const [game, setGame] = useState(null);\r\n  const { colorMode } = useColorMode();\r\n\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [diffText, setDiffText] = useState(\"\");\r\n  const [buyTokenSide, setBuyTokenSide] = useState(\"0\");\r\n  const [buyTokenAmt, setBuyTokenAmt] = useState(\"\");\r\n  const [maxLimit, setMaxLimit] = useState(1000);\r\n  const [purchaseTrxHash, setPurchaseTrxHash] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [main2TknAllowance, setMain2TknAllowance] = useState(0);\r\n  const [hmtknBalance, setHmtknBalance] = useState(0);\r\n  const [gytBalance, setGytBalance] = useState(0);\r\n  const [gntBalance, setGntBalance] = useState(0);\r\n\r\n  const [hmtknAddr, setHmtknAddr] = useState(\"\");\r\n  const [gytAddr, setGytAddr] = useState(\"\");\r\n  const [gntAddr, setGntAddr] = useState(\"\");\r\n\r\n  const [isDialog, setIsDialog] = useState(true);\r\n  const [isCreate, setIsCreate] = useState(true);\r\n  const [winningTokenAllowance, setWinningTokenAllowance] = useState(0);\r\n  const [winningTokenBalance, setWinningTokenBalance] = useState(0);\r\n\r\n  const [listingSelected, setListingSelected] = useState(null);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const cancelRef = React.useRef();\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const getGame = async () => {\r\n      const game = await getGameById(id);\r\n      setGame(game);\r\n      const outcome = game.gameOutcome;\r\n      setGameOutcome(outcome);\r\n\r\n      if (outcome !== \"0\") {\r\n        setWinningTokenBalance(\r\n          await getBalance(wallet, game.addr, parseInt(outcome))\r\n        );\r\n        setWinningTokenAllowance(\r\n          await getTokenAllowance(\r\n            wallet,\r\n            game.addr,\r\n            outcome === \"1\" ? gytAddr : gntAddr\r\n          )\r\n        );\r\n      }\r\n    };\r\n    getGame();\r\n  }, [gntAddr, gytAddr, id, wallet]);\r\n\r\n  const triggerPurchase = async () => {\r\n    const { trxHash, err } = await mintGameTokenFromMainToken(\r\n      wallet,\r\n      game ? game.addr : \"\",\r\n      buyTokenSide,\r\n      buyTokenAmt,\r\n      maxLimit\r\n    );\r\n    if (trxHash) {\r\n      setErrorMsg(\"\");\r\n      setPurchaseTrxHash(trxHash);\r\n    } else {\r\n      setErrorMsg(err);\r\n    }\r\n    setBuyTokenSide(\"0\");\r\n    setBuyTokenAmt(0);\r\n    setIsDialog(true);\r\n    onOpen();\r\n  };\r\n\r\n  const addPlayerJoinedGameListener = () => {\r\n    console.log(\"hwang market player joined game listener added\");\r\n    hwangMarket.events.PlayerJoinedGameEvent({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        if (details.betSide === \"1\") {\r\n          setGame((prev) => {\r\n            const copy = JSON.parse(JSON.stringify(prev));\r\n            copy.betYesAmount =\r\n              parseInt(copy.betYesAmount) + parseInt(details.amount);\r\n            return copy;\r\n          });\r\n        } else {\r\n          setGame((prev) => {\r\n            const copy = JSON.parse(JSON.stringify(prev));\r\n            copy.betNoAmount =\r\n              parseInt(copy.betNoAmount) + parseInt(details.amount);\r\n            return copy;\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const addNewListingListener = async () => {\r\n    if (!game) {\r\n      return;\r\n    }\r\n    console.log(\"new listing listener added\");\r\n    const gameContract = await new web3.eth.Contract(\r\n      gameContractABI,\r\n      game.addr\r\n    );\r\n    gameContract.events.NewListing({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        // const details = data.returnValues;\r\n        toast({\r\n          title: \"Listing created!\",\r\n          description: \"A new listing has been created!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const addListingFulfilledListener = async () => {\r\n    if (!game) {\r\n      return;\r\n    }\r\n    console.log(\"listing fulfilled listener added\");\r\n    const gameContract = await new web3.eth.Contract(\r\n      gameContractABI,\r\n      game.addr\r\n    );\r\n    gameContract.events.ListingFulfilled({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        // const details = data.returnValues;\r\n        toast({\r\n          title: \"Listing Fulfilled!\",\r\n          description: \"A listing has been fulfilled!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const addHMTKNApprovalListener = async () => {\r\n    if (!hmtknAddr) {\r\n      return;\r\n    }\r\n    console.log(\"HMTKN approval listener added\");\r\n    const tokenContract = await new web3.eth.Contract(erc20TokenABI, hmtknAddr);\r\n    tokenContract.events.Approval({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        if (details.owner.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"Approval success!\",\r\n            description: `You have approved ${shortenAddr(\r\n              details.spender\r\n            )} as a spender for ${details.value} HMTKN!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n\r\n          if (\r\n            game &&\r\n            details.spender.toLowerCase() === game.addr.toLowerCase()\r\n          ) {\r\n            setMain2TknAllowance(details.value);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addHMTKNApprovalListener();\r\n  }, [hmtknAddr]);\r\n\r\n  const addGYTListener = async () => {\r\n    if (!gytAddr) {\r\n      return;\r\n    }\r\n    console.log(\"gyt listener added\");\r\n    const tokenContract = await new web3.eth.Contract(erc20TokenABI, gytAddr);\r\n    tokenContract.events.Approval({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        if (details.owner.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"Approval success!\",\r\n            description: `You have approved ${shortenAddr(\r\n              details.spender\r\n            )} as a spender for ${details.value} GYT!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n\r\n          if (game.gameOutcome === \"1\") {\r\n            setWinningTokenAllowance(details.value);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    tokenContract.events.Transfer({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        if (details.from.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"GYT Transfer success!\",\r\n            description: `You have transferred ${\r\n              details.value\r\n            } GYT to ${shortenAddr(details.to)}!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n          setGytBalance((prev) =>\r\n            BigNumber.from(prev).sub(BigNumber.from(details.value)).toString()\r\n          );\r\n        } else if (details.to.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"GYT Transfer success!\",\r\n            description: `You have received ${\r\n              details.value\r\n            } GYT from ${shortenAddr(details.to)}!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n          setGytBalance((prev) =>\r\n            BigNumber.from(prev).add(BigNumber.from(details.value)).toString()\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addGYTListener();\r\n  }, [gytAddr]);\r\n\r\n  const addGNTApprovalListener = async () => {\r\n    if (!gntAddr) {\r\n      return;\r\n    }\r\n    console.log(\"gnt approval listener added\");\r\n    const tokenContract = await new web3.eth.Contract(erc20TokenABI, gntAddr);\r\n    tokenContract.events.Approval({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        if (details.owner.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"Approval success!\",\r\n            description: `You have approved ${shortenAddr(\r\n              details.spender\r\n            )} as a spender for ${details.value} GNT!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n\r\n          if (game.gameOutcome === \"2\") {\r\n            setWinningTokenAllowance(details.value);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    tokenContract.events.Transfer({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        const details = data.returnValues;\r\n        if (details.from.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"GNT Transfer success!\",\r\n            description: `You have transferred ${\r\n              details.value\r\n            } GNT to ${shortenAddr(details.to)}!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n          setGntBalance((prev) =>\r\n            BigNumber.from(prev).sub(BigNumber.from(details.value)).toString()\r\n          );\r\n        } else if (details.to.toLowerCase() === wallet.toLowerCase()) {\r\n          toast({\r\n            title: \"GNT Transfer success!\",\r\n            description: `You have received ${\r\n              details.value\r\n            } GNT from ${shortenAddr(details.to)}!`,\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n          setGntBalance((prev) =>\r\n            BigNumber.from(prev).add(BigNumber.from(details.value)).toString()\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addGNTApprovalListener();\r\n  }, [gntAddr]);\r\n\r\n  useEffect(() => {\r\n    const updateAllowance = async () => {\r\n      setMain2TknAllowance(\r\n        await getMainToken2SenderApprovalAmt(wallet, game && game.addr)\r\n      );\r\n    };\r\n    const setBalance = async () => {\r\n      setHmtknBalance(await getMainTokenBalance(wallet));\r\n      setGytBalance(await getBalance(wallet, game && game.addr, 1));\r\n      setGntBalance(await getBalance(wallet, game && game.addr, 2));\r\n    };\r\n    const setGameTokenAddr = async () => {\r\n      setGytAddr(await getGameTokenAddrByGameAddr(game && game.addr, 1));\r\n      setGntAddr(await getGameTokenAddrByGameAddr(game && game.addr, 2));\r\n    };\r\n    const setMainTokenAddr = async () => {\r\n      setHmtknAddr(await getMainTokenAddr());\r\n    };\r\n\r\n    updateAllowance();\r\n    setBalance();\r\n    setGameTokenAddr();\r\n    setMainTokenAddr();\r\n  }, [wallet, game]);\r\n\r\n  useEffect(() => {\r\n    addNewListingListener();\r\n    addListingFulfilledListener();\r\n  }, [game && game.id]);\r\n\r\n  const addGameConcludedListener = async () => {\r\n    if (!game) {\r\n      return;\r\n    }\r\n    console.log(\"game concluded listener added\");\r\n    hwangMarket.events.GameConcluded({}, async (error, data) => {\r\n      if (error) {\r\n        console.log(\"listener error:\", error);\r\n      } else {\r\n        if (data.returnValues.gameId !== id) {\r\n          return;\r\n        }\r\n        const outcome = data.returnValues.gameOutcome;\r\n        toast({\r\n          title: \"Game concluded!\",\r\n          description: `The game has concluded with an outcome of \"${\r\n            outcome === \"1\" ? \"YES\" : \"NO\"\r\n          }\"!`,\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setGame((prev) => {\r\n          const copy = JSON.parse(JSON.stringify(prev));\r\n          copy.gameOutcome = outcome;\r\n          return copy;\r\n        });\r\n        setGameOutcome(data.returnValues.gameOutcome);\r\n        setWinningTokenBalance(\r\n          await getBalance(wallet, game.addr, parseInt(outcome))\r\n        );\r\n        setWinningTokenAllowance(\r\n          await getTokenAllowance(\r\n            wallet,\r\n            game.addr,\r\n            outcome === \"1\" ? gytAddr : gntAddr\r\n          )\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    addPlayerJoinedGameListener();\r\n  }, [game && game.id]);\r\n\r\n  useEffect(() => {\r\n    addGameConcludedListener();\r\n  }, [game && game.id]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      //assign interval to a variable to clear it.\r\n      let perc = Math.min(\r\n        Math.floor(\r\n          ((Date.now() / 1000 - game.createdTime) /\r\n            (game.resolveTime - game.createdTime)) *\r\n            100\r\n        ),\r\n        100\r\n      );\r\n      if (perc < 0) {\r\n        perc = 100;\r\n      }\r\n      setPercentage(perc);\r\n\r\n      const timeLeft = Math.max(\r\n        0,\r\n        Math.floor(game.resolveTime - Date.now() / 1000)\r\n      );\r\n      let s = \"\";\r\n      if (timeLeft === 0) {\r\n        setDiffText(\"Closed\");\r\n      } else if (timeLeft < 60) {\r\n        if (timeLeft > 1) {\r\n          s = \"s\";\r\n        }\r\n        setDiffText(`${timeLeft} second${s}`);\r\n      } else if (timeLeft < 60 * 60) {\r\n        if (Math.max(1, Math.floor(timeLeft / 60)) > 1) {\r\n          s = \"s\";\r\n        }\r\n        setDiffText(`${Math.max(1, Math.floor(timeLeft / 60))} minute${s}`);\r\n      } else if (timeLeft < 24 * 60 * 60) {\r\n        if (Math.max(1, Math.floor(timeLeft / (60 * 60))) > 1) {\r\n          s = \"s\";\r\n        }\r\n        setDiffText(\r\n          `${Math.max(1, Math.floor(timeLeft / (60 * 60)))} hour${s}`\r\n        );\r\n      } else {\r\n        setDiffText(\">24 hours\");\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId); //This is important\r\n  }, [game]);\r\n\r\n  const [gameOutcome, setGameOutcome] = useState(\"0\");\r\n\r\n  useEffect(() => {\r\n    // fetch game outcome\r\n    if (percentage !== 100) {\r\n      return;\r\n    }\r\n    const updateGameOutcome = async () => {\r\n      // update game outcome\r\n      const game = await getGameById(id);\r\n      const outcome = game.gameOutcome;\r\n      setGameOutcome(outcome);\r\n      setWinningTokenBalance(\r\n        await getBalance(wallet, game.addr, parseInt(outcome))\r\n      );\r\n      setWinningTokenAllowance(\r\n        await getTokenAllowance(\r\n          wallet,\r\n          game.addr,\r\n          outcome === \"1\" ? gytAddr : gntAddr\r\n        )\r\n      );\r\n    };\r\n\r\n    updateGameOutcome();\r\n  }, [gntAddr, gytAddr, id, percentage, wallet]);\r\n\r\n  /*\r\n    addr: \"0x64C3bb915Dd98231B3b2649A350B28d746a087Af\"\r\n    betNoAmount: \"0\"\r\n    betYesAmount: \"0\"\r\n    createdTime: \"1666719306\"\r\n    gameOutcome: \"0\"\r\n    id: \"2\"\r\n    ongoing: true\r\n    oracleAddr: \"0x0d79df66BE487753B02D015Fb622DED7f0E9798d\"\r\n    resolveTime: \"1666722600\"\r\n    tag: \"Price Feeds\"\r\n    threshold: \"200000000000\"\r\n    title: \"Hello world!\"\r\n    totalAmount: \"0\"\r\n  */\r\n\r\n  const lineWidth = 60;\r\n\r\n  return (\r\n    <Box m=\"8\" mx=\"16\">\r\n      {game ? (\r\n        <Box\r\n          pt=\"8\"\r\n          pb=\"16\"\r\n          px=\"5\"\r\n          border={colorMode === \"light\" ? \"1px solid gray\" : \"1px solid white\"}\r\n          borderRadius=\"30px\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-evenly\"\r\n            flexWrap=\"wrap\"\r\n            rowGap=\"3\"\r\n          >\r\n            <Box maxW=\"650px\">\r\n              <Heading>{game.title}</Heading>\r\n              <Badge mt=\"2\" colorScheme=\"green\" variant=\"outline\">\r\n                {game.tag}\r\n              </Badge>\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                my=\"8\"\r\n              >\r\n                <Box>\r\n                  <Box textAlign=\"center\">\r\n                    <Stat size=\"sm\">\r\n                      <StatLabel>Total Amount</StatLabel>\r\n                      <StatNumber>{game.totalAmount} HMTKN</StatNumber>\r\n                    </Stat>\r\n                  </Box>\r\n                  <Box\r\n                    my=\"5\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    columnGap=\"8\"\r\n                  >\r\n                    <Box>\r\n                      <Stat size=\"sm\">\r\n                        <StatLabel>Total Yes Amount</StatLabel>\r\n                        <StatNumber>{game.betYesAmount} HMTKN</StatNumber>\r\n                      </Stat>\r\n                    </Box>\r\n                    <Box>\r\n                      <Stat size=\"sm\">\r\n                        <StatLabel>Total No Amount</StatLabel>\r\n                        <StatNumber>{game.betNoAmount} HMTKN</StatNumber>\r\n                      </Stat>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n                <Box>\r\n                  <PieChart\r\n                    style={{\r\n                      fontFamily:\r\n                        '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\r\n                      fontSize: \"8px\",\r\n                    }}\r\n                    data={[\r\n                      {\r\n                        title: \"No\",\r\n                        value: Math.max(0.01, parseInt(game.betNoAmount)),\r\n                        color: \"#FF1E1E\",\r\n                      },\r\n                      {\r\n                        title: \"Yes\",\r\n                        value: Math.max(0.01, parseInt(game.betYesAmount)),\r\n                        color: \"#3CCF4E\",\r\n                      },\r\n                    ]}\r\n                    radius={50}\r\n                    lineWidth={60}\r\n                    segmentsStyle={{\r\n                      transition: \"stroke .3s\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    animate\r\n                    label={({ dataEntry }) => dataEntry.title}\r\n                    labelPosition={100 - lineWidth / 2}\r\n                    labelStyle={{\r\n                      fill: colorMode === \"light\" ? \"#1A202C\" : \"#EDF2F7\",\r\n                      pointerEvents: \"none\",\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\"\r\n                columnGap=\"5\"\r\n                // bgColor={colorMode === \"light\" ? \"cyan.100\" : \"\"}\r\n                borderRadius=\"25px\"\r\n                // p=\"8\"\r\n                px=\"5\"\r\n                py=\"7\"\r\n                border={\r\n                  colorMode === \"light\" ? \"1px solid gray\" : \"1px solid white\"\r\n                }\r\n              >\r\n                <Box whiteSpace=\"nowrap\">\r\n                  <Text>Game outcome:</Text>\r\n                  <Text>Contract creation time:</Text>\r\n                  <Text>Contract address:</Text>\r\n                  <Text>Oracle address:</Text>\r\n                  <Text>Threshold for resolution:</Text>\r\n                </Box>\r\n                <Box>\r\n                  <Badge\r\n                    fontSize=\"1em\"\r\n                    variant=\"outline\"\r\n                    colorScheme={\r\n                      game.gameOutcome === \"0\"\r\n                        ? \"purple\"\r\n                        : game.gameOutcome === \"1\"\r\n                        ? \"green\"\r\n                        : \"red\"\r\n                    }\r\n                  >\r\n                    {game.gameOutcome === \"0\"\r\n                      ? \"TBD\"\r\n                      : game.gameOutcome === \"1\"\r\n                      ? \"Yes\"\r\n                      : \"No\"}\r\n                  </Badge>\r\n                  <Text>{game.createdTime}</Text>\r\n\r\n                  <Link\r\n                    isExternal\r\n                    href={`https://goerli.etherscan.io/address/${game.addr}`}\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                  >\r\n                    {game.addr}\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"6px\" }}\r\n                      icon={faExternalLink}\r\n                    />\r\n                  </Link>\r\n\r\n                  <Link\r\n                    isExternal\r\n                    href={`https://goerli.etherscan.io/address/${game.oracleAddr}`}\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\r\n                  >\r\n                    {game.oracleAddr}\r\n                    <FontAwesomeIcon\r\n                      style={{ marginLeft: \"6px\" }}\r\n                      icon={faExternalLink}\r\n                    />\r\n                  </Link>\r\n\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Text>{game.threshold}</Text>\r\n                    <Tooltip\r\n                      label=\"Higher than or equal to threshold results in an outcome of Yes.\"\r\n                      fontSize=\"md\"\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        style={{ marginLeft: \"6px\" }}\r\n                        icon={faQuestion}\r\n                      />\r\n                    </Tooltip>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Divider my=\"10\" />\r\n              <Box>\r\n                <GameTransactionsHistory gameAddr={game && game.addr} />\r\n              </Box>\r\n            </Box>\r\n            <Box display=\"flex\" flexDir=\"column\">\r\n              <Box w=\"full\" textAlign=\"center\">\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  columnGap=\"2.5\"\r\n                  mt=\"3\"\r\n                  mb=\"7\"\r\n                  flexWrap=\"wrap\"\r\n                >\r\n                  <Text fontSize=\"xl\" whiteSpace=\"nowrap\">\r\n                    Resolution Time:\r\n                  </Text>\r\n                  <Text\r\n                    fontSize=\"lg\"\r\n                    fontWeight=\"bold\"\r\n                    whiteSpace=\"nowrap\"\r\n                    textDecor=\"underline\"\r\n                  >\r\n                    {new Intl.DateTimeFormat(\"en-US\", {\r\n                      year: \"numeric\",\r\n                      month: \"2-digit\",\r\n                      day: \"2-digit\",\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                      second: \"2-digit\",\r\n                      timeZoneName: \"short\",\r\n                    }).format(game.resolveTime * 1000)}\r\n                  </Text>\r\n                  {/* <Timestamp date={Date} /> */}\r\n                </Box>\r\n                <Box my=\"3\" mx=\"auto\" maxW=\"350px\">\r\n                  <Box>\r\n                    <CircularProgressbar\r\n                      value={percentage}\r\n                      text={diffText}\r\n                      strokeWidth={4}\r\n                      styles={buildStyles({\r\n                        textSize: \"14px\",\r\n                        textColor: colorMode === \"light\" ? \"black\" : \"white\",\r\n                        trailColor:\r\n                          colorMode === \"light\" ? \"#4A5568\" : \"#718096\",\r\n                        pathColor:\r\n                          colorMode === \"light\" ? \"#0BC5EA\" : \"#76E4F7\",\r\n                      })}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n\r\n                {percentage === 100 && game.gameOutcome === \"0\" && (\r\n                  <Box textAlign=\"center\">\r\n                    <Box w=\"500px\" mx=\"auto\" my=\"3\">\r\n                      <Text fontSize=\"sm\">\r\n                        Well this is awkward, it seems the game is already over\r\n                        but our auto trigger is late or not working correctly.\r\n                        Fret not, you can trigger the game resolution manually\r\n                        by clicking the button below.\r\n                      </Text>\r\n                      <Text fontSize=\"sm\" fontWeight=\"bold\">\r\n                        Note: You will be paying a small gas fee for the call.\r\n                        If you believe you are too early, maybe come back in a\r\n                        bit, our trigger runs hourly.\r\n                      </Text>\r\n                    </Box>\r\n                    <Button\r\n                      colorScheme=\"whatsapp\"\r\n                      variant=\"outline\"\r\n                      onClick={() => triggerResolve(wallet, game.addr)}\r\n                    >\r\n                      Resolve game\r\n                    </Button>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n\r\n              <Box>\r\n                {gameOutcome === \"0\" && (\r\n                  <>\r\n                    <Heading size=\"md\" mt=\"5\" mb=\"3\">\r\n                      Mintable token supply\r\n                    </Heading>\r\n                    <StatGroup>\r\n                      <Stat>\r\n                        <StatLabel>Exchange rate for 1 Game Token</StatLabel>\r\n                        <StatNumber>1 HMTKN</StatNumber>\r\n                        <StatHelpText>Fixed</StatHelpText>\r\n                      </Stat>\r\n                      <Stat>\r\n                        <StatLabel>Game Yes Token supply left</StatLabel>\r\n                        <StatNumber>{1000 - game.betYesAmount}</StatNumber>\r\n                      </Stat>\r\n                      <Stat>\r\n                        <StatLabel>Game No Token supply left</StatLabel>\r\n                        <StatNumber>{1000 - game.betNoAmount}</StatNumber>\r\n                      </Stat>\r\n                    </StatGroup>\r\n                  </>\r\n                )}\r\n                <Divider my=\"7\" />\r\n                <Heading size=\"md\" mb=\"3\">\r\n                  Owned tokens\r\n                </Heading>\r\n                <StatGroup w=\"100%\">\r\n                  <Stat>\r\n                    <StatLabel>Game Yes Token</StatLabel>\r\n                    <StatNumber>{gytBalance}</StatNumber>\r\n                    <StatHelpText>GYT (GameYesToken)</StatHelpText>\r\n                    <StatHelpText>\r\n                      <Text fontSize=\"xs\">{gytAddr}</Text>\r\n                    </StatHelpText>\r\n                  </Stat>\r\n                  <Stat>\r\n                    <StatLabel>Game No Token</StatLabel>\r\n                    <StatNumber>{gntBalance}</StatNumber>\r\n                    <StatHelpText>GNT (GameNoToken)</StatHelpText>\r\n                    <StatHelpText>\r\n                      <Text fontSize=\"xs\">{gntAddr}</Text>\r\n                    </StatHelpText>\r\n                  </Stat>\r\n                </StatGroup>\r\n                <Divider my=\"7\" />\r\n                {gameOutcome !== \"0\" || percentage === 100 ? (\r\n                  <Box>\r\n                    <Heading mb=\"4\" size=\"md\">\r\n                      Trade in game token\r\n                    </Heading>\r\n                    <StatGroup>\r\n                      <Stat>\r\n                        <StatLabel>Winning token</StatLabel>\r\n                        <StatNumber>\r\n                          {\" \"}\r\n                          {gameOutcome === \"1\"\r\n                            ? \"Game Yes Token\"\r\n                            : \"Game No Token\"}\r\n                        </StatNumber>\r\n                        <StatHelpText>\r\n                          <Text fontSize=\"xs\">\r\n                            {gameOutcome === \"1\" ? gytAddr : gntAddr}\r\n                          </Text>\r\n                        </StatHelpText>\r\n                      </Stat>\r\n                    </StatGroup>\r\n\r\n                    <Box mt=\"3\">\r\n                      {(gameOutcome === \"1\" &&\r\n                        BigNumber.from(gytBalance).gt(BigNumber.from(0))) ||\r\n                      (gameOutcome === \"2\" &&\r\n                        BigNumber.from(gntBalance).gt(BigNumber.from(0))) ? (\r\n                        <Button\r\n                          colorScheme=\"whatsapp\"\r\n                          variant=\"outline\"\r\n                          onClick={() => {\r\n                            setIsDialog(true);\r\n                            onOpen();\r\n                          }}\r\n                        >\r\n                          Collect Winnings{\" \"}\r\n                          {winningTokenAllowance < winningTokenBalance &&\r\n                            \"(Approval required first)\"}\r\n                        </Button>\r\n                      ) : (\r\n                        <Text fontWeight=\"bold\">\r\n                          You have no winning tokens to claim.\r\n                        </Text>\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                ) : (\r\n                  <Box>\r\n                    <Heading mb=\"4\" size=\"md\">\r\n                      Mint game tokens\r\n                    </Heading>\r\n                    <FormControl isRequired>\r\n                      <FormLabel>Game token side</FormLabel>\r\n                      <Select\r\n                        placeholder=\"Select game token side\"\r\n                        onChange={(e) => {\r\n                          setBuyTokenSide(e.target.value);\r\n                          setMaxLimit(\r\n                            1000 -\r\n                              (e.target.value === \"1\"\r\n                                ? game.betYesAmount\r\n                                : game.betNoAmount)\r\n                          );\r\n                          setBuyTokenAmt(0);\r\n                        }}\r\n                        value={buyTokenSide}\r\n                      >\r\n                        <option value=\"1\">Yes</option>\r\n                        <option value=\"2\">No</option>\r\n                      </Select>\r\n                    </FormControl>\r\n                    <FormControl isRequired mt=\"3\">\r\n                      <FormLabel>Amount of game token</FormLabel>\r\n                      <NumberInput\r\n                        value={buyTokenAmt}\r\n                        min={1}\r\n                        max={maxLimit}\r\n                        onChange={(v) => setBuyTokenAmt(v)}\r\n                      >\r\n                        <NumberInputField />\r\n                        <NumberInputStepper>\r\n                          <NumberIncrementStepper />\r\n                          <NumberDecrementStepper />\r\n                        </NumberInputStepper>\r\n                      </NumberInput>\r\n                    </FormControl>\r\n\r\n                    {!(\r\n                      (buyTokenSide !== \"1\" && buyTokenSide !== \"2\") ||\r\n                      buyTokenAmt <= 0 ||\r\n                      buyTokenAmt > maxLimit ||\r\n                      buyTokenAmt > main2TknAllowance\r\n                    ) && (\r\n                      <Box>\r\n                        <Heading mt=\"8\" mb=\"4\" size=\"sm\">\r\n                          Transaction Summary\r\n                        </Heading>\r\n                        <StatGroup w=\"100%\">\r\n                          <Stat>\r\n                            <StatLabel>\r\n                              {buyTokenSide === \"1\" ? \"GYT\" : \"GNT\"}\r\n                            </StatLabel>\r\n                            <StatNumber>{buyTokenAmt}</StatNumber>\r\n                            <StatHelpText>\r\n                              <StatArrow type=\"increase\" />\r\n                              Gain {buyTokenAmt}{\" \"}\r\n                              {buyTokenSide === \"1\" ? \"GYT\" : \"GNT\"}\r\n                            </StatHelpText>\r\n                            <StatHelpText>\r\n                              <Text fontSize=\"xs\">\r\n                                {buyTokenSide === \"1\" ? gytAddr : gntAddr}\r\n                              </Text>\r\n                            </StatHelpText>\r\n                          </Stat>\r\n                          <Stat>\r\n                            <StatLabel>HMTKN</StatLabel>\r\n                            <StatNumber>\r\n                              {buyTokenAmt * game2MainConversionRate}\r\n                            </StatNumber>\r\n                            <StatHelpText>\r\n                              <StatArrow type=\"decrease\" />\r\n                              Lose {buyTokenAmt} HMTKN\r\n                            </StatHelpText>\r\n                            <StatHelpText>\r\n                              <Text fontSize=\"xs\">{hmtknAddr}</Text>\r\n                            </StatHelpText>\r\n                          </Stat>\r\n                        </StatGroup>\r\n                      </Box>\r\n                    )}\r\n\r\n                    {buyTokenAmt > maxLimit && (\r\n                      <Box\r\n                        border=\"1px solid red\"\r\n                        textAlign=\"center\"\r\n                        p=\"1\"\r\n                        borderRadius=\"20px\"\r\n                        my=\"2\"\r\n                      >\r\n                        <Text>\r\n                          Cannot mint the requested token amount, try purchasing\r\n                          from a player's listing.\r\n                        </Text>\r\n                      </Box>\r\n                    )}\r\n\r\n                    <Button\r\n                      colorScheme=\"green\"\r\n                      variant=\"outline\"\r\n                      mt=\"6\"\r\n                      disabled={\r\n                        (buyTokenSide !== \"1\" && buyTokenSide !== \"2\") ||\r\n                        buyTokenAmt <= 0 ||\r\n                        buyTokenAmt > maxLimit ||\r\n                        buyTokenAmt > main2TknAllowance\r\n                      }\r\n                      onClick={triggerPurchase}\r\n                    >\r\n                      Mint Game Tokens\r\n                    </Button>\r\n\r\n                    {buyTokenAmt > main2TknAllowance && (\r\n                      <Box display=\"flex\" alignItems=\"center\" mt=\"2\">\r\n                        <FontAwesomeIcon\r\n                          icon={faX}\r\n                          color=\"red\"\r\n                          style={{ marginRight: \"5px\" }}\r\n                        />\r\n                        <Text>\r\n                          You cannot complete the purchase as your allowance is\r\n                          too low.\r\n                        </Text>\r\n                        <Button\r\n                          mx=\"3\"\r\n                          colorScheme=\"green\"\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => {\r\n                            setIsDialog(true);\r\n                            onOpen();\r\n                          }}\r\n                        >\r\n                          Increase allowance\r\n                        </Button>\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                )}\r\n                <AlertDialog\r\n                  motionPreset=\"slideInBottom\"\r\n                  leastDestructiveRef={cancelRef}\r\n                  onClose={onClose}\r\n                  isOpen={isDialog && isOpen}\r\n                  isCentered\r\n                >\r\n                  <AlertDialogOverlay />\r\n\r\n                  <AlertDialogContent\r\n                    minW={{ base: \"100%\", lg: \"max-content\" }}\r\n                  >\r\n                    {gameOutcome === \"0\" && errorMsg ? (\r\n                      <GameErrorDialog errorMsg={errorMsg} onClose={onClose} />\r\n                    ) : gameOutcome === \"0\" &&\r\n                      buyTokenAmt > main2TknAllowance ? (\r\n                      <IncreaseAllowanceDialog\r\n                        wallet={wallet}\r\n                        gameAddr={game && game.addr}\r\n                        onClose={onClose}\r\n                        allowAmt={buyTokenAmt * game2MainConversionRate}\r\n                      />\r\n                    ) : gameOutcome === \"0\" ? (\r\n                      <PurchaseConfirmationDialog\r\n                        trxHash={purchaseTrxHash}\r\n                        onClose={onClose}\r\n                      />\r\n                    ) : winningTokenAllowance < winningTokenBalance ? (\r\n                      <ClaimWinningIncAllowanceDialog\r\n                        wallet={wallet}\r\n                        gameAddr={game && game.addr}\r\n                        onClose={onClose}\r\n                        outcome={game && game.gameOutcome}\r\n                        approvalAmt={winningTokenBalance}\r\n                        winningTokenAddr={\r\n                          gameOutcome === \"1\" ? gytAddr : gntAddr\r\n                        }\r\n                      />\r\n                    ) : winningTokenAllowance === winningTokenBalance ? (\r\n                      <ClaimWinningDialog\r\n                        wallet={wallet}\r\n                        gameAddr={game && game.addr}\r\n                        outcome={game && game.gameOutcome}\r\n                        onClose={onClose}\r\n                        withdrawAmt={winningTokenBalance}\r\n                        hmtknAddr={hmtknAddr}\r\n                        winningTokenAddr={\r\n                          gameOutcome === \"1\" ? gytAddr : gntAddr\r\n                        }\r\n                        totalLoseAmt={\r\n                          gameOutcome === \"1\"\r\n                            ? game && game.betNoAmount\r\n                            : game && game.betYesAmount\r\n                        }\r\n                        totalWinAmt={\r\n                          gameOutcome === \"1\"\r\n                            ? game && game.betYesAmount\r\n                            : game && game.betNoAmount\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <GameErrorDialog\r\n                        errorMsg=\"We got lost in the sauce. :(\"\r\n                        onClose={onClose}\r\n                      />\r\n                    )}\r\n                  </AlertDialogContent>\r\n                </AlertDialog>\r\n              </Box>\r\n\r\n              <Divider my=\"10\" />\r\n\r\n              <Box>\r\n                <GameActiveListings\r\n                  game={game}\r\n                  setIsDialog={setIsDialog}\r\n                  onOpen={onOpen}\r\n                  gytAddr={gytAddr}\r\n                  gntAddr={gntAddr}\r\n                  hmtknAddr={hmtknAddr}\r\n                  setIsCreate={setIsCreate}\r\n                  setListingSelected={setListingSelected}\r\n                />\r\n\r\n                <Drawer\r\n                  size=\"lg\"\r\n                  isOpen={!isDialog && isOpen}\r\n                  placement=\"right\"\r\n                  onClose={onClose}\r\n                  finalFocusRef={cancelRef}\r\n                >\r\n                  <DrawerOverlay />\r\n                  {isCreate ? (\r\n                    <CreateListingDrawer\r\n                      wallet={wallet}\r\n                      gytAddr={gytAddr}\r\n                      gytBalance={gytBalance}\r\n                      gntAddr={gntAddr}\r\n                      gntBalance={gntBalance}\r\n                      hmtknAddr={hmtknAddr}\r\n                      toast={toast}\r\n                      onClose={onClose}\r\n                    />\r\n                  ) : (\r\n                    <ListingDetailDrawer\r\n                      wallet={wallet}\r\n                      listingSelected={listingSelected}\r\n                      onClose={onClose}\r\n                      toast={toast}\r\n                    />\r\n                  )}\r\n                </Drawer>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Spinner color=\"red.500\" />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Heading,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  TableContainer,\r\n  Badge,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  PopoverAnchor,\r\n  Button,\r\n  Text,\r\n  Tag,\r\n  useColorMode,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { Link as routerLink } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { shortenAddr } from \"../util/helper\";\r\nimport { getPlayersTrxRecords } from \"../util/interact\";\r\n\r\nexport default function PlayersHistory({ wallet }) {\r\n  const [records, setRecords] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { colorMode } = useColorMode();\r\n\r\n  useEffect(() => {\r\n    const getRecords = async () => {\r\n      setIsLoading(true);\r\n      setRecords(await getPlayersTrxRecords(wallet));\r\n      setIsLoading(false);\r\n    };\r\n    getRecords();\r\n  }, [wallet]);\r\n\r\n  return (\r\n    <Box pt=\"8\" pb=\"16\" px=\"5\" m=\"8\" mx=\"16\">\r\n      {isLoading ? (\r\n        <Box mx=\"auto\">\r\n          <Spinner color=\"red.500\" size=\"xl\" />\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          <Heading size=\"lg\" mb=\"10\">\r\n            Transaction History\r\n          </Heading>\r\n          <TableContainer>\r\n            <Table variant=\"striped\" size=\"sm\">\r\n              <TableCaption>\r\n                Your BET and WITHDRAW transactions from HMTKN to Game Tokens\r\n              </TableCaption>\r\n              <Thead>\r\n                <Tr>\r\n                  <Th>Game</Th>\r\n                  <Th>Activity Type</Th>\r\n                  <Th>From</Th>\r\n                  <Th>To</Th>\r\n                  <Th isNumeric>Transaction Amount</Th>\r\n                  <Th>Transaction Game side</Th>\r\n                  <Th>Transaction Timestamp</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {records && records.length > 0 ? (\r\n                  records.map((r) => (\r\n                    <Tr>\r\n                      <Td>\r\n                        <Link as={routerLink} to={`/game/${r.gameId}`}>\r\n                          <Text\r\n                            color={\r\n                              colorMode === \"light\" ? \"teal.700\" : \"teal.300\"\r\n                            }\r\n                          >\r\n                            {r.gameId}\r\n                          </Text>\r\n                        </Link>\r\n                      </Td>\r\n                      <Td>\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          colorScheme={\r\n                            r.activityType === \"BET\" ? \"teal\" : \"pink\"\r\n                          }\r\n                        >\r\n                          {r.activityType}\r\n                        </Badge>\r\n                      </Td>\r\n                      <Td>\r\n                        <Popover>\r\n                          <PopoverTrigger>\r\n                            <Tag\r\n                              _hover={{ cursor: \"pointer\" }}\r\n                              variant=\"outline\"\r\n                              color={colorMode === \"light\" ? \"black\" : \"white\"}\r\n                            >\r\n                              {shortenAddr(r.from)}\r\n                            </Tag>\r\n                          </PopoverTrigger>\r\n                          <PopoverContent\r\n                            minW={{ base: \"100%\", lg: \"max-content\" }}\r\n                          >\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverHeader>Address</PopoverHeader>\r\n                            <PopoverBody>{r.from}</PopoverBody>\r\n                          </PopoverContent>\r\n                        </Popover>\r\n                      </Td>\r\n                      <Td>\r\n                        <Popover>\r\n                          <PopoverTrigger>\r\n                            <Tag\r\n                              _hover={{ cursor: \"pointer\" }}\r\n                              variant=\"outline\"\r\n                              color={colorMode === \"light\" ? \"black\" : \"white\"}\r\n                            >\r\n                              {shortenAddr(r.to)}\r\n                            </Tag>\r\n                          </PopoverTrigger>\r\n                          <PopoverContent\r\n                            minW={{ base: \"100%\", lg: \"max-content\" }}\r\n                          >\r\n                            <PopoverArrow />\r\n                            <PopoverCloseButton />\r\n                            <PopoverHeader>Address</PopoverHeader>\r\n                            <PopoverBody>{r.to}</PopoverBody>\r\n                          </PopoverContent>\r\n                        </Popover>\r\n                      </Td>\r\n                      <Td isNumeric>{r.trxAmt}</Td>\r\n                      <Td>\r\n                        {r.gameSide === \"1\" ? (\r\n                          <Badge colorScheme=\"whatsapp\" variant=\"outline\">\r\n                            Yes\r\n                          </Badge>\r\n                        ) : (\r\n                          <Badge colorScheme=\"red\" variant=\"outline\">\r\n                            No\r\n                          </Badge>\r\n                        )}\r\n                      </Td>\r\n                      <Td>\r\n                        {new Intl.DateTimeFormat(\"en-US\", {\r\n                          year: \"numeric\",\r\n                          month: \"2-digit\",\r\n                          day: \"2-digit\",\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          second: \"2-digit\",\r\n                          timeZoneName: \"short\",\r\n                        }).format(parseInt(r.trxTime) * 1000)}\r\n                      </Td>\r\n                    </Tr>\r\n                  ))\r\n                ) : (\r\n                  <Tr>\r\n                    <Td>-</Td>\r\n                    <Td>-</Td>\r\n                    <Td>-</Td>\r\n                    <Td>-</Td>\r\n                    <Td>-</Td>\r\n                    <Td>-</Td>\r\n                    <Td>-</Td>\r\n                  </Tr>\r\n                )}\r\n              </Tbody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import GamesGallery from \"./components/GamesGallery\";\r\nimport { Box, useColorMode, useDisclosure } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CommonTop from \"./components/CommonTop\";\r\nimport ErrorPage from \"./components/ErrorPage\";\r\nimport { Routes } from \"react-router-dom\";\r\n\r\nimport { createBrowserRouter, RouterProvider, Route } from \"react-router-dom\";\r\nimport Game from \"./components/Game\";\r\nimport GetHMTKN from \"./components/hmtknModals/GetHMTKN\";\r\nimport PlayersHistory from \"./components/PlayersHistory\";\r\n\r\nfunction App() {\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const { toggleColorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box>\r\n      <CommonTop\r\n        wallet={walletAddress}\r\n        setWallet={setWallet}\r\n        toggleColorMode={toggleColorMode}\r\n      />\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/HwangMarket/\"\r\n          element={<GamesGallery walletAddress={walletAddress} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/HwangMarket/game/:id\"\r\n          element={<Game wallet={walletAddress} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/HwangMarket/history\"\r\n          element={<PlayersHistory wallet={walletAddress} />}\r\n        />\r\n        <Route path=\"*\" element={<ErrorPage />} />\r\n      </Routes>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// 1. import `extendTheme` function\r\nimport { extendTheme } from \"@chakra-ui/react\";\r\n\r\n// 2. Add your color mode config\r\nconst config = {\r\n  initialColorMode: \"dark\",\r\n  useSystemColorMode: false,\r\n};\r\n\r\n// 3. extend the theme\r\nconst theme = extendTheme({ config });\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport { ColorModeScript } from \"@chakra-ui/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider theme={theme}>\r\n    <BrowserRouter>\r\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\r\n      <App />\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}