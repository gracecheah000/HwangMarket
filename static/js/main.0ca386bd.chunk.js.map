{"version":3,"sources":["util/interact.js","util/helper.js","components/CreateGame.js","components/GameCard.js","components/GamesGallery.js","components/hmtknModals/GetHMTKN.js","components/hmtknModals/CashoutHMTKN.js","components/CommonTop.js","components/ErrorPage.js","components/GameTransactionsHistory.js","components/GameActiveListings.js","components/GameDialogs/GameErrorDialog.js","components/GameDialogs/PurchaseConfirmationDialog.js","components/GameDialogs/IncreaseAllowanceDialog.js","components/GameDrawers/CreateListingDrawer.js","components/GameDrawers/ListingDetailDrawer.js","components/GameDialogs/ClaimWinningIncAllowanceDialog.js","components/GameDialogs/ClaimWinningDialog.js","components/Game.js","components/PlayersHistory.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["path","require","config","join","__dirname","web3","createAlchemyWeb3","process","hwangMarketABI","hwangMarketAddr","gameContractABI","mainTokenABI","gameTokenABI","iListableTokenABI","erc20TokenABI","hwangMarket","eth","Contract","createAGame","address","resolveTime","oracleAddr","threshold","category","title","a","window","ethereum","status","transactionParameters","to","from","data","methods","createGame","toString","encodeABI","request","method","params","console","log","getGameById","id","gameId2Addr","call","gameAddr","gameContract","getGameInfo","getGameByAddr","info","getMainTokenAddr","mainTokenAddress","getGameTrxsByAddr","getTrxs","trxs","getCurrentWalletConnected","addressArray","length","message","target","href","connectWallet","obj","getAllGames","gamesAddrs","Promise","all","ongoingGames","map","addr","closedGames","getMainTokenBalance","ownerAddr","mainTokenAddr","mainTokenContract","balanceOf","getMainToken2SenderApprovalAmt","senderAddr","allowance","withdrawWinnings","withdrawAmt","trxHash","err","getTokenAllowance","tokenAddr","tokenContract","getGameTokenAddrByGameAddr","side","gtAddr","gameYesTokenContractAddress","gameNoTokenContractAddress","approveMainTokenSender","wallet","mainTokenAmt","approve","approveTokenSender","owner","sender","approvalAmt","mintGameTokenFromMainToken","buyTokenSide","buyTokenAmt","maxLimit","addPlayer","game2MainConversionRate","getBalance","gameTokenContract","getERC20Tokenbalance","erc20TokenContract","listTokensUp","token1Addr","token1Amt","token2Addr","token2Amt","gameToken","listUpTokensForExchange","acceptTokenExchange","listing","token2","listingAddr","iListableTokenContract","getNetworkTokenBalance","getNetworkTokenInfo","getChainId","chainId","identfyToken","getNetworkID","net","getNetworkType","mintMainToken","mintAmt","value","BigNumber","mul","eth2MainConversionRate","toHexString","mint","cashoutMainToken","cashoutAmt","cashout","triggerResolve","performUpkeep","getPlayersTrxRecords","shortenAddr","String","substring","sleep","ms","resolve","setTimeout","i","chains","parseInt","CreateGame","walletAddress","setStatus","useState","Date","setResolveTime","setThreshold","useDisclosure","isOpen","onOpen","onClose","setTitle","colorMode","useColorMode","setCategory","mkt","setMkt","markets","description","provider","providerLink","dec","submitCreateGame","parsedThreshold","pow","parsedResolveTime","getTime","leftIcon","icon","faPlus","colorScheme","onClick","size","mt","mb","isRequired","placeholder","onChange","e","cat","my","find","m","o","display","flexDir","rowGap","justifyContent","border","borderRadius","p","alignItems","columnGap","label","placement","faQuestionCircle","mx","mr","variant","isExternal","faExternalLink","color","selected","datetime","showTimeSelect","timeFormat","dateFormat","minDate","v","w","isDisabled","GameCard","game","percentage","setPercentage","diffText","setDiffText","useEffect","intervalId","setInterval","perc","Math","min","floor","now","createdTime","timeLeft","max","s","clearInterval","navigate","useNavigate","bgColor","_hover","boxShadow","px","py","minW","h","minH","text","styles","buildStyles","textSize","textColor","trailColor","pathColor","strokeWidth","ml","textAlign","fontSize","fontWeight","totalAmount","pb","pt","maxW","completed","betYesAmount","maxCompleted","baseBgColor","customLabel","width","labelSize","height","betNoAmount","GamesGallery","isLoading","setLoading","setOngoingGames","setClosedGames","showClosed","setShowClosed","toast","useToast","games","events","GameCreated","error","returnValues","gameMetadata","duration","isClosable","prev","GameConcluded","getGames","isChecked","flexWrap","slice","reverse","g","GetHMTKN","networkTknBalance","setNetworkTknBalance","networkId","setNetworkId","setMintAmt","setMainTokenAddr","networkInfo","setNetworkInfo","update","mintHMTKN","faHeart","style","marginRight","nativeCurrency","symbol","type","name","disabled","gt","as","CashoutHMTKN","mainTknBalance","setMainTknBalance","setCashoutAmt","cashoutHMTKN","faMoneyBillTransfer","CommonTop","setWallet","toggleColorMode","hmtknAddr","setHmtknAddr","hmtknBalance","setHmtknBalance","isGetHMTKN","setIsGetHMTKN","addHMTKNTransferListener","Transfer","details","toLowerCase","add","sub","connectWalletPressed","walletResponse","fetchWallet","updateHmtknMetadata","on","accounts","cursor","faMoon","faSun","ErrorPage","GameTransactionsHistory","gameTrxs","setGameTrxs","setBgColor","updateTrxs","PlayerJoinedGameEvent","player","trxAmt","amount","gameSide","betSide","overflowY","maxH","trx","base","lg","GameActiveListings","setIsDialog","gytAddr","gntAddr","setIsCreate","setListingSelected","openListings","setOpenListings","setClosedListings","gntPrice","setGntPrice","gytPrice","setGytPrice","delListing","setDelListing","addListingFulfilledListener","ListingFulfilled","listingInfo","ol","listingId","token1","Number","toFixed","filter","NewListing","fulfilled","getAllListings","listings","l","closed","closedGyt","sort","x","y","fulfilledTime","closedGnt","parseAddr","faLineChart","faArrowRight","marginLeft","Intl","DateTimeFormat","year","month","day","hour","minute","second","timeZoneName","format","GameErrorDialog","errorMsg","PurchaseConfirmationDialog","IncreaseAllowanceDialog","allowAmt","setIsLoading","doApprove","faX","allowToggle","flex","CreateListingDrawer","gytBalance","gntBalance","offeredTokenAddr","setOfferedTokenAddr","offeredTokenAmt","setOfferedTokenAmt","expectedTokenAddr","setExpectedTokenAddr","customExpectedTokenAddr","setCustomExpectedTokenAddr","expectedTokenAmt","setExpectedTokenAmt","pressCreateListing","children","routerLink","ListingDetailDrawer","listingSelected","token2Balance","setToken2Balance","updateTokenBalance","triggerAcceptListing","player1","textDecor","ClaimWinningIncAllowanceDialog","outcome","winningTokenAddr","ClaimWinningDialog","totalLoseAmt","totalWinAmt","doClaimWinning","winningAmt","div","Game","useParams","setGame","setBuyTokenSide","setBuyTokenAmt","setMaxLimit","purchaseTrxHash","setPurchaseTrxHash","setErrorMsg","main2TknAllowance","setMain2TknAllowance","setGytBalance","setGntBalance","setGytAddr","setGntAddr","isDialog","isCreate","winningTokenAllowance","setWinningTokenAllowance","winningTokenBalance","setWinningTokenBalance","cancelRef","React","useRef","gameOutcome","setGameOutcome","getGame","triggerPurchase","addNewListingListener","addHMTKNApprovalListener","Approval","spender","addGYTListener","addGNTApprovalListener","updateAllowance","setBalance","setGameTokenAddr","addGameConcludedListener","gameId","copy","JSON","parse","stringify","updateGameOutcome","tag","fontFamily","radius","lineWidth","segmentsStyle","transition","animate","dataEntry","labelPosition","labelStyle","fill","pointerEvents","whiteSpace","faQuestion","motionPreset","leastDestructiveRef","isCentered","finalFocusRef","PlayersHistory","records","setRecords","getRecords","isNumeric","r","activityType","trxTime","App","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ca386bd.chunk.js","sourcesContent":["import { BigNumber } from \"ethers\";\nimport {\n  eth2MainConversionRate,\n  game2MainConversionRate,\n  identfyToken,\n} from \"./helper\";\n\n/* Abstractions to deal with all functions interacting with the blockchain */\nconst path = require(\"path\");\nrequire(\"dotenv\").config({\n  path: path.join(__dirname, `./.env.production`),\n});\n\nlet temp = null;\n\nif (process.env.NODE_ENV === \"development\") {\n  const Web3 = require(\"web3\");\n  temp = new Web3(\n    new Web3.providers.WebsocketProvider(process.env.REACT_APP_Local_Provider)\n  );\n} else {\n  const alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n  const { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n  temp = createAlchemyWeb3(alchemyKey);\n}\n\nexport const web3 = temp;\n\nconst hwangMarketABI = require(\"../contracts/HwangMarket-abi.json\");\nexport const hwangMarketAddr = process.env.REACT_APP_HwangMarket_Address;\n\nexport const gameContractABI = require(\"../contracts/GameContract-abi.json\");\nexport const mainTokenABI = require(\"../contracts/MainToken-abi.json\");\nconst gameTokenABI = require(\"../contracts/GameERC20Token-abi.json\");\nconst iListableTokenABI = require(\"../contracts/IListableToken-abi.json\");\nexport const erc20TokenABI = require(\"../contracts/IERC20-abi.json\");\n\nexport const hwangMarket = new web3.eth.Contract(\n  hwangMarketABI,\n  hwangMarketAddr\n);\n\nexport const createAGame = async (\n  address,\n  resolveTime,\n  oracleAddr,\n  threshold,\n  category,\n  title\n) => {\n  if (!window.ethereum || address === null) {\n    return {\n      status:\n        \"💡 Connect your Metamask wallet to update the message on the blockchain.\",\n    };\n  }\n\n  const transactionParameters = {\n    to: hwangMarketAddr, // Required except during contract publications.\n    from: address, // must match user's active address.\n    data: hwangMarket.methods\n      .createGame(\n        resolveTime,\n        oracleAddr,\n        threshold.toString(),\n        category,\n        title\n      )\n      .encodeABI(),\n  };\n\n  //sign the transaction\n  try {\n    await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n  } catch (error) {\n    console.log(\"something went wrong!\", error);\n  }\n};\n\nexport const getGameById = async (id) => {\n  if (!id) {\n    return {};\n  }\n  const gameAddr = await hwangMarket.methods.gameId2Addr(id).call();\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n  return await gameContract.methods.getGameInfo().call();\n};\n\nexport const getGameByAddr = async (gameAddr) => {\n  if (!gameAddr) {\n    console.log(\"get game by addr received invalid addr (empty)\");\n    return;\n  }\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n  const info = await gameContract.methods.getGameInfo().call();\n  return info;\n};\n\nexport const getMainTokenAddr = async () => {\n  return await hwangMarket.methods.mainTokenAddress().call();\n};\n\nexport const getGameTrxsByAddr = async (gameAddr) => {\n  if (!gameAddr) {\n    return [];\n  }\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n  const trxs = await gameContract.methods.getTrxs().call();\n  return trxs;\n};\n\nexport const getCurrentWalletConnected = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0],\n          status: \"\",\n        };\n      } else {\n        return {\n          address: \"\",\n          status: \"🦊 Connect to Metamask\",\n        };\n      }\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n};\n\nexport const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const obj = {\n        status: \"\",\n        address: addressArray[0],\n      };\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" href={`https://metamask.io/download`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n};\n\nexport const getAllGames = async () => {\n  const gamesAddrs = await hwangMarket.methods.getAllGames().call();\n  const ongoingGames = await Promise.all(\n    gamesAddrs.ongoingGames.map(async (addr) => await getGameByAddr(addr))\n  );\n  const closedGames = await Promise.all(\n    gamesAddrs.closedGames.map(async (addr) => await getGameByAddr(addr))\n  );\n  return { ongoingGames, closedGames };\n};\n\nexport const getMainTokenBalance = async (ownerAddr) => {\n  if (!window.ethereum || !ownerAddr) {\n    return 0;\n  }\n  const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\n  const mainTokenContract = new web3.eth.Contract(mainTokenABI, mainTokenAddr);\n\n  return await mainTokenContract.methods.balanceOf(ownerAddr).call();\n};\n\nexport const getMainToken2SenderApprovalAmt = async (ownerAddr, senderAddr) => {\n  if (!window.ethereum || !ownerAddr || !senderAddr) {\n    return 0;\n  }\n  const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\n  const mainTokenContract = new web3.eth.Contract(mainTokenABI, mainTokenAddr);\n\n  return await mainTokenContract.methods\n    .allowance(ownerAddr, senderAddr)\n    .call();\n};\n\nexport const withdrawWinnings = async (ownerAddr, gameAddr, withdrawAmt) => {\n  if (!ownerAddr || !gameAddr || !withdrawAmt) {\n    return { trxHash: \"\", err: \"Bad fields to withdraw\" };\n  }\n  //sign the transaction\n  try {\n    const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n\n    const transactionParameters = {\n      to: gameAddr, // Required except during contract publications.\n      from: ownerAddr, // must match user's active address.\n      data: gameContract.methods.withdrawWinnings(withdrawAmt).encodeABI(),\n    };\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return { trxHash: trxHash, err: \"\" };\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n    return { trxHash: \"\", err: error.message };\n  }\n};\n\nexport const getTokenAllowance = async (ownerAddr, senderAddr, tokenAddr) => {\n  if (!window.ethereum || !ownerAddr || !senderAddr || !tokenAddr) {\n    return 0;\n  }\n\n  const tokenContract = new web3.eth.Contract(erc20TokenABI, tokenAddr);\n\n  return await tokenContract.methods.allowance(ownerAddr, senderAddr).call();\n};\n\nexport const getGameTokenAddrByGameAddr = async (gameAddr, side) => {\n  if (!window.ethereum || !gameAddr || (side !== 1 && side !== 2)) {\n    return \"\";\n  }\n\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n  let gtAddr = \"\";\n  if (side === 1) {\n    gtAddr = await gameContract.methods.gameYesTokenContractAddress().call();\n  } else {\n    gtAddr = await gameContract.methods.gameNoTokenContractAddress().call();\n  }\n  return gtAddr;\n};\n\nexport const approveMainTokenSender = async (\n  wallet,\n  senderAddr,\n  mainTokenAmt\n) => {\n  if (!window.ethereum || !wallet || !senderAddr) {\n    return \"\";\n  }\n  const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\n  const mainTokenContract = new web3.eth.Contract(mainTokenABI, mainTokenAddr);\n  const transactionParameters = {\n    to: mainTokenAddr, // Required except during contract publications.\n    from: wallet, // must match user's active address.\n    data: mainTokenContract.methods\n      .approve(senderAddr, mainTokenAmt)\n      .encodeABI(),\n  };\n\n  //sign the transaction\n  try {\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return trxHash;\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n  }\n  return \"\";\n};\n\nexport const approveTokenSender = async (\n  tokenAddr,\n  owner,\n  sender,\n  approvalAmt\n) => {\n  if (!window.ethereum || !tokenAddr || !owner || !sender || !approvalAmt) {\n    return \"\";\n  }\n  const tokenContract = new web3.eth.Contract(erc20TokenABI, tokenAddr);\n  const transactionParameters = {\n    to: tokenAddr, // Required except during contract publications.\n    from: owner, // must match user's active address.\n    data: tokenContract.methods.approve(sender, approvalAmt).encodeABI(),\n  };\n\n  //sign the transaction\n  try {\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return trxHash;\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n  }\n  return \"\";\n};\n\nexport const mintGameTokenFromMainToken = async (\n  wallet,\n  gameAddr,\n  buyTokenSide,\n  buyTokenAmt,\n  maxLimit\n) => {\n  if (\n    !window.ethereum ||\n    !wallet ||\n    (buyTokenSide !== \"1\" && buyTokenSide !== \"2\") ||\n    buyTokenAmt < 0 ||\n    buyTokenAmt > maxLimit\n  ) {\n    return { trxHash: \"\", err: \"\" };\n  }\n\n  //sign the transaction\n  try {\n    const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n\n    const transactionParameters = {\n      to: gameAddr, // Required except during contract publications.\n      from: wallet, // must match user's active address.\n      data: gameContract.methods\n        .addPlayer(wallet, game2MainConversionRate * buyTokenAmt, buyTokenSide)\n        .encodeABI(),\n    };\n\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return { trxHash: trxHash, err: \"\" };\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n    return { trxHash: \"\", err: error.message };\n  }\n};\n\nexport const getBalance = async (wallet, gameAddr, side) => {\n  if (!wallet || !gameAddr || (side !== 1 && side !== 2)) {\n    return 0;\n  }\n  const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n  let gtAddr = \"\";\n  if (side === 1) {\n    gtAddr = await gameContract.methods.gameYesTokenContractAddress().call();\n  } else {\n    gtAddr = await gameContract.methods.gameNoTokenContractAddress().call();\n  }\n  const gameTokenContract = new web3.eth.Contract(gameTokenABI, gtAddr);\n  return await gameTokenContract.methods.balanceOf(wallet).call();\n};\n\nexport const getERC20Tokenbalance = async (wallet, tokenAddr) => {\n  if (!wallet || !tokenAddr) {\n    return 0;\n  }\n  const erc20TokenContract = new web3.eth.Contract(erc20TokenABI, tokenAddr);\n  return await erc20TokenContract.methods.balanceOf(wallet).call();\n};\n\nexport const listTokensUp = async (\n  wallet,\n  token1Addr,\n  token1Amt,\n  token2Addr,\n  token2Amt\n) => {\n  if (!wallet || !token1Addr || !token1Amt || !token2Addr || !token2Amt) {\n    return { trxHash: \"\", err: \"Invalid fields to create listing.\" };\n  }\n\n  //sign the transaction\n  try {\n    const gameToken = new web3.eth.Contract(gameTokenABI, token1Addr);\n\n    const transactionParameters = {\n      to: token1Addr, // Required except during contract publications.\n      from: wallet, // must match user's active address.\n      data: gameToken.methods\n        .listUpTokensForExchange(token1Amt, token2Addr, token2Amt)\n        .encodeABI(),\n    };\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return { trxHash: trxHash, err: \"\" };\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n    return { trxHash: \"\", err: error.message };\n  }\n};\n\nexport const acceptTokenExchange = async (wallet, listing) => {\n  if (!wallet || !listing.token2 || !listing.listingAddr) {\n    return { trxHash: \"\", err: \"Invalid fields to accept listing exchange.\" };\n  }\n\n  //sign the transaction\n  try {\n    const iListableTokenContract = new web3.eth.Contract(\n      iListableTokenABI,\n      listing.token2\n    );\n\n    const transactionParameters = {\n      to: listing.token2, // Required except during contract publications.\n      from: wallet, // must match user's active address.\n      data: iListableTokenContract.methods\n        .acceptTokenExchange(listing.listingAddr)\n        .encodeABI(),\n    };\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return { trxHash: trxHash, err: \"\" };\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n    return { trxHash: \"\", err: error.message };\n  }\n};\n\nexport const getNetworkTokenBalance = async (wallet) => {\n  if (!wallet) {\n    return 0;\n  }\n  return await web3.eth.getBalance(wallet);\n};\n\nexport const getNetworkTokenInfo = async () => {\n  const chainId = await web3.eth.getChainId();\n  return identfyToken(chainId);\n};\n\nexport const getNetworkID = async () => {\n  return await web3.eth.net.getNetworkType();\n};\n\nexport const mintMainToken = async (wallet, mintAmt) => {\n  if (!wallet || !mintAmt) {\n    return { trxHash: \"\", err: \"Invalid fields to mint HMTKN.\" };\n  }\n\n  //sign the transaction\n  try {\n    const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\n    const mainTokenContract = new web3.eth.Contract(\n      mainTokenABI,\n      mainTokenAddr\n    );\n    const transactionParameters = {\n      to: mainTokenAddr, // Required except during contract publications.\n      from: wallet, // must match user's active address.\n      value: BigNumber.from(mintAmt)\n        .mul(1 / eth2MainConversionRate)\n        .toHexString(),\n      data: mainTokenContract.methods\n        .mint(wallet, BigNumber.from(mintAmt).toString())\n        .encodeABI(),\n    };\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return { trxHash: trxHash, err: \"\" };\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n    return { trxHash: \"\", err: error.message };\n  }\n};\n\nexport const cashoutMainToken = async (wallet, cashoutAmt) => {\n  if (!wallet || !cashoutAmt) {\n    return { trxHash: \"\", err: \"Invalid fields to cashout HMTKN.\" };\n  }\n\n  //sign the transaction\n  try {\n    const mainTokenAddr = await hwangMarket.methods.mainTokenAddress().call();\n    const mainTokenContract = new web3.eth.Contract(\n      mainTokenABI,\n      mainTokenAddr\n    );\n    const transactionParameters = {\n      to: mainTokenAddr, // Required except during contract publications.\n      from: wallet, // must match user's active address.\n      data: mainTokenContract.methods.cashout(cashoutAmt).encodeABI(),\n    };\n    const trxHash = await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n\n    return { trxHash: trxHash, err: \"\" };\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n    return { trxHash: \"\", err: error.message };\n  }\n};\n\nexport const triggerResolve = async (wallet, gameAddr) => {\n  if (!wallet || !gameAddr) {\n    return;\n  }\n\n  //sign the transaction\n  try {\n    const gameContract = new web3.eth.Contract(gameContractABI, gameAddr);\n    const transactionParameters = {\n      to: gameAddr, // Required except during contract publications.\n      from: wallet, // must match user's active address.\n      data: gameContract.methods.performUpkeep().encodeABI(),\n    };\n    await window.ethereum.request({\n      method: \"eth_sendTransaction\",\n      params: [transactionParameters],\n    });\n  } catch (error) {\n    console.log(\"error thrown:\", error.message);\n  }\n};\n\nexport const getPlayersTrxRecords = async (wallet) => {\n  if (!wallet) {\n    return [];\n  }\n\n  return await hwangMarket.methods.getPlayersTrxRecords(wallet).call();\n};\n","import chains from \"./chains.json\";\n\nexport const shortenAddr = (addr) => {\n  return String(addr).substring(0, 6) + \"...\" + String(addr).substring(38);\n};\n\nexport const eth2MainConversionRate = 1; // this is a fixed constant\nexport const game2MainConversionRate = 1; // this is a fixed constant\n\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n/*\n  {\n    \"name\": \"GoChain\",\n    \"chain\": \"GO\",\n    \"rpc\": [\n      \"https://rpc.gochain.io\"\n    ],\n    \"faucets\": [\n      \"https://free-online-app.com/faucet-for-eth-evm-chains/\"\n    ],\n    \"nativeCurrency\": {\n      \"name\": \"GoChain Ether\",\n      \"symbol\": \"GO\",\n      \"decimals\": 18\n    },\n    \"infoURL\": \"https://gochain.io\",\n    \"shortName\": \"go\",\n    \"chainId\": 60,\n    \"networkId\": 60,\n    \"slip44\": 6060,\n    \"explorers\": [\n      {\n        \"name\": \"GoChain Explorer\",\n        \"url\": \"https://explorer.gochain.io\",\n        \"standard\": \"EIP3091\"\n      }\n    ]\n  },\n*/\nexport const identfyToken = (chainId) => {\n  for (let i = 0; chains.length; i++) {\n    if (parseInt(chainId) === parseInt(chains[i].chainId)) {\n      return chains[i];\n    }\n  }\n\n  return null;\n};\n","import {\n  Box,\n  Heading,\n  Button,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Text,\n  Select,\n  FormControl,\n  FormLabel,\n  Link,\n  Badge,\n  Tooltip,\n  NumberInput,\n  NumberInputField,\n  Input,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLink,\n  faPlus,\n  faQuestionCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DatePicker from \"react-datepicker\";\nimport \"./css/react-datepicker.css\";\nimport { BigNumber } from \"ethers\";\n\nimport {\n  hwangMarket,\n  createAGame,\n  getGameAddrById,\n  getCurrentWalletConnected,\n  connectWallet,\n} from \"../util/interact\";\n\nconst CreateGame = ({ walletAddress, setStatus }) => {\n  const [resolveTime, setResolveTime] = useState(new Date());\n  const [threshold, setThreshold] = useState(0);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [title, setTitle] = useState(\"\");\n\n  const { colorMode } = useColorMode();\n\n  const [category, setCategory] = useState(\"\");\n  const allowedCategories = [\n    \"Price Feeds\",\n    \"Sports\",\n    \"NFTs\",\n    \"Assets\",\n    \"Weather\",\n  ];\n\n  const [mkt, setMkt] = useState(null);\n  const markets = {\n    \"Price Feeds\": [\n      {\n        description: \"BTC / ETH\",\n        oracleAddr: \"0x779877A7B0D9E8603169DdbD7836e478b4624789\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 18,\n      },\n      {\n        description: \"BTC / USD\",\n        oracleAddr: \"0xA39434A63A52E749F02807ae27335515BA4b07F7\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 8,\n      },\n      {\n        description: \"DAI / USD\",\n        oracleAddr: \"0x0d79df66BE487753B02D015Fb622DED7f0E9798d\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 8,\n      },\n      {\n        description: \"ETH / USD\",\n        oracleAddr: \"0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 8,\n      },\n      {\n        description: \"FORTH / USD\",\n        oracleAddr: \"0x7A65Cf6C2ACE993f09231EC1Ea7363fb29C13f2F\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 8,\n      },\n      {\n        description: \"JPY / USD\",\n        oracleAddr: \"0x295b398c95cEB896aFA18F25d0c6431Fd17b1431\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 18,\n      },\n      {\n        description: \"LINK / ETH\",\n        oracleAddr: \"0xb4c4a493AB6356497713A78FFA6c60FB53517c63\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 18,\n      },\n      {\n        description: \"LINK / USD\",\n        oracleAddr: \"0x48731cF7e84dc94C5f84577882c14Be11a5B7456\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 8,\n      },\n      {\n        description: \"Stader Labs PoR\",\n        oracleAddr: \"0x3de1bE9407645533CD0CbeCf88dFE5297E7125e6\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 18,\n      },\n      {\n        description: \"Swell PoR\",\n        oracleAddr: \"0xDe9C980F79b636B46b9c3bc04cfCC94A29D18D19\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 18,\n      },\n      {\n        description: \"USDC / USD\",\n        oracleAddr: \"0xAb5c49580294Aff77670F839ea425f5b78ab3Ae7\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 8,\n      },\n      {\n        description: \"XAU / USD\",\n        oracleAddr: \"0x7b219F57a8e9C7303204Af681e9fA69d17ef626f\",\n        provider: \"Chainlink\",\n        providerLink: \"https://chain.link/\",\n        dec: 18,\n      },\n    ],\n  };\n\n  const submitCreateGame = async () => {\n    onClose();\n    const parsedThreshold = BigNumber.from(threshold).mul(\n      BigNumber.from(10).pow(mkt.dec)\n    );\n    const parsedResolveTime = parseInt(resolveTime.getTime() / 1000);\n    await createAGame(\n      walletAddress,\n      parsedResolveTime,\n      mkt.oracleAddr,\n      parsedThreshold,\n      category,\n      title\n    );\n  };\n\n  return (\n    <Box>\n      <Button\n        leftIcon={<FontAwesomeIcon icon={faPlus} />}\n        colorScheme=\"green\"\n        onClick={onOpen}\n      >\n        New Game\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create a new game</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl mt=\"1\" mb=\"5\" isRequired>\n              <FormLabel>Game category</FormLabel>\n              <Select\n                placeholder=\"Select a game category\"\n                onChange={(e) => setCategory(e.target.value)}\n                value={category}\n              >\n                {allowedCategories.map((cat) => (\n                  <option key={cat} value={cat}>\n                    {cat}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n\n            {category && (\n              <FormControl my=\"5\" isRequired>\n                <FormLabel>Market</FormLabel>\n                <Select\n                  placeholder=\"Select a market\"\n                  onChange={(e) =>\n                    setMkt(\n                      markets[category].find(\n                        (m) => m.description === e.target.value\n                      )\n                    )\n                  }\n                  value={mkt ? mkt.description : \"\"}\n                >\n                  {markets[category] &&\n                    markets[category].map((o) => (\n                      <option key={o.description} value={o.description}>\n                        {o.description}\n                      </option>\n                    ))}\n                </Select>\n              </FormControl>\n            )}\n\n            {category && mkt && (\n              <Box\n                display=\"flex\"\n                flexDir=\"column\"\n                rowGap=\"2\"\n                justifyContent=\"center\"\n              >\n                <Box\n                  border=\"2px solid teal\"\n                  borderRadius=\"15px\"\n                  p=\"5\"\n                  // bgColor={colorMode === \"light\" ? \"teal.100\" : \"cyan.700\"}\n                  my=\"2\"\n                >\n                  <Box display=\"flex\" alignItems=\"center\" mb=\"2\" columnGap=\"3\">\n                    <Heading size=\"md\">Oracle information</Heading>\n                    <Tooltip\n                      label=\"We only use verified oracles for our data feeds. Find out more in our FAQ.\"\n                      placement=\"right\"\n                    >\n                      <FontAwesomeIcon icon={faQuestionCircle} />\n                    </Tooltip>\n                  </Box>\n\n                  <Text>\n                    Resolver:{\" \"}\n                    <Badge mx=\"1\" mr=\"4\" colorScheme=\"blue\" variant=\"outline\">\n                      <Link isExternal href={mkt.providerLink}>\n                        {mkt.provider} <FontAwesomeIcon icon={faExternalLink} />\n                      </Link>\n                    </Badge>\n                  </Text>\n                  <Text>\n                    Contract address:{\" \"}\n                    <Link\n                      isExternal\n                      href={`https://goerli.etherscan.io/address/${mkt.oracleAddr}`}\n                      color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                    >\n                      {mkt.oracleAddr} <FontAwesomeIcon icon={faExternalLink} />\n                    </Link>\n                  </Text>\n                </Box>\n\n                <FormControl isRequired mt=\"2\" mb=\"2\">\n                  <FormLabel>Title</FormLabel>\n                  <Input\n                    placeholder=\"Enter a short title describing the game\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                  />\n                </FormControl>\n\n                <FormControl isRequired my=\"5\">\n                  <FormLabel>Resolution time</FormLabel>\n                  <DatePicker\n                    id={colorMode === \"dark\" && \"darkmode\"}\n                    selected={resolveTime}\n                    onChange={(datetime) => setResolveTime(datetime)}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    minDate={new Date()}\n                  />\n                </FormControl>\n                <FormControl isRequired my=\"5\">\n                  <FormLabel>Price Threshold (in terms of base unit)</FormLabel>\n                  <NumberInput\n                    value={threshold}\n                    onChange={(v) => setThreshold(v)}\n                  >\n                    <NumberInputField />\n                  </NumberInput>\n                </FormControl>\n              </Box>\n            )}\n          </ModalBody>\n\n          <ModalFooter\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            columnGap=\"14\"\n          >\n            <Button\n              colorScheme=\"green\"\n              w=\"80%\"\n              variant=\"outline\"\n              onClick={submitCreateGame}\n              isDisabled={!category || !mkt || !resolveTime}\n            >\n              Create game\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default CreateGame;\n","import { Box, Button, Heading, Text, useColorMode } from \"@chakra-ui/react\";\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GameCard = ({ game }) => {\n  /*\n  addr: \"0x64C3bb915Dd98231B3b2649A350B28d746a087Af\"\n  betNoAmount: \"0\"\n  betYesAmount: \"0\"\n  createdTime: \"1666719306\"\n  gameOutcome: \"0\"\n  id: \"2\"\n  oracleAddr: \"0x0d79df66BE487753B02D015Fb622DED7f0E9798d\"\n  resolveTime: \"1666722600\"\n  tag: \"Price Feeds\"\n  threshold: \"200000000000\"\n  title: \"Hello world!\"\n  totalAmount: \"0\"\n  */\n\n  const { colorMode } = useColorMode();\n\n  const [percentage, setPercentage] = useState(0);\n  const [diffText, setDiffText] = useState(\"\");\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      let perc = Math.min(\n        Math.floor(\n          ((Date.now() / 1000 - game.createdTime) /\n            (game.resolveTime - game.createdTime)) *\n            100\n        ),\n        100\n      );\n      if (perc < 0) {\n        perc = 100;\n      }\n      setPercentage(perc);\n\n      const timeLeft = Math.max(\n        0,\n        Math.floor(game.resolveTime - Date.now() / 1000)\n      );\n      let s = \"\";\n      if (timeLeft === 0) {\n        setDiffText(\"Closed\");\n      } else if (timeLeft < 60) {\n        if (timeLeft > 1) {\n          s = \"s\";\n        }\n        setDiffText(`${timeLeft} second${s}`);\n      } else if (timeLeft < 60 * 60) {\n        if (Math.max(1, Math.floor(timeLeft / 60)) > 1) {\n          s = \"s\";\n        }\n        setDiffText(`${Math.max(1, Math.floor(timeLeft / 60))} minute${s}`);\n      } else if (timeLeft < 24 * 60 * 60) {\n        if (Math.max(1, Math.floor(timeLeft / (60 * 60))) > 1) {\n          s = \"s\";\n        }\n        setDiffText(\n          `${Math.max(1, Math.floor(timeLeft / (60 * 60)))} hour${s}`\n        );\n      } else {\n        setDiffText(\">24 hours\");\n      }\n    }, 1000);\n\n    return () => clearInterval(intervalId); //This is important\n  }, [game.createdTime, game.resolveTime]);\n\n  const navigate = useNavigate();\n  const totalSupply = 1000; // hardcoded 1000 token supply limit\n  return (\n    <Box w=\"40%\" display=\"flex\" justifyContent=\"center\">\n      <Box\n        w=\"100%\"\n        border={colorMode === \"light\" ? \"1px solid black\" : \"1px solid gray\"}\n        borderRadius=\"15px\"\n        bgColor={colorMode === \"light\" ? \"gray.100\" : \"gray.900\"}\n        _hover={{\n          // background: colorMode === \"light\" ? \"facebook.200\" : \"facebook.800\",\n          // cursor: \"pointer\",\n          // borderColor: \"facebook.200\",\n          boxShadow: \"3px 6px #888888\",\n        }}\n      >\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-start\"\n          alignItems=\"center\"\n          px=\"5\"\n          py=\"8\"\n          columnGap=\"5\"\n        >\n          <Box w=\"80px\" minW=\"80px\" h=\"65px\" minH=\"65px\" p=\"0.5\" mr=\"4\">\n            <CircularProgressbar\n              value={percentage}\n              text={diffText}\n              styles={buildStyles({\n                textSize: \"16px\",\n                textColor: colorMode === \"light\" ? \"black\" : \"white\",\n                trailColor: colorMode === \"light\" ? \"#718096\" : \"#d6d6d6\",\n                pathColor: colorMode === \"light\" ? \"#38B2AC\" : \"#3182CE\",\n              })}\n              strokeWidth={10}\n            />\n          </Box>\n          <Heading size=\"md\">{game.title}</Heading>\n          <Button\n            ml=\"auto\"\n            colorScheme=\"telegram\"\n            borderRadius=\"15px\"\n            onClick={() => navigate(`/game/${game.id}`)}\n            minW=\"80px\"\n            variant=\"outline\"\n          >\n            Details\n          </Button>\n        </Box>\n\n        <Box display=\"flex\">\n          <Box px=\"5\" py=\"2\" textAlign=\"center\" mr=\"1\">\n            <Text fontSize=\"md\">Total Amount</Text>\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\n              {game.totalAmount} HMTKN\n            </Text>\n          </Box>\n          <Box pb=\"5\" pt=\"1\" mx=\"auto\" w=\"450px\" maxW=\"65%\">\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-evenly\"\n              columnGap=\"3\"\n              py=\"1.5\"\n            >\n              <Heading size=\"md\" w=\"40px\">\n                Yes\n              </Heading>\n              <Box w=\"100%\" maxW=\"100%\">\n                <ProgressBar\n                  completed={Math.floor(\n                    (parseInt(game.betYesAmount) / totalSupply) * 100\n                  )}\n                  maxCompleted={100}\n                  bgColor=\"#3CCF4E\"\n                  baseBgColor={colorMode === \"light\" ? \"#4A5568\" : \"#EBF8FF\"}\n                  customLabel={`${game.betYesAmount}`}\n                  width=\"100%\"\n                  labelSize=\"14px\"\n                  height=\"30px\"\n                />\n              </Box>\n            </Box>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"space-evenly\"\n              columnGap=\"3\"\n              py=\"1.5\"\n            >\n              <Heading size=\"md\" w=\"40px\">\n                No\n              </Heading>\n              <Box w=\"100%\" maxW=\"100%\">\n                <ProgressBar\n                  completed={Math.floor(\n                    (parseInt(game.betNoAmount) / totalSupply) * 100\n                  )}\n                  maxCompleted={100}\n                  bgColor=\"#FF1E1E\"\n                  baseBgColor={colorMode === \"light\" ? \"#4A5568\" : \"#EBF8FF\"}\n                  customLabel={`${game.betNoAmount}`}\n                  width=\"100%\"\n                  labelSize=\"14px\"\n                  height=\"30px\"\n                />\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default GameCard;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Divider,\n  FormControl,\n  FormLabel,\n  Heading,\n  Spinner,\n  Switch,\n  Text,\n  useColorMode,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { hwangMarket, getAllGames } from \"../util/interact\";\n\nimport CreateGame from \"./CreateGame\";\nimport GameCard from \"./GameCard\";\n\nconst GamesGallery = ({ walletAddress }) => {\n  const [status, setStatus] = useState(\"\");\n  const [getGameId, setGetGameId] = useState(0);\n  const [isLoading, setLoading] = useState(true);\n  const [ongoingGames, setOngoingGames] = useState(null);\n  const [closedGames, setClosedGames] = useState([]);\n  const [showClosed, setShowClosed] = useState(false);\n\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n\n  function addHwangMarketListener() {\n    console.log(\"hwang market game created listener added\");\n    hwangMarket.events.GameCreated({}, (error, data) => {\n      if (error) {\n        setStatus(\"😥 Cannot connect to the network\");\n        console.log(error.message);\n        setLoading(false);\n      } else if (data && data.returnValues && data.returnValues.gameMetadata) {\n        toast({\n          title: \"New game created!\",\n          description: `${data.returnValues.gameMetadata.title}`,\n          status: \"success\",\n          duration: 8000,\n          isClosable: true,\n        });\n        setOngoingGames((prev) => [...prev, data.returnValues.gameMetadata]);\n        // setStatus(\"🎉 Your game was created!\");\n      }\n    });\n\n    hwangMarket.events.GameConcluded({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const games = await getAllGames();\n        setOngoingGames(games.ongoingGames);\n        setClosedGames(games.closedGames);\n      }\n    });\n  }\n\n  useEffect(() => {\n    addHwangMarketListener();\n    setLoading(true);\n    async function getGames() {\n      try {\n        const games = await getAllGames();\n        setOngoingGames(games.ongoingGames);\n        setClosedGames(games.closedGames);\n      } catch {\n        setStatus(\"😥 Cannot connect to the network\");\n      }\n      setLoading(false);\n    }\n    getGames();\n  }, []);\n\n  return (\n    <Box px=\"28\" py=\"7\">\n      <Heading size=\"2xl\" textAlign=\"center\">\n        Markets Gallery\n      </Heading>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        alignItems=\"center\"\n        columnGap=\"10\"\n        mt=\"7\"\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          columnGap=\"2\"\n          rowGap=\"2\"\n        >\n          <Text>Show closed games:</Text>\n          <Switch\n            colorScheme=\"teal\"\n            size=\"lg\"\n            isChecked={showClosed}\n            onChange={() => setShowClosed((prev) => !prev)}\n          />\n        </Box>\n        <Text\n          px=\"4\"\n          py=\"2\"\n          border={colorMode === \"light\" ? \"1px solid black\" : \"1px solid white\"}\n          borderRadius=\"10px\"\n        >\n          Number of open games: {ongoingGames ? ongoingGames.length : 0}\n        </Text>\n        <CreateGame walletAddress={walletAddress} setStatus={setStatus} />\n      </Box>\n\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexWrap=\"wrap\"\n        rowGap=\"16\"\n        columnGap=\"16\"\n        my=\"24\"\n      >\n        {isLoading ? (\n          <Spinner size=\"lg\" color=\"red.500\" />\n        ) : status ? (\n          <Heading>{status}</Heading>\n        ) : ongoingGames && ongoingGames.length > 0 ? (\n          ongoingGames\n            .slice()\n            .reverse()\n            .map((g) => <GameCard key={g.addr} game={g} />)\n        ) : (\n          <Box>\n            <Text fontSize=\"3xl\">\n              No open games, create one to get started!\n            </Text>\n          </Box>\n        )}\n\n        <Divider />\n        {showClosed &&\n          (closedGames && closedGames.length > 0 ? (\n            closedGames\n              .slice()\n              .reverse()\n              .map((g) => <GameCard key={g.addr} game={g} />)\n          ) : (\n            <Text fontSize=\"3xl\">No closed games!</Text>\n          ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default GamesGallery;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  useColorMode,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Heading,\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  FormHelperText,\n  Box,\n  Text,\n  Divider,\n  useToast,\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n} from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  getMainTokenAddr,\n  getNetworkID,\n  getNetworkTokenBalance,\n  getNetworkTokenInfo,\n  mintMainToken,\n} from \"../../util/interact\";\nimport { eth2MainConversionRate, shortenAddr } from \"../../util/helper\";\nimport { BigNumber } from \"ethers\";\n\nexport default function GetHMTKN({ wallet, isOpen, onClose }) {\n  const [networkTknBalance, setNetworkTknBalance] = useState(0);\n  const [networkId, setNetworkId] = useState(\"\");\n  const [mintAmt, setMintAmt] = useState(\"\");\n  const [mainTokenAddr, setMainTokenAddr] = useState(\"\");\n  const [networkInfo, setNetworkInfo] = useState(null);\n\n  const toast = useToast();\n\n  useEffect(() => {\n    const update = async () => {\n      setNetworkTknBalance(await getNetworkTokenBalance(wallet));\n      setNetworkId(await getNetworkID());\n      setMainTokenAddr(await getMainTokenAddr());\n      setNetworkInfo(await getNetworkTokenInfo());\n    };\n    update();\n  }, [wallet]);\n\n  const mintHMTKN = async () => {\n    const { trxHash, err } = await mintMainToken(wallet, mintAmt);\n    if (err) {\n      toast({\n        title: \"Transaction failed!\",\n        description: err,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } else {\n      toast({\n        title: \"Creating listing...\",\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\n        status: \"info\",\n        duration: 20000,\n        isClosable: true,\n      });\n    }\n    setMintAmt(\"\");\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\n      <ModalOverlay />\n      <ModalContent borderRadius=\"17px\">\n        <ModalHeader>\n          <FontAwesomeIcon\n            color=\"#ECC94B\"\n            icon={faHeart}\n            style={{ marginRight: \"10px\" }}\n          />\n          Get HMTKN\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Box>\n            <Box my=\"2\">\n              <Heading size=\"sm\">Network ID: {networkId}</Heading>\n              <Text fontSize=\"sm\">\n                This is a guesstimate of the network you are on.\n              </Text>\n            </Box>\n            <Heading size=\"sm\" my=\"5\">\n              Network Token balance: {networkTknBalance}\n            </Heading>\n          </Box>\n          <Heading size=\"sm\">HMTKN address: </Heading>{\" \"}\n          <Text my=\"1\" fontWeight=\"bold\" fontSize=\"sm\">\n            {mainTokenAddr}\n          </Text>\n          <Divider my=\"5\" />\n          <FormControl>\n            <FormLabel>Amount of HMTKN to mint</FormLabel>\n            <NumberInput\n              value={mintAmt}\n              min={1}\n              max={networkTknBalance}\n              onChange={(v) => setMintAmt(v)}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n            <FormHelperText>\n              Mints HMTKN from an uncapped supply, in exchange for the network's\n              main token. Your maximum mintable amount: {networkTknBalance}\n            </FormHelperText>\n          </FormControl>\n          {mintAmt !== \"\" && (\n            <>\n              <Box mt=\"8\" mb=\"4\">\n                <Heading size=\"sm\">Transaction Summary</Heading>\n                <Text fontSize=\"xs\">\n                  The network native currency is a \"best effort guess\" by us. It\n                  may or may not be accurate. Do refer to the actual\n                  confirmation by Metamask when prompted.\n                </Text>\n              </Box>\n              <StatGroup w=\"100%\">\n                <Stat>\n                  <StatLabel>Exchange rate for 1 HMTKN</StatLabel>\n                  <StatNumber>\n                    1{\" \"}\n                    {networkInfo && networkInfo.nativeCurrency\n                      ? networkInfo.nativeCurrency.symbol\n                      : \"Network native currency\"}\n                  </StatNumber>\n                  <StatHelpText>Fixed</StatHelpText>\n                </Stat>\n                <Stat>\n                  <StatLabel>\n                    {networkInfo && networkInfo.nativeCurrency\n                      ? networkInfo.nativeCurrency.symbol\n                      : \"Network native currency\"}\n                  </StatLabel>\n                  <StatNumber>\n                    {mintAmt * (1 / eth2MainConversionRate)}\n                  </StatNumber>\n                  <StatHelpText>\n                    <StatArrow type=\"decrease\" />\n                    Lose {mintAmt * (1 / eth2MainConversionRate)}{\" \"}\n                    {networkInfo && networkInfo.nativeCurrency\n                      ? networkInfo.nativeCurrency.name\n                      : \"Network native currency\"}\n                  </StatHelpText>\n                  <StatHelpText>\n                    <Text fontSize=\"xs\">\n                      {networkInfo && networkInfo.nativeCurrency\n                        ? networkInfo.nativeCurrency.name\n                        : \"Network native currency\"}\n                    </Text>\n                  </StatHelpText>\n                </Stat>\n                <Stat>\n                  <StatLabel>HMTKN</StatLabel>\n                  <StatNumber>{mintAmt}</StatNumber>\n                  <StatHelpText>\n                    <StatArrow type=\"increase\" />\n                    Gain {mintAmt} HMTKN\n                  </StatHelpText>\n                  <StatHelpText>\n                    <Text fontSize=\"xs\">{mainTokenAddr}</Text>\n                  </StatHelpText>\n                </Stat>\n              </StatGroup>\n            </>\n          )}\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={onClose} variant=\"outline\">\n            Close\n          </Button>\n          <Button\n            variant=\"outline\"\n            colorScheme=\"whatsapp\"\n            disabled={\n              mintAmt !== \"\" &&\n              BigNumber.from(mintAmt).gt(BigNumber.from(networkTknBalance))\n            }\n            onClick={mintHMTKN}\n          >\n            Mint\n          </Button>\n        </ModalFooter>\n\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <FontAwesomeIcon\n            color=\"#ECC94B\"\n            icon={faHeart}\n            style={{ marginRight: \"10px\" }}\n          />\n          <Text as=\"cite\" my=\"5\">\n            If it works, do not touch it!\n          </Text>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  useColorMode,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Heading,\n  FormControl,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  FormHelperText,\n  Box,\n  Text,\n  Divider,\n  useToast,\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n} from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart,\n  faMoneyBillTransfer,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  cashoutMainToken,\n  getMainTokenAddr,\n  getMainTokenBalance,\n  getNetworkID,\n  getNetworkTokenInfo,\n  mainTokenABI,\n  mintMainToken,\n  web3,\n} from \"../../util/interact\";\nimport { eth2MainConversionRate, shortenAddr } from \"../../util/helper\";\nimport { BigNumber } from \"ethers\";\n\nexport default function CashoutHMTKN({ wallet, isOpen, onClose }) {\n  const [mainTknBalance, setMainTknBalance] = useState(0);\n  const [networkId, setNetworkId] = useState(\"\");\n  const [cashoutAmt, setCashoutAmt] = useState(\"\");\n  const [mainTokenAddr, setMainTokenAddr] = useState(\"\");\n  const [networkInfo, setNetworkInfo] = useState(null);\n\n  const toast = useToast();\n\n  useEffect(() => {\n    const update = async () => {\n      setMainTknBalance(await getMainTokenBalance(wallet));\n      setNetworkId(await getNetworkID());\n      setMainTokenAddr(await getMainTokenAddr());\n      setNetworkInfo(await getNetworkTokenInfo());\n    };\n    update();\n  }, [wallet]);\n\n  const cashoutHMTKN = async () => {\n    const { trxHash, err } = await cashoutMainToken(wallet, cashoutAmt);\n    if (err) {\n      toast({\n        title: \"Transaction failed!\",\n        description: err,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } else {\n      toast({\n        title: \"Creating listing...\",\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\n        status: \"info\",\n        duration: 20000,\n        isClosable: true,\n      });\n    }\n    setCashoutAmt(\"\");\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\">\n      <ModalOverlay />\n      <ModalContent borderRadius=\"17px\">\n        <ModalHeader>\n          <FontAwesomeIcon\n            color=\"#48BB78\"\n            icon={faMoneyBillTransfer}\n            style={{ marginRight: \"10px\" }}\n          />\n          Cash out HMTKN\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Box>\n            <Box my=\"2\">\n              <Heading size=\"sm\">Network ID: {networkId}</Heading>\n              <Text fontSize=\"sm\">\n                This is a guesstimate of the network you are on.\n              </Text>\n            </Box>\n            <Heading size=\"sm\" my=\"5\">\n              HMTKN balance: {mainTknBalance}\n            </Heading>\n          </Box>\n          <Heading size=\"sm\">HMTKN address: </Heading>{\" \"}\n          <Text my=\"1\" fontWeight=\"bold\" fontSize=\"sm\">\n            {mainTokenAddr}\n          </Text>\n          <Divider my=\"5\" />\n          <FormControl>\n            <FormLabel>Amount of HMTKN to cash out</FormLabel>\n            <NumberInput\n              value={cashoutAmt}\n              min={1}\n              max={getMainTokenBalance}\n              onChange={(v) => setCashoutAmt(v)}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n            <FormHelperText>\n              Withdraws HMTKN from your account and deposits the equivalent\n              amount into your wallet in the form of the network's native token.\n            </FormHelperText>\n          </FormControl>\n          {cashoutAmt !== \"\" && (\n            <>\n              <Box mt=\"8\" mb=\"4\">\n                <Heading size=\"sm\">Transaction Summary</Heading>\n                <Text fontSize=\"xs\">\n                  The network native currency is a \"best effort guess\" by us. It\n                  may or may not be accurate. Do refer to the actual\n                  confirmation by Metamask when prompted.\n                </Text>\n              </Box>\n              <StatGroup w=\"100%\">\n                <Stat>\n                  <StatLabel>Exchange rate for 1 HMTKN</StatLabel>\n                  <StatNumber>\n                    1{\" \"}\n                    {networkInfo && networkInfo.nativeCurrency\n                      ? networkInfo.nativeCurrency.symbol\n                      : \"Network native currency\"}\n                  </StatNumber>\n                  <StatHelpText>Fixed</StatHelpText>\n                </Stat>\n                <Stat>\n                  <StatLabel>\n                    {networkInfo && networkInfo.nativeCurrency\n                      ? networkInfo.nativeCurrency.symbol\n                      : \"Network native currency\"}\n                  </StatLabel>\n                  <StatNumber>\n                    {cashoutAmt * (1 / eth2MainConversionRate)}\n                  </StatNumber>\n                  <StatHelpText>\n                    <StatArrow type=\"increase\" />\n                    Gain {cashoutAmt * (1 / eth2MainConversionRate)}{\" \"}\n                    {networkInfo && networkInfo.nativeCurrency\n                      ? networkInfo.nativeCurrency.name\n                      : \"Network native currency\"}\n                  </StatHelpText>\n                  <StatHelpText>\n                    <Text fontSize=\"xs\">\n                      {networkInfo && networkInfo.nativeCurrency\n                        ? networkInfo.nativeCurrency.name\n                        : \"Network native currency\"}\n                    </Text>\n                  </StatHelpText>\n                </Stat>\n                <Stat>\n                  <StatLabel>HMTKN</StatLabel>\n                  <StatNumber>{cashoutAmt}</StatNumber>\n                  <StatHelpText>\n                    <StatArrow type=\"decrease\" />\n                    Lose {cashoutAmt} HMTKN\n                  </StatHelpText>\n                  <StatHelpText>\n                    <Text fontSize=\"xs\">{mainTokenAddr}</Text>\n                  </StatHelpText>\n                </Stat>\n              </StatGroup>\n            </>\n          )}\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={onClose} variant=\"outline\">\n            Close\n          </Button>\n          <Button\n            variant=\"outline\"\n            colorScheme=\"whatsapp\"\n            disabled={\n              cashoutAmt !== \"\" &&\n              BigNumber.from(cashoutAmt).gt(BigNumber.from(mainTknBalance))\n            }\n            onClick={cashoutHMTKN}\n          >\n            Cash out\n          </Button>\n        </ModalFooter>\n\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <FontAwesomeIcon\n            color=\"#48BB78\"\n            icon={faMoneyBillTransfer}\n            style={{ marginRight: \"10px\" }}\n          />\n          <Text as=\"cite\" my=\"5\">\n            Cash me outside howbow dah\n          </Text>\n        </Box>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Heading,\n  Text,\n  Button,\n  useToast,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  StatGroup,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  hwangMarket,\n  createAGame,\n  getGameAddrById,\n  getCurrentWalletConnected,\n  connectWallet,\n  web3,\n  mainTokenABI,\n  getMainTokenAddr,\n  getMainTokenBalance,\n} from \"../util/interact\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSun,\n  faMoon,\n  faHeart,\n  faEthernet,\n  faCashRegister,\n  faMoneyBill,\n  faMoneyBillTransfer,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { shortenAddr } from \"../util/helper\";\nimport { BigNumber } from \"ethers\";\nimport GetHMTKN from \"./hmtknModals/GetHMTKN\";\nimport CashoutHMTKN from \"./hmtknModals/CashoutHMTKN\";\n\nconst CommonTop = ({ wallet, setWallet, colorMode, toggleColorMode }) => {\n  const [status, setStatus] = useState(\"\");\n  const [hmtknAddr, setHmtknAddr] = useState(\"\");\n  const [hmtknBalance, setHmtknBalance] = useState(\"-\");\n  const [isGetHMTKN, setIsGetHMTKN] = useState(true);\n\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const addHMTKNTransferListener = async () => {\n    console.log(\"HMTKN transfer listener added\");\n    const mainTokenContract = new web3.eth.Contract(\n      mainTokenABI,\n      await getMainTokenAddr()\n    );\n    mainTokenContract.events.Transfer({}, (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        /*\n        from: \"0x3E0944145a5B83D03C09b93CD4CCdFaE6dd817AB\"\n        to: \"0xb50b7E6629901979580a440B8C066122506Ed7ae\"\n        value: \"4\"\n        */\n        if (String(details.to).toLowerCase() === String(wallet).toLowerCase()) {\n          toast({\n            title: \"HMTKN received!\",\n            description: `You have received ${\n              details.value\n            } HMTKN from ${shortenAddr(details.from)}`,\n            status: \"success\",\n            duration: 8000,\n            isClosable: true,\n          });\n\n          setHmtknBalance((prev) =>\n            BigNumber.from(prev).add(BigNumber.from(details.value)).toString()\n          );\n        } else if (\n          String(details.from).toLowerCase() === String(wallet).toLowerCase()\n        ) {\n          toast({\n            title: \"HMTKN sent!\",\n            description: `You have sent ${details.value} HMTKN to ${shortenAddr(\n              details.to\n            )}`,\n            status: \"success\",\n            duration: 8000,\n            isClosable: true,\n          });\n          setHmtknBalance((prev) =>\n            BigNumber.from(prev).sub(BigNumber.from(details.value)).toString()\n          );\n        }\n      }\n    });\n  };\n\n  const connectWalletPressed = async () => {\n    if (wallet) {\n      return;\n    }\n    const walletResponse = await connectWallet();\n\n    setStatus(walletResponse.status);\n    setWallet(walletResponse.address);\n  };\n\n  function addWalletListener() {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        if (accounts.length > 0) {\n          setWallet(accounts[0]);\n          setStatus(\"\");\n        } else {\n          setWallet(\"\");\n          setStatus(\"🦊 Connect to Metamask\");\n        }\n      });\n    } else {\n      setStatus(\n        <p>\n          {\" \"}\n          🦊{\" \"}\n          <a target=\"_blank\" href={`https://metamask.io/download`}>\n            You must install Metamask, a virtual Ethereum wallet, in your\n            browser.\n          </a>\n        </p>\n      );\n    }\n  }\n\n  useEffect(() => {\n    async function fetchWallet() {\n      const { address, status } = await getCurrentWalletConnected();\n      setWallet(address);\n      setStatus(status);\n    }\n    fetchWallet();\n\n    async function updateHmtknMetadata() {\n      setHmtknBalance(await getMainTokenBalance(wallet));\n      setHmtknAddr(await getMainTokenAddr());\n    }\n    updateHmtknMetadata();\n\n    addWalletListener();\n    addHMTKNTransferListener();\n  }, [wallet]);\n\n  const navigate = useNavigate();\n\n  return (\n    <Box display=\"flex\" p=\"5\" alignItems=\"center\" px=\"5%\" flexWrap=\"wrap\">\n      <Box _hover={{ cursor: \"pointer\" }} onClick={() => navigate(\"/\")}>\n        <Heading color=\"blue.600\">HWANGMARKET</Heading>\n        <Text>The only place to lose your money, fast.</Text>\n      </Box>\n      <Box\n        mr=\"auto\"\n        ml=\"24\"\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        alignItems=\"center\"\n        columnGap=\"16\"\n      >\n        <Button\n          variant=\"outline\"\n          colorScheme=\"facebook\"\n          borderRadius=\"13px\"\n          p=\"5\"\n          onClick={() => navigate(\"/\")}\n        >\n          Markets\n        </Button>\n        <Button\n          variant=\"outline\"\n          colorScheme=\"facebook\"\n          borderRadius=\"13px\"\n          p=\"5\"\n          onClick={() => navigate(\"/history\")}\n        >\n          History\n        </Button>\n      </Box>\n      <Box>\n        <Box\n          display=\"flex\"\n          flexDir=\"column\"\n          alignItems=\"flex-end\"\n          columnGap=\"5\"\n          rowGap=\"4\"\n        >\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-evenly\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            rowGap=\"5\"\n            columnGap=\"10\"\n          >\n            <Button\n              onClick={toggleColorMode}\n              variant=\"outline\"\n              colorScheme={colorMode === \"dark\" ? \"orange\" : \"black\"}\n            >\n              {colorMode === \"light\" ? (\n                <FontAwesomeIcon icon={faMoon} />\n              ) : (\n                <FontAwesomeIcon icon={faSun} />\n              )}\n            </Button>\n            <Box\n              display=\"flex\"\n              flexDir=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              rowGap=\"2\"\n            >\n              <Button\n                mt=\"2\"\n                onClick={connectWalletPressed}\n                variant=\"outline\"\n                colorScheme=\"linkedin\"\n              >\n                {wallet.length > 0 ? (\n                  \"Connected: \" + shortenAddr(wallet)\n                ) : (\n                  <span>Connect Wallet</span>\n                )}\n              </Button>\n              <Text>{status}</Text>\n            </Box>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            rowGap=\"5\"\n            columnGap=\"10\"\n          >\n            <Stat>\n              <StatLabel>HMTKN Balance</StatLabel>\n              <StatNumber>{hmtknBalance} HMTKN</StatNumber>\n              <StatHelpText>{shortenAddr(hmtknAddr)}</StatHelpText>\n            </Stat>\n            <Button\n              variant=\"outline\"\n              colorScheme=\"yellow\"\n              leftIcon={<FontAwesomeIcon icon={faHeart} />}\n              onClick={() => {\n                onOpen();\n                setIsGetHMTKN(true);\n              }}\n            >\n              Get HMTKN\n            </Button>\n            <Button\n              variant=\"outline\"\n              colorScheme=\"whatsapp\"\n              leftIcon={<FontAwesomeIcon icon={faMoneyBillTransfer} />}\n              onClick={() => {\n                onOpen();\n                setIsGetHMTKN(false);\n              }}\n            >\n              Cash out HMTKN\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n\n      {isGetHMTKN ? (\n        <GetHMTKN wallet={wallet} isOpen={isOpen} onClose={onClose} />\n      ) : (\n        <CashoutHMTKN wallet={wallet} isOpen={isOpen} onClose={onClose} />\n      )}\n    </Box>\n  );\n};\n\nexport default CommonTop;\n","import { Box } from \"@chakra-ui/react\";\nimport { useRouteError } from \"react-router-dom\";\n\nexport default function ErrorPage() {\n  return (\n    <Box\n      my=\"16\"\n      display=\"flex\"\n      flexDir=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <h1>Oops!</h1>\n      <p>Sorry, an unexpected error has occurred.</p>\n      <p>\n        <i>Not Found</i>\n      </p>\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  TableContainer,\n  Table,\n  TableCaption,\n  Thead,\n  Tr,\n  Td,\n  Th,\n  Tbody,\n  Tfoot,\n  Badge,\n  Tooltip,\n  Tag,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverHeader,\n  PopoverBody,\n  Text,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { getGameTrxsByAddr, hwangMarket } from \"../util/interact\";\nimport { shortenAddr, sleep } from \"../util/helper\";\n\nexport default function GameTransactionsHistory({ gameAddr }) {\n  const [gameTrxs, setGameTrxs] = useState([]);\n  const [bgColor, setBgColor] = useState(\"\");\n  const { colorMode } = useColorMode();\n  /*\n    [\n      amount: \"1\"\n      betSide: \"1\"\n      gameAddr: \"0x439AB69D18De2aDEdBdde92146FDC14a155F3f8b\"\n      gameId: \"1\"\n      player: \"0xb50b7E6629901979580a440B8C066122506Ed\"\n    ]\n  */\n\n  const addPlayerJoinedGameListener = () => {\n    console.log(\"hwang market player joined game listener added\");\n    hwangMarket.events.PlayerJoinedGameEvent({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        setGameTrxs((prev) => [\n          ...prev,\n          {\n            ...details,\n            to: details.player,\n            from: gameAddr,\n            trxAmt: details.amount,\n            gameSide: details.betSide,\n          },\n        ]);\n        let color = \"\";\n        if (details.betSide === \"1\") {\n          color = colorMode === \"light\" ? \"#9AE6B4\" : \"#22543D\";\n        } else {\n          color = colorMode === \"light\" ? \"#FED7D7\" : \"#822727\";\n        }\n        setBgColor(color);\n        await sleep(1500);\n        // reset back to normal color\n        setBgColor(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    const updateTrxs = async () => {\n      const trxs = await getGameTrxsByAddr(gameAddr);\n      setGameTrxs(trxs);\n    };\n    updateTrxs();\n    addPlayerJoinedGameListener();\n  }, [colorMode, gameAddr]);\n\n  return (\n    <Box>\n      <Heading my=\"5\" fontSize=\"xl\">\n        Latest Transactions\n      </Heading>\n      <TableContainer overflowY=\"scroll\" maxH=\"60vh\">\n        <Table variant=\"simple\">\n          <TableCaption>Transactions logged in game contract</TableCaption>\n          <Thead>\n            <Tr>\n              <Th>Address</Th>\n              <Th>Amount (in HMTKN)</Th>\n              <Th>Prediction</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {gameTrxs && gameTrxs.length > 0 ? (\n              gameTrxs\n                .slice()\n                .reverse()\n                .map((trx, i) => (\n                  <Tr key={i} bgColor={i === 0 ? bgColor : \"\"}>\n                    <Td>\n                      <Popover>\n                        <PopoverTrigger>\n                          <Tag _hover={{ cursor: \"pointer\" }}>\n                            {shortenAddr(trx.to)}\n                          </Tag>\n                        </PopoverTrigger>\n                        <PopoverContent\n                          minW={{ base: \"100%\", lg: \"max-content\" }}\n                        >\n                          <PopoverArrow />\n                          <PopoverCloseButton />\n                          <PopoverHeader>Player Address</PopoverHeader>\n                          <PopoverBody>\n                            <Box>\n                              <Text fontSize=\"sm\">{trx.to}</Text>\n                            </Box>\n                          </PopoverBody>\n                        </PopoverContent>\n                      </Popover>\n                    </Td>\n                    <Td>{trx.trxAmt}</Td>\n                    <Td>\n                      {trx.gameSide === \"1\" ? (\n                        <Badge colorScheme=\"green\" variant=\"outline\">\n                          Yes\n                        </Badge>\n                      ) : (\n                        <Badge colorScheme=\"red\" variant=\"outline\">\n                          No\n                        </Badge>\n                      )}\n                    </Td>\n                  </Tr>\n                ))\n            ) : (\n              <Tr>\n                <Td>-</Td>\n                <Td>-</Td>\n                <Td>-</Td>\n              </Tr>\n            )}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import {\n  Box,\n  Button,\n  Heading,\n  useColorMode,\n  Text,\n  TableContainer,\n  Table,\n  TableCaption,\n  Thead,\n  Tr,\n  Td,\n  Th,\n  Tbody,\n  Tfoot,\n  Badge,\n  Tooltip,\n  Tag,\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n} from \"@chakra-ui/react\";\nimport {\n  faArrowRight,\n  faLineChart,\n  faPlus,\n  faPlusCircle,\n  faPlusSquare,\n  faQuestion,\n  faStop,\n  faStopCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { shortenAddr, sleep } from \"../util/helper\";\nimport { gameContractABI, web3 } from \"../util/interact\";\n\nexport default function GameActiveListings({\n  game,\n  setIsDialog,\n  onOpen,\n  gytAddr,\n  gntAddr,\n  hmtknAddr,\n  setIsCreate,\n  setListingSelected,\n}) {\n  // useEffect(() => {\n  //   getGameTrxs(gameAddr, setGameTrxs);\n  // }, [gameAddr]);\n  const [openListings, setOpenListings] = useState([]);\n  const [bgColor, setBgColor] = useState(\"\");\n  const [closedListings, setClosedListings] = useState([]);\n  const [gntPrice, setGntPrice] = useState([1, 1]);\n  const [gytPrice, setGytPrice] = useState([1, 1]);\n  const [delListing, setDelListing] = useState(null);\n\n  const { colorMode } = useColorMode();\n\n  const addNewListingListener = () => {\n    if (!game || !game.addr || !gytAddr || !gntAddr) {\n      return;\n    }\n    console.log(\"game new listing listener added\");\n    const gameContract = new web3.eth.Contract(gameContractABI, game.addr);\n    gameContract.events.NewListing({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues.listingInfo;\n        /*\n          fulfilled: false\n          listingAddr: \"0xD2be281e9379F56fDB84C61973a6b341f495106F\"\n          listingId: \"0\"\n          player1: \"0xc55De8931433adB28eE7767782E716dD00F7DEd9\"\n          player2: \"0x0000000000000000000000000000000000000000\"\n          token1: \"0x2063eE55A823B9F80DB2Ee5Ef503abbC44347eeD\"\n          token1Amt: \"100\"\n          token2: \"0x1AB8b37A77DC9563190f1058AD72f00aa2698d96\"\n          token2Amt: \"150\"\n        */\n        if (!details.fulfilled) {\n          setOpenListings((prev) => [...prev, details]);\n        } else {\n          setClosedListings((prev) => [...prev, details]);\n        }\n        setBgColor(colorMode === \"light\" ? \"#9AE6B4\" : \"#22543D\");\n        await sleep(1500);\n        // reset back to normal color\n        setBgColor(\"\");\n      }\n    });\n  };\n\n  const addListingFulfilledListener = async () => {\n    if (!game || !game.addr || !gytAddr || !gntAddr) {\n      return;\n    }\n    console.log(\"listing fulfilled listener added\");\n    const gameContract = await new web3.eth.Contract(\n      gameContractABI,\n      game.addr\n    );\n    gameContract.events.ListingFulfilled({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues.listingInfo;\n        // let it shine red for 1.5s\n        setDelListing(details);\n        // trigger rerender\n        setOpenListings((prev) =>\n          prev.map((ol) => (ol.listingId === details.listingId ? details : ol))\n        );\n\n        if (details.token2.toLowerCase() === hmtknAddr.toLowerCase()) {\n          if (details.token1.toLowerCase() === gytAddr.toLowerCase()) {\n            setGytPrice((prev) => {\n              console.log(\"new\", [\n                prev[1],\n                +(\n                  Number(details.token2Amt) / Number(details.token1Amt)\n                ).toFixed(2),\n              ]);\n              return [\n                prev[1],\n                +(\n                  Number(details.token2Amt) / Number(details.token1Amt)\n                ).toFixed(2),\n              ];\n            });\n          } else if (details.token1.toLowerCase() === gntAddr.toLowerCase()) {\n            setGntPrice((prev) => {\n              console.log(\"new\", [\n                prev[1],\n                +(\n                  Number(details.token2Amt) / Number(details.token1Amt)\n                ).toFixed(2),\n              ]);\n              return [\n                prev[1],\n                +(\n                  Number(details.token2Amt) / Number(details.token1Amt)\n                ).toFixed(2),\n              ];\n            });\n          }\n        }\n\n        await sleep(1000);\n\n        setOpenListings((prev) =>\n          prev.filter((ol) => ol.listingId !== details.listingId)\n        );\n        setClosedListings((prev) => [...prev, details]);\n        setDelListing(null);\n      }\n    });\n  };\n\n  useEffect(() => {\n    addNewListingListener();\n    addListingFulfilledListener();\n  }, [game && game.addr, gytAddr, gntAddr]);\n\n  useEffect(() => {\n    async function getAllListings() {\n      console.log(\"get all listings...\");\n      if (!game || !game.addr) {\n        return;\n      }\n      const gameContract = new web3.eth.Contract(gameContractABI, game.addr);\n      const listings = await gameContract.methods.getAllListings().call();\n      setOpenListings(listings.filter((l) => !l.fulfilled));\n      const closed = listings.filter((l) => l.fulfilled);\n\n      setClosedListings(closed);\n      const closedGyt = closed.filter(\n        (l) =>\n          l.token1.toLowerCase() === gytAddr.toLowerCase() &&\n          l.token2.toLowerCase() === hmtknAddr.toLowerCase()\n      );\n      closedGyt.sort(\n        (x, y) => parseInt(y.fulfilledTime) - parseInt(x.fulfilledTime)\n      );\n\n      setGytPrice([\n        closedGyt.length > 1\n          ? +(\n              Number(closedGyt[1].token2Amt) / Number(closedGyt[1].token1Amt)\n            ).toFixed(2)\n          : 1,\n        closedGyt.length > 0\n          ? +(\n              Number(closedGyt[0].token2Amt) / Number(closedGyt[0].token1Amt)\n            ).toFixed(2)\n          : 1,\n      ]);\n\n      const closedGnt = closed.filter(\n        (l) =>\n          l.token1.toLowerCase() === gntAddr.toLowerCase() &&\n          l.token2.toLowerCase() === hmtknAddr.toLowerCase()\n      );\n      closedGnt.sort(\n        (x, y) => parseInt(y.fulfilledTime) - parseInt(x.fulfilledTime)\n      );\n      setGntPrice([\n        closedGnt.length > 1\n          ? +(\n              Number(closedGnt[1].token2Amt) / Number(closedGnt[1].token1Amt)\n            ).toFixed(2)\n          : 1,\n        closedGnt.length > 0\n          ? +(\n              Number(closedGnt[0].token2Amt) / Number(closedGnt[0].token1Amt)\n            ).toFixed(2)\n          : 1,\n      ]);\n    }\n    getAllListings();\n  }, [game && game.addr, hmtknAddr, gytAddr, gntAddr]);\n\n  const parseAddr = (addr) => {\n    return addr === gntAddr\n      ? \"GNT\"\n      : addr === gytAddr\n      ? \"GYT\"\n      : addr === hmtknAddr\n      ? \"HMTKN\"\n      : shortenAddr(addr);\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" columnGap=\"16\" mb=\"5\">\n        <Box>\n          <Heading size=\"md\">Insights</Heading>\n          <FontAwesomeIcon icon={faLineChart} />\n        </Box>\n        <StatGroup w=\"100%\">\n          <Stat size=\"xs\">\n            <StatLabel>GYT Price</StatLabel>\n            <StatNumber>{gytPrice[1]} HMTKN</StatNumber>\n            <StatHelpText>\n              {gytPrice[0] !== gytPrice[1] ? (\n                <StatArrow\n                  type={gytPrice[1] > gytPrice[0] ? \"increase\" : \"decrease\"}\n                />\n              ) : (\n                <FontAwesomeIcon\n                  icon={faArrowRight}\n                  style={{ marginRight: \"5px\" }}\n                />\n              )}\n              Prev: {gytPrice[0]} HMTKN\n            </StatHelpText>\n          </Stat>\n\n          <Stat size=\"xs\">\n            <StatLabel>GNT Price</StatLabel>\n            <StatNumber>{gntPrice[1]} HMTKN</StatNumber>\n            <StatHelpText>\n              {gntPrice[0] !== gntPrice[1] ? (\n                <StatArrow\n                  type={gntPrice[1] > gntPrice[0] ? \"increase\" : \"decrease\"}\n                />\n              ) : (\n                <FontAwesomeIcon\n                  icon={faArrowRight}\n                  style={{ marginRight: \"5px\" }}\n                />\n              )}\n              Prev: {gntPrice[0]} HMTKN\n            </StatHelpText>\n          </Stat>\n        </StatGroup>\n      </Box>\n\n      <Box\n        mb=\"5\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Heading fontSize=\"xl\">Open Listings</Heading>\n        <Button\n          leftIcon={\n            <FontAwesomeIcon style={{ marginLeft: \"6px\" }} icon={faPlus} />\n          }\n          size=\"sm\"\n          colorScheme=\"teal\"\n          variant=\"outline\"\n          onClick={() => {\n            setIsDialog(false);\n            setIsCreate(true);\n            onOpen();\n          }}\n        >\n          Create Listing\n        </Button>\n      </Box>\n      <TableContainer overflowY=\"scroll\" maxH=\"60vh\">\n        <Table variant=\"simple\" size=\"sm\">\n          <TableCaption>\n            For convenience, GYT and GNT tokens refer to this game's tokens.\n            Other game's tokens are referred to by their address.\n          </TableCaption>\n          <Thead>\n            <Tr>\n              <Th>Created time</Th>\n              <Th>Bid</Th>\n              <Th>Ask</Th>\n              <Th>Info</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {openListings && openListings.length > 0 ? (\n              openListings\n                .slice()\n                .reverse()\n                .map((ol, i) => (\n                  <Tr\n                    key={`${ol.listingId}`}\n                    bgColor={\n                      delListing && delListing.listingId === ol.listingId\n                        ? colorMode === \"light\"\n                          ? \"#FED7D7\"\n                          : \"#822727\"\n                        : i === 0\n                        ? bgColor\n                        : \"\"\n                    }\n                  >\n                    <Td>\n                      {new Intl.DateTimeFormat(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"2-digit\",\n                        day: \"2-digit\",\n                        hour: \"2-digit\",\n                        minute: \"2-digit\",\n                        second: \"2-digit\",\n                        timeZoneName: \"short\",\n                      }).format(parseInt(ol.createdTime) * 1000)}\n                    </Td>\n                    <Td fontWeight=\"bold\">\n                      {ol.token1Amt} {parseAddr(ol.token1)}\n                    </Td>\n                    <Td fontWeight=\"bold\">\n                      {ol.token2Amt} {parseAddr(ol.token2)}\n                    </Td>\n                    <Td>\n                      <Button\n                        size=\"sm\"\n                        colorScheme=\"telegram\"\n                        variant=\"outline\"\n                        onClick={() => {\n                          setIsCreate(false);\n                          setIsDialog(false);\n                          setListingSelected(ol);\n                          onOpen();\n                        }}\n                      >\n                        Details\n                      </Button>\n                    </Td>\n                  </Tr>\n                ))\n            ) : (\n              <Tr>\n                <Td>-</Td>\n                <Td>-</Td>\n                <Td>-</Td>\n                <Td>-</Td>\n                <Td>-</Td>\n              </Tr>\n            )}\n          </Tbody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  Link,\n  Button,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n} from \"@chakra-ui/react\";\n\nexport default function GameErrorDialog({ errorMsg, onClose }) {\n  return (\n    <>\n      <AlertDialogHeader>Purchase failed</AlertDialogHeader>\n      <AlertDialogCloseButton />\n      <AlertDialogBody>\n        <Text>Sorry, something went wong! Your funds are still safe.</Text>\n        <Text>{errorMsg}</Text>\n      </AlertDialogBody>\n\n      <AlertDialogFooter>\n        <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onClose}>\n          Acknowledge\n        </Button>\n      </AlertDialogFooter>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  Link,\n  Button,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function PurchaseConfirmationDialog({ trxHash, onClose }) {\n  const { colorMode } = useColorMode();\n\n  return (\n    <>\n      <AlertDialogHeader>Transaction confirmation 🚀</AlertDialogHeader>\n      <AlertDialogCloseButton />\n      <AlertDialogBody>\n        <Text>You can monitor your transaction at:</Text>\n        <Link\n          fontWeight=\"bold\"\n          color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n          isExternal\n          href={`https://goerli.etherscan.io/address/${trxHash}`}\n        >\n          {trxHash}\n          <FontAwesomeIcon icon={faExternalLink} />\n        </Link>\n        <Text>No further actions are needed on your end.</Text>\n        <Box pt=\"6\" mb=\"-6\">\n          <Text mt=\"8\" fontSize=\"11pt\" as=\"cite\">\n            Good luck! And may the odds be ever in your favour. 🦉\n          </Text>\n        </Box>\n      </AlertDialogBody>\n\n      <AlertDialogFooter>\n        <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onClose}>\n          Acknowledge\n        </Button>\n      </AlertDialogFooter>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  Button,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n  Spinner,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  Link,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  approveMainTokenSender,\n  getMainToken2SenderApprovalAmt,\n  getMainTokenBalance,\n  hwangMarketAddr,\n} from \"../../util/interact\";\n\nexport default function IncreaseAllowanceDialog({\n  wallet,\n  gameAddr,\n  onClose,\n  allowAmt,\n}) {\n  const [mainTknBalance, setMainTknBalance] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { colorMode } = useColorMode();\n\n  useEffect(() => {\n    const getBalance = async () => {\n      setIsLoading(true);\n      setMainTknBalance(await getMainTokenBalance(wallet));\n      setIsLoading(false);\n    };\n    getBalance();\n  }, [wallet]);\n\n  const doApprove = async () => {\n    await approveMainTokenSender(wallet, gameAddr, allowAmt);\n    onClose();\n  };\n\n  return (\n    <>\n      <AlertDialogHeader>Increase allowance 🚀</AlertDialogHeader>\n      <AlertDialogCloseButton />\n\n      <AlertDialogBody>\n        {isLoading ? (\n          <Box display=\"flex\" columnGap=\"3\" alignItems=\"center\">\n            <Text>Fetching your balance</Text>\n            <Spinner color=\"red\" />\n          </Box>\n        ) : (\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n              <Text>Your HMTKN balance:</Text>\n              <Heading size=\"sm\">{mainTknBalance} HMTKN</Heading>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\" my=\"3\" columnGap=\"2\">\n              <Text>Allowance amount:</Text>\n              <Heading size=\"sm\">{allowAmt} HMTKN</Heading>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n              <Text>Approved sender:</Text>\n              <Heading size=\"sm\">{gameAddr}</Heading>\n            </Box>\n            {allowAmt > mainTknBalance && (\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                my=\"2\"\n                border=\"1px solid red\"\n                borderRadius=\"15px\"\n                textAlign=\"center\"\n                px=\"6\"\n                py=\"2.5\"\n              >\n                <FontAwesomeIcon\n                  icon={faX}\n                  color=\"red\"\n                  style={{ marginRight: \"16px\" }}\n                />\n                <Text>\n                  You cannot allow more than you own. Get more HMTKN and try\n                  again.\n                </Text>\n              </Box>\n            )}\n            <Box my=\"5\">\n              <Heading size=\"md\" my=\"2\">\n                FAQ 🙋\n              </Heading>\n              <Accordion maxW=\"550px\" allowToggle>\n                <AccordionItem>\n                  <Heading>\n                    <AccordionButton>\n                      <Box flex=\"1\" textAlign=\"left\">\n                        What does it mean to approve?\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                  </Heading>\n                  <AccordionPanel pb={4}>\n                    Our tokens (\n                    <span style={{ fontWeight: \"bold\" }}>\n                      HMTKN and other game tokens\n                    </span>\n                    ) all conform to the{\" \"}\n                    <Link\n                      isExternal\n                      href={\n                        \"https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20\"\n                      }\n                      color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                    >\n                      IERC20 token standard\n                    </Link>\n                    . This means that for all transactions involving a third\n                    party contract to safely execute a transfer on behalf of\n                    you, you would have to explicitly give it permission to do\n                    so. In this case, you are allowing this specific game\n                    contract to transfer your{\" \"}\n                    <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens out\n                    of your balance in exchange for the game token.\n                  </AccordionPanel>\n                </AccordionItem>\n\n                <AccordionItem>\n                  <Heading>\n                    <AccordionButton>\n                      <Box flex=\"1\" textAlign=\"left\">\n                        How do I know I can trust you?\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                  </Heading>\n                  <AccordionPanel pb={4}>\n                    Fantastic question! Here at HwangMarket<span>&copy;</span>,\n                    we pride ourselves on transparency and urge you to in fact\n                    not trust us, or anyone on the internet for that matter! Our\n                    contracts are available to be reviewed in full{\" \"}\n                    <Link\n                      isExternal\n                      color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                      href={`https://goerli.etherscan.io/address/${hwangMarketAddr}`}\n                    >\n                      here\n                    </Link>\n                    .\n                  </AccordionPanel>\n                </AccordionItem>\n\n                <AccordionItem>\n                  <Heading>\n                    <AccordionButton>\n                      <Box flex=\"1\" textAlign=\"left\">\n                        Does this mean I get my game tokens after approving?\n                      </Box>\n                      <AccordionIcon />\n                    </AccordionButton>\n                  </Heading>\n                  <AccordionPanel pb={4}>\n                    No, approving does not actually transfer any tokens. Your{\" \"}\n                    <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens are\n                    still all intact with you until you actually complete the\n                    transaction by pressing the Mint Game Tokens button later.\n                    In which case, the actual exchange of your{\" \"}\n                    <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens for\n                    the requested game tokens are executed.\n                  </AccordionPanel>\n                </AccordionItem>\n              </Accordion>\n            </Box>\n          </Box>\n        )}\n      </AlertDialogBody>\n\n      <AlertDialogFooter>\n        {allowAmt > mainTknBalance ? (\n          <Button colorScheme=\"telegram\" variant=\"outline\" onClick={onClose}>\n            Acknowledge\n          </Button>\n        ) : (\n          <Button colorScheme=\"green\" variant=\"outline\" onClick={doApprove}>\n            Approve\n          </Button>\n        )}\n      </AlertDialogFooter>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  Link,\n  Select,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  FormControl,\n  Button,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerContent,\n  DrawerCloseButton,\n  Input,\n  Code,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { listTokensUp } from \"../../util/interact\";\nimport { Link as routerLink } from \"react-router-dom\";\n\nexport default function CreateListingDrawer({\n  wallet,\n  gytAddr,\n  gytBalance,\n  gntAddr,\n  gntBalance,\n  hmtknAddr,\n  toast,\n  onClose,\n}) {\n  /*\n    create listing states\n  */\n  const [offeredTokenAddr, setOfferedTokenAddr] = useState(\"\");\n  const [offeredTokenAmt, setOfferedTokenAmt] = useState(\"\");\n\n  const [expectedTokenAddr, setExpectedTokenAddr] = useState(\"\");\n  const [customExpectedTokenAddr, setCustomExpectedTokenAddr] = useState(\"\");\n  const [expectedTokenAmt, setExpectedTokenAmt] = useState(\"\");\n\n  const { colorMode } = useColorMode();\n\n  const pressCreateListing = async () => {\n    const { trxHash, err } = await listTokensUp(\n      wallet,\n      offeredTokenAddr,\n      offeredTokenAmt,\n      customExpectedTokenAddr ? customExpectedTokenAddr : expectedTokenAddr,\n      expectedTokenAmt\n    );\n    if (err) {\n      toast({\n        title: \"Transaction failed!\",\n        description: err,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } else {\n      toast({\n        title: \"Creating listing...\",\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\n        status: \"info\",\n        duration: 20000,\n        isClosable: true,\n      });\n    }\n    setOfferedTokenAddr(\"\");\n    setOfferedTokenAmt(\"\");\n    setExpectedTokenAddr(\"\");\n    setCustomExpectedTokenAddr(\"\");\n    setExpectedTokenAmt(\"\");\n    onClose();\n  };\n\n  return (\n    <DrawerContent>\n      <DrawerCloseButton />\n      <DrawerHeader mt=\"2\" fontSize=\"2xl\" mb=\"4\">\n        Create a new listing 🚀\n      </DrawerHeader>\n\n      <DrawerBody display=\"flex\" flexDir=\"column\" rowGap=\"8\">\n        <FormControl isRequired>\n          <FormLabel>Bid Token</FormLabel>\n          <Select\n            placeholder=\"Select bid token\"\n            onChange={(e) => {\n              setOfferedTokenAddr(e.target.value);\n              setOfferedTokenAmt(\"\");\n            }}\n          >\n            <option value={gytAddr}>GYT ({gytAddr})</option>\n            <option value={gntAddr}>GNT ({gntAddr})</option>\n          </Select>\n        </FormControl>\n        <FormControl isRequired>\n          <FormLabel>Bid Token Amount</FormLabel>\n          {offeredTokenAddr && (\n            <Text fontWeight=\"bold\" mb=\"3\">\n              Available balance:\n              <span style={{ marginLeft: \"5px\" }}>\n                {offeredTokenAddr === gytAddr ? gytBalance : gntBalance}\n              </span>\n            </Text>\n          )}\n\n          <NumberInput\n            value={offeredTokenAmt}\n            min={1}\n            max={offeredTokenAddr === gytAddr ? gytBalance : gntBalance}\n            onChange={(v) => setOfferedTokenAmt(v)}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </FormControl>\n\n        <FormControl isRequired>\n          <FormLabel>Ask Token</FormLabel>\n          <Select\n            placeholder=\"Select ask token\"\n            onChange={(e) => {\n              if (e.target.value !== \"custom\") {\n                setCustomExpectedTokenAddr(\"\");\n              }\n              setExpectedTokenAddr(e.target.value);\n              setExpectedTokenAmt(\"\");\n            }}\n          >\n            <option value={gytAddr}>GYT ({gytAddr})</option>\n            <option value={gntAddr}>GNT ({gntAddr})</option>\n            <option value={hmtknAddr}>HMTKN ({hmtknAddr})</option>\n            <option value=\"custom\">Custom Token</option>\n          </Select>\n        </FormControl>\n        {expectedTokenAddr === \"custom\" && (\n          <>\n            <FormControl isRequired>\n              <FormLabel>Custom token address</FormLabel>\n              <Input\n                onChange={(e) => {\n                  setCustomExpectedTokenAddr(e.target.value);\n                }}\n                value={customExpectedTokenAddr}\n              />\n              <Text fontSize=\"sm\" mt=\"3\">\n                We allow any token that implements the{\" \"}\n                <Code\n                  fontSize=\"sm\"\n                  children=\"IListableToken\"\n                  colorScheme=\"teal\"\n                />{\" \"}\n                interface to be listed on our frontend. If you are looking to\n                trade HwangMarket games' tokens across different games, this is\n                fully supported, just enter the token's address. However, if you\n                are looking to trade a different{\" \"}\n                <Code fontSize=\"sm\" children=\"ERC20\" colorScheme=\"yellow\" />{\" \"}\n                compliant token minted outside of HwangMarket, unless the other\n                token is compliant with{\" \"}\n                <Code\n                  fontSize=\"sm\"\n                  children=\"IListableToken\"\n                  colorScheme=\"teal\"\n                />\n                , our frontend does not support that, although it is entirely\n                possible to still perform the swap so long as it is{\" \"}\n                <Code fontSize=\"sm\" children=\"ERC20\" colorScheme=\"yellow\" />{\" \"}\n                compliant, just not via the UI we have built out. We answer this\n                in more detail under our{\" \"}\n                <Link\n                  color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                  as={routerLink}\n                  to=\"/faq\"\n                >\n                  FAQ\n                </Link>\n                .\n              </Text>\n            </FormControl>\n          </>\n        )}\n\n        <FormControl isRequired>\n          <FormLabel>Ask Token Amount</FormLabel>\n          <NumberInput\n            value={expectedTokenAmt}\n            min={1}\n            onChange={(v) => setExpectedTokenAmt(v)}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </FormControl>\n\n        <Box ml=\"auto\" my=\"6\" mx=\"auto\">\n          <Button\n            variant=\"outline\"\n            mr=\"16\"\n            onClick={onClose}\n            colorScheme=\"telegram\"\n          >\n            Cancel\n          </Button>\n          <Button\n            colorScheme=\"whatsapp\"\n            variant=\"outline\"\n            onClick={pressCreateListing}\n          >\n            Create\n          </Button>\n        </Box>\n      </DrawerBody>\n      <DrawerFooter>\n        <Heading as=\"cite\" fontSize=\"md\" fontWeight=\"bold\" mx=\"auto\" my=\"15\">\n          <span style={{ marginRight: \"15px\" }}>⭐</span> \"Fortune Favours The\n          Brave\" - Virgil <span style={{ marginLeft: \"15px\" }}>⭐</span>\n        </Heading>\n      </DrawerFooter>\n    </DrawerContent>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  FormControl,\n  Button,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerContent,\n  DrawerCloseButton,\n  Text,\n  useColorMode,\n  Link,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  StatGroup,\n  Divider,\n  Badge,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLink } from \"@fortawesome/free-solid-svg-icons\";\nimport { acceptTokenExchange, getERC20Tokenbalance } from \"../../util/interact\";\n\nexport default function ListingDetailDrawer({\n  wallet,\n  onClose,\n  listingSelected,\n  toast,\n}) {\n  /*\n    fulfilled: false\n    listingAddr: \"0xD2be281e9379F56fDB84C61973a6b341f495106F\"\n    listingId: \"0\"\n    player1: \"0xc55De8931433adB28eE7767782E716dD00F7DEd9\"\n    player2: \"0x0000000000000000000000000000000000000000\"\n    token1: \"0x2063eE55A823B9F80DB2Ee5Ef503abbC44347eeD\"\n    token1Amt: \"100\"\n    token2: \"0x1AB8b37A77DC9563190f1058AD72f00aa2698d96\"\n    token2Amt: \"150\"\n  */\n\n  const { colorMode } = useColorMode();\n  const [token2Balance, setToken2Balance] = useState(-1);\n\n  useEffect(() => {\n    const updateTokenBalance = async () => {\n      setToken2Balance(\n        await getERC20Tokenbalance(wallet, listingSelected.token2)\n      );\n    };\n\n    updateTokenBalance();\n  }, []);\n\n  const triggerAcceptListing = async () => {\n    const { trxHash, err } = await acceptTokenExchange(wallet, listingSelected);\n    if (err) {\n      toast({\n        title: \"Transaction failed!\",\n        description: err,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    } else {\n      toast({\n        title: \"Accepting listing...\",\n        description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\n        status: \"info\",\n        duration: 20000,\n        isClosable: true,\n      });\n    }\n\n    onClose();\n  };\n\n  return (\n    <>\n      {listingSelected ? (\n        <DrawerContent>\n          <DrawerCloseButton />\n          {token2Balance === -1 ? (\n            <Box textAlign=\"center\" my=\"auto\">\n              <Spinner size=\"xl\" color=\"red.500\" mx=\"auto\" />\n              <Text my=\"4\" fontSize=\"sm\">\n                Hang on, we are fetching some stuff...\n              </Text>\n            </Box>\n          ) : (\n            <>\n              <DrawerHeader mt=\"2\" fontSize=\"2xl\" mb=\"4\">\n                Listing Information ✨\n              </DrawerHeader>\n\n              <DrawerBody display=\"flex\" flexDir=\"column\" rowGap=\"3.5\">\n                <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n                  <Heading size=\"sm\">Listing contract address: </Heading>\n                  <Link\n                    isExternal\n                    href={`https://goerli.etherscan.io/address/${listingSelected.listingAddr}`}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                  >\n                    {listingSelected.listingAddr}\n\n                    <FontAwesomeIcon\n                      style={{ marginLeft: \"6px\" }}\n                      icon={faExternalLink}\n                    />\n                  </Link>\n                </Box>\n                <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n                  <Heading size=\"sm\">Creator address: </Heading>\n                  <Link\n                    isExternal\n                    href={`https://goerli.etherscan.io/address/${listingSelected.player1}`}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                  >\n                    {listingSelected.player1}\n\n                    <FontAwesomeIcon\n                      style={{ marginLeft: \"6px\" }}\n                      icon={faExternalLink}\n                    />\n                  </Link>\n                </Box>\n\n                <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n                  <Heading size=\"sm\">Listing status: </Heading>\n                  <Badge\n                    colorScheme={listingSelected.fulfilled ? \"red\" : \"whatsapp\"}\n                    variant=\"outline\"\n                  >\n                    {listingSelected.fulfilled ? \"Closed\" : \"Open\"}\n                  </Badge>\n                </Box>\n                <Divider my=\"4\" />\n                <Heading size=\"md\">Listing Summary for you</Heading>\n                <Box>\n                  <StatGroup mt=\"3\" mb=\"4\">\n                    <Stat>\n                      <StatLabel>Offering</StatLabel>\n                      <StatNumber>{listingSelected.token1Amt}</StatNumber>\n                      <StatHelpText\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        columnGap=\"1\"\n                      >\n                        <StatArrow type=\"increase\" />\n                        Offered token:\n                        <Link\n                          isExternal\n                          href={`https://goerli.etherscan.io/address/${listingSelected.token1}`}\n                          display=\"flex\"\n                          alignItems=\"center\"\n                          color={\n                            colorMode === \"light\" ? \"teal.700\" : \"teal.300\"\n                          }\n                          fontSize=\"sm\"\n                        >\n                          {listingSelected.token1}\n\n                          <FontAwesomeIcon\n                            style={{ marginLeft: \"6px\" }}\n                            icon={faExternalLink}\n                          />\n                        </Link>\n                      </StatHelpText>\n                    </Stat>\n                  </StatGroup>\n\n                  <StatGroup>\n                    <Stat>\n                      <StatLabel>In exchange for</StatLabel>\n                      <StatNumber>{listingSelected.token2Amt}</StatNumber>\n                      <StatHelpText\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        columnGap=\"1\"\n                      >\n                        <StatArrow type=\"decrease\" />\n                        Asked token:\n                        <Link\n                          isExternal\n                          href={`https://goerli.etherscan.io/address/${listingSelected.token2}`}\n                          display=\"flex\"\n                          alignItems=\"center\"\n                          color={\n                            colorMode === \"light\" ? \"teal.700\" : \"teal.300\"\n                          }\n                          fontSize=\"sm\"\n                        >\n                          {listingSelected.token2}\n\n                          <FontAwesomeIcon\n                            style={{ marginLeft: \"6px\" }}\n                            icon={faExternalLink}\n                          />\n                        </Link>\n                      </StatHelpText>\n                    </Stat>\n                  </StatGroup>\n\n                  <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n                    <Heading size=\"xs\">Your available balance: </Heading>\n                    <Text fontWeight=\"bold\">{token2Balance}</Text>\n                  </Box>\n\n                  {token2Balance < parseInt(listingSelected.token2Amt) ? (\n                    <Box\n                      p=\"3\"\n                      border=\"1px solid red\"\n                      borderRadius=\"17px\"\n                      w=\"fit-content\"\n                      mx=\"auto\"\n                      mt=\"7\"\n                    >\n                      <Text>\n                        ❌ You have insufficient balance to partake in this\n                        listing.{\" \"}\n                      </Text>\n                    </Box>\n                  ) : (\n                    <Box\n                      p=\"3\"\n                      border=\"1px solid green\"\n                      borderRadius=\"17px\"\n                      w=\"fit-content\"\n                      mx=\"auto\"\n                      my=\"4\"\n                    >\n                      <Text>\n                        ✅ You have sufficient balance to partake in this\n                        listing.{\" \"}\n                      </Text>\n                    </Box>\n                  )}\n                </Box>\n\n                <Box ml=\"auto\" my=\"6\" mx=\"auto\">\n                  <Button\n                    variant=\"outline\"\n                    mr=\"16\"\n                    onClick={onClose}\n                    colorScheme=\"telegram\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    colorScheme=\"whatsapp\"\n                    variant=\"outline\"\n                    disabled={\n                      token2Balance < parseInt(listingSelected.token2Amt)\n                    }\n                    onClick={triggerAcceptListing}\n                  >\n                    Accept\n                  </Button>\n                </Box>\n              </DrawerBody>\n            </>\n          )}\n\n          <DrawerFooter>\n            <Heading\n              as=\"cite\"\n              fontSize=\"md\"\n              fontWeight=\"bold\"\n              mx=\"auto\"\n              my=\"15\"\n            >\n              <span style={{ marginRight: \"15px\" }}>♦️</span>\n              <Link\n                textDecor=\"underline\"\n                href=\"https://youtu.be/yE4fYr47iRI\"\n                isExternal\n              >\n                You are something special\n              </Link>\n              <span style={{ marginLeft: \"15px\" }}>♦️</span>\n            </Heading>\n          </DrawerFooter>\n        </DrawerContent>\n      ) : (\n        <Text>Invalid listing</Text>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  Button,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n  Spinner,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  Link,\n  useColorMode,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  approveMainTokenSender,\n  approveTokenSender,\n  getMainToken2SenderApprovalAmt,\n  getMainTokenBalance,\n  getTokenAllowance,\n  hwangMarketAddr,\n} from \"../../util/interact\";\n\nexport default function ClaimWinningIncAllowanceDialog({\n  wallet,\n  gameAddr,\n  outcome,\n  onClose,\n  approvalAmt,\n  winningTokenAddr,\n}) {\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n\n  const doApprove = async () => {\n    const trxHash = await approveTokenSender(\n      winningTokenAddr,\n      wallet,\n      gameAddr,\n      approvalAmt\n    );\n    if (!trxHash) {\n      toast({\n        title: \"Transaction failed!\",\n        description: \"The approval failed!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n\n      return;\n    }\n    toast({\n      title: \"Approval processing!\",\n      description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\n      status: \"info\",\n      duration: 20000,\n      isClosable: true,\n    });\n    onClose();\n  };\n\n  return (\n    <>\n      <AlertDialogHeader>Approve Winning Token Transfer 🚀</AlertDialogHeader>\n      <AlertDialogCloseButton />\n\n      <AlertDialogBody>\n        <Box>\n          <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n            <Text>Your winning token balance:</Text>\n            <Heading size=\"sm\">\n              {approvalAmt} {outcome === \"1\" ? \"GYT\" : \"GNT\"}\n            </Heading>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\" my=\"3\" columnGap=\"2\">\n            <Text>Allowance amount to approve:</Text>\n            <Heading size=\"sm\">\n              {approvalAmt} {outcome === \"1\" ? \"GYT\" : \"GNT\"}\n            </Heading>\n          </Box>\n          <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n            <Text>Approved sender:</Text>\n            <Heading size=\"sm\">{gameAddr}</Heading>\n          </Box>\n          <Box my=\"5\">\n            <Heading size=\"md\" my=\"2\">\n              FAQ 🙋\n            </Heading>\n            <Accordion maxW=\"540px\" allowToggle>\n              <AccordionItem>\n                <Heading>\n                  <AccordionButton>\n                    <Box flex=\"1\" textAlign=\"left\">\n                      What does it mean to approve?\n                    </Box>\n                    <AccordionIcon />\n                  </AccordionButton>\n                </Heading>\n                <AccordionPanel pb={4}>\n                  Our tokens (\n                  <span style={{ fontWeight: \"bold\" }}>\n                    HMTKN and other game tokens\n                  </span>\n                  ) all conform to the{\" \"}\n                  <Link\n                    isExternal\n                    href={\n                      \"https://docs.openzeppelin.com/contracts/2.x/api/token/erc20#IERC20\"\n                    }\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                  >\n                    IERC20 token standard\n                  </Link>\n                  . This means that for all transactions involving a third party\n                  contract to safely execute a transfer on behalf of you, you\n                  would have to explicitly give it permission to do so. In this\n                  case, you are allowing this specific game contract to transfer\n                  your <span style={{ fontWeight: \"bold\" }}>HMTKN</span> tokens\n                  out of your balance in exchange for the game token.\n                </AccordionPanel>\n              </AccordionItem>\n\n              <AccordionItem>\n                <Heading>\n                  <AccordionButton>\n                    <Box flex=\"1\" textAlign=\"left\">\n                      How do I know I can trust you?\n                    </Box>\n                    <AccordionIcon />\n                  </AccordionButton>\n                </Heading>\n                <AccordionPanel pb={4}>\n                  Fantastic question! Here at HwangMarket<span>&copy;</span>, we\n                  pride ourselves on transparency and urge you to in fact not\n                  trust us, or anyone on the internet for that matter! Our\n                  contracts are available to be reviewed in full{\" \"}\n                  <Link\n                    isExternal\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                    href={`https://goerli.etherscan.io/address/${hwangMarketAddr}`}\n                  >\n                    here\n                  </Link>\n                  .\n                </AccordionPanel>\n              </AccordionItem>\n\n              <AccordionItem>\n                <Heading>\n                  <AccordionButton>\n                    <Box flex=\"1\" textAlign=\"left\">\n                      Does this mean I get my HMTKN winnings after approving?\n                    </Box>\n                    <AccordionIcon />\n                  </AccordionButton>\n                </Heading>\n                <AccordionPanel pb={4}>\n                  No, approving does not actually transfer any tokens. Your{\" \"}\n                  <span style={{ fontWeight: \"bold\" }}>\n                    {outcome === \"1\" ? \"GYT\" : \"GNT\"}\n                  </span>{\" \"}\n                  tokens are still all intact with you until you actually\n                  complete the transaction by pressing the Mint Game Tokens\n                  button later. In which case, the actual exchange of your{\" \"}\n                  <span style={{ fontWeight: \"bold\" }}>\n                    {outcome === \"1\" ? \"GYT\" : \"GNT\"}\n                  </span>{\" \"}\n                  tokens for the requested HMTKN are executed.\n                </AccordionPanel>\n              </AccordionItem>\n              <AccordionItem>\n                <Heading>\n                  <AccordionButton>\n                    <Box flex=\"1\" textAlign=\"left\">\n                      How do I claim my winning in terms of ETH?\n                    </Box>\n                    <AccordionIcon />\n                  </AccordionButton>\n                </Heading>\n                <AccordionPanel pb={4}>\n                  We currently only support exchanging winning tokens for HMTKN,\n                  which you can than cash out for ETH, or the network's main\n                  token, using the Cash out button on the top menu.\n                </AccordionPanel>\n              </AccordionItem>\n            </Accordion>\n          </Box>\n        </Box>\n      </AlertDialogBody>\n\n      <AlertDialogFooter>\n        <Button colorScheme=\"green\" variant=\"outline\" onClick={doApprove}>\n          Approve\n        </Button>\n      </AlertDialogFooter>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Heading,\n  Text,\n  Button,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogCloseButton,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  useToast,\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n} from \"@chakra-ui/react\";\nimport { withdrawWinnings } from \"../../util/interact\";\nimport { shortenAddr } from \"../../util/helper\";\nimport { BigNumber } from \"ethers\";\n\nexport default function ClaimWinningDialog({\n  wallet,\n  gameAddr,\n  outcome,\n  onClose,\n  withdrawAmt,\n  hmtknAddr,\n  winningTokenAddr,\n  totalLoseAmt,\n  totalWinAmt,\n}) {\n  const toast = useToast();\n\n  const doClaimWinning = async () => {\n    const { trxHash, err } = await withdrawWinnings(\n      wallet,\n      gameAddr,\n      withdrawAmt\n    );\n    if (err) {\n      toast({\n        title: \"Transaction failed!\",\n        description: `The transfer failed! Error: ${err}`,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n\n      return;\n    }\n    toast({\n      title: \"Transfer processing!\",\n      description: `Your transaction hash is: ${trxHash}. This message will be removed in 20 seconds and lost permanently, save the transaction hash if you wish.`,\n      status: \"info\",\n      duration: 20000,\n      isClosable: true,\n    });\n    onClose();\n  };\n\n  console.log(withdrawAmt);\n  const winningAmt = BigNumber.from(withdrawAmt).add(\n    BigNumber.from(withdrawAmt)\n      .div(totalWinAmt)\n      .mul(BigNumber.from(totalLoseAmt))\n  );\n\n  return (\n    <>\n      <AlertDialogHeader>Claim Winning 🚀</AlertDialogHeader>\n      <AlertDialogCloseButton />\n\n      <AlertDialogBody>\n        <Box>\n          <Box display=\"flex\" alignItems=\"center\" columnGap=\"2\">\n            <Text>Approved sender:</Text>\n            <Heading size=\"sm\">{gameAddr}</Heading>\n          </Box>\n          <Box>\n            <Heading mt=\"8\" mb=\"4\" size=\"sm\">\n              Transaction Summary\n            </Heading>\n            <StatGroup w=\"100%\">\n              <Stat>\n                <StatLabel>HMTKN</StatLabel>\n                <StatNumber>{winningAmt.toString()}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  Gain {winningAmt.toString()} HMTKN\n                </StatHelpText>\n                <StatHelpText>\n                  <Text fontSize=\"xs\">{shortenAddr(hmtknAddr)}</Text>\n                </StatHelpText>\n              </Stat>\n\n              <Stat>\n                <StatLabel>{outcome === \"1\" ? \"GYT\" : \"GNT\"}</StatLabel>\n                <StatNumber>{withdrawAmt}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"decrease\" />\n                  Lose {withdrawAmt} {outcome === \"1\" ? \"GYT\" : \"GNT\"}\n                </StatHelpText>\n                <StatHelpText>\n                  <Text fontSize=\"xs\">{shortenAddr(winningTokenAddr)}</Text>\n                </StatHelpText>\n              </Stat>\n            </StatGroup>\n          </Box>\n          <Box my=\"5\">\n            <Heading size=\"md\" my=\"2\">\n              FAQ 🙋\n            </Heading>\n            <Accordion maxW=\"550px\" allowToggle>\n              <AccordionItem>\n                <Heading>\n                  <AccordionButton>\n                    <Box flex=\"1\" textAlign=\"left\">\n                      How do I claim my winning in terms of ETH?\n                    </Box>\n                    <AccordionIcon />\n                  </AccordionButton>\n                </Heading>\n                <AccordionPanel pb={4}>\n                  We currently only support exchanging winning tokens for HMTKN,\n                  which you can than cash out for ETH, or the network's main\n                  token, using the Cash out button on the top menu.\n                </AccordionPanel>\n              </AccordionItem>\n            </Accordion>\n          </Box>\n        </Box>\n      </AlertDialogBody>\n\n      <AlertDialogFooter>\n        <Button colorScheme=\"green\" variant=\"outline\" onClick={doClaimWinning}>\n          Collect Winnings\n        </Button>\n      </AlertDialogFooter>\n    </>\n  );\n}\n","import {\n  Box,\n  Heading,\n  Text,\n  useColorMode,\n  Link,\n  Tooltip,\n  Badge,\n  Divider,\n  StatGroup,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Select,\n  FormLabel,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  FormControl,\n  Button,\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  useDisclosure,\n  StatArrow,\n  Spinner,\n  Drawer,\n  DrawerOverlay,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getGameById,\n  hwangMarket,\n  mintGameTokenFromMainToken,\n  getMainToken2SenderApprovalAmt,\n  getBalance,\n  getGameTokenAddrByGameAddr,\n  getGameTrxsByAddr,\n  getMainTokenAddr,\n  getMainTokenBalance,\n  listTokensUp,\n  gameContractABI,\n  web3,\n  getTokenAllowance,\n  hwangMarketAddr,\n  erc20TokenABI,\n  triggerResolve,\n} from \"../util/interact\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCircleQuestion,\n  faExternalLink,\n  faQuestion,\n  faQuestionCircle,\n  faX,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport GameTransactionsHistory from \"./GameTransactionsHistory\";\nimport GameActiveListings from \"./GameActiveListings\";\nimport GameErrorDialog from \"./GameDialogs/GameErrorDialog\";\nimport PurchaseConfirmationDialog from \"./GameDialogs/PurchaseConfirmationDialog\";\nimport IncreaseAllowanceDialog from \"./GameDialogs/IncreaseAllowanceDialog\";\nimport { game2MainConversionRate, shortenAddr, sleep } from \"../util/helper\";\nimport CreateListingDrawer from \"./GameDrawers/CreateListingDrawer\";\nimport ListingDetailDrawer from \"./GameDrawers/ListingDetailDrawer\";\nimport ClaimWinningIncAllowanceDialog from \"./GameDialogs/ClaimWinningIncAllowanceDialog\";\nimport ClaimWinningDialog from \"./GameDialogs/ClaimWinningDialog\";\nimport { BigNumber } from \"ethers\";\n\nexport default function Game({ wallet }) {\n  const { id } = useParams();\n  const [game, setGame] = useState(null);\n  const { colorMode } = useColorMode();\n\n  const [percentage, setPercentage] = useState(0);\n  const [diffText, setDiffText] = useState(\"\");\n  const [buyTokenSide, setBuyTokenSide] = useState(\"0\");\n  const [buyTokenAmt, setBuyTokenAmt] = useState(\"\");\n  const [maxLimit, setMaxLimit] = useState(1000);\n  const [purchaseTrxHash, setPurchaseTrxHash] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [main2TknAllowance, setMain2TknAllowance] = useState(0);\n  const [hmtknBalance, setHmtknBalance] = useState(0);\n  const [gytBalance, setGytBalance] = useState(0);\n  const [gntBalance, setGntBalance] = useState(0);\n\n  const [hmtknAddr, setHmtknAddr] = useState(\"\");\n  const [gytAddr, setGytAddr] = useState(\"\");\n  const [gntAddr, setGntAddr] = useState(\"\");\n\n  const [isDialog, setIsDialog] = useState(true);\n  const [isCreate, setIsCreate] = useState(true);\n  const [winningTokenAllowance, setWinningTokenAllowance] = useState(0);\n  const [winningTokenBalance, setWinningTokenBalance] = useState(0);\n\n  const [listingSelected, setListingSelected] = useState(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cancelRef = React.useRef();\n\n  const toast = useToast();\n\n  useEffect(() => {\n    const getGame = async () => {\n      const game = await getGameById(id);\n      setGame(game);\n      const outcome = game.gameOutcome;\n      setGameOutcome(outcome);\n\n      if (outcome !== \"0\") {\n        setWinningTokenBalance(\n          await getBalance(wallet, game.addr, parseInt(outcome))\n        );\n        setWinningTokenAllowance(\n          await getTokenAllowance(\n            wallet,\n            game.addr,\n            outcome === \"1\" ? gytAddr : gntAddr\n          )\n        );\n      }\n    };\n    getGame();\n  }, [gntAddr, gytAddr, id, wallet]);\n\n  const triggerPurchase = async () => {\n    const { trxHash, err } = await mintGameTokenFromMainToken(\n      wallet,\n      game ? game.addr : \"\",\n      buyTokenSide,\n      buyTokenAmt,\n      maxLimit\n    );\n    if (trxHash) {\n      setErrorMsg(\"\");\n      setPurchaseTrxHash(trxHash);\n    } else {\n      setErrorMsg(err);\n    }\n    setBuyTokenSide(\"0\");\n    setBuyTokenAmt(0);\n    setIsDialog(true);\n    onOpen();\n  };\n\n  const addPlayerJoinedGameListener = () => {\n    if (!game) {\n      return;\n    }\n    console.log(\"hwang market player joined game listener added\");\n    hwangMarket.events.PlayerJoinedGameEvent({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        if (details.betSide === \"1\") {\n          setGame((prev) => {\n            if (!prev) {\n              return;\n            }\n            const copy = JSON.parse(JSON.stringify(prev));\n            copy.betYesAmount =\n              parseInt(copy.betYesAmount) + parseInt(details.amount);\n            return copy;\n          });\n        } else {\n          setGame((prev) => {\n            if (!prev) {\n              return;\n            }\n            const copy = JSON.parse(JSON.stringify(prev));\n            copy.betNoAmount =\n              parseInt(copy.betNoAmount) + parseInt(details.amount);\n            return copy;\n          });\n        }\n      }\n    });\n  };\n\n  const addNewListingListener = async () => {\n    if (!game || !game.addr) {\n      return;\n    }\n    console.log(\"new listing listener added\");\n    const gameContract = await new web3.eth.Contract(\n      gameContractABI,\n      game.addr\n    );\n    gameContract.events.NewListing({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        // const details = data.returnValues;\n        toast({\n          title: \"Listing created!\",\n          description: \"A new listing has been created!\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n    });\n  };\n\n  const addListingFulfilledListener = async () => {\n    if (!game || !game.addr) {\n      return;\n    }\n    console.log(\"listing fulfilled listener added\");\n    const gameContract = await new web3.eth.Contract(\n      gameContractABI,\n      game.addr\n    );\n    gameContract.events.ListingFulfilled({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        // const details = data.returnValues;\n        toast({\n          title: \"Listing Fulfilled!\",\n          description: \"A listing has been fulfilled!\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n    });\n  };\n\n  const addHMTKNApprovalListener = async () => {\n    if (!game || !game.addr || !hmtknAddr) {\n      return;\n    }\n    console.log(\"HMTKN approval listener added\");\n    const tokenContract = await new web3.eth.Contract(erc20TokenABI, hmtknAddr);\n    tokenContract.events.Approval({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        if (\n          details &&\n          details.owner &&\n          wallet &&\n          details.owner.toLowerCase() === wallet.toLowerCase()\n        ) {\n          toast({\n            title: \"Approval success!\",\n            description: `You have approved ${shortenAddr(\n              details.spender\n            )} as a spender for ${details.value} HMTKN!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n\n          if (\n            game &&\n            game.addr &&\n            details &&\n            details.spender &&\n            details.spender.toLowerCase() === game.addr.toLowerCase()\n          ) {\n            setMain2TknAllowance(parseInt(details.value));\n          }\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    addHMTKNApprovalListener();\n  }, [game && game.addr, hmtknAddr]);\n\n  const addGYTListener = async () => {\n    if (!gytAddr) {\n      return;\n    }\n    console.log(\"gyt listener added\");\n    const tokenContract = await new web3.eth.Contract(erc20TokenABI, gytAddr);\n    tokenContract.events.Approval({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        if (details.owner.toLowerCase() === wallet.toLowerCase()) {\n          toast({\n            title: \"Approval success!\",\n            description: `You have approved ${shortenAddr(\n              details.spender\n            )} as a spender for ${details.value} GYT!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n\n          if (game.gameOutcome === \"1\") {\n            setWinningTokenAllowance(details.value);\n          }\n        }\n      }\n    });\n    tokenContract.events.Transfer({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        if (details.from.toLowerCase() === wallet.toLowerCase()) {\n          toast({\n            title: \"GYT Transfer success!\",\n            description: `You have transferred ${\n              details.value\n            } GYT to ${shortenAddr(details.to)}!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          setGytBalance((prev) =>\n            BigNumber.from(prev).sub(BigNumber.from(details.value)).toString()\n          );\n        } else if (details.to.toLowerCase() === wallet.toLowerCase()) {\n          toast({\n            title: \"GYT Transfer success!\",\n            description: `You have received ${\n              details.value\n            } GYT from ${shortenAddr(details.to)}!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          setGytBalance((prev) =>\n            BigNumber.from(prev).add(BigNumber.from(details.value)).toString()\n          );\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    addGYTListener();\n  }, [gytAddr]);\n\n  const addGNTApprovalListener = async () => {\n    if (!gntAddr) {\n      return;\n    }\n    console.log(\"gnt approval listener added\");\n    const tokenContract = await new web3.eth.Contract(erc20TokenABI, gntAddr);\n    tokenContract.events.Approval({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        if (details.owner.toLowerCase() === wallet.toLowerCase()) {\n          toast({\n            title: \"Approval success!\",\n            description: `You have approved ${shortenAddr(\n              details.spender\n            )} as a spender for ${details.value} GNT!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n\n          if (game.gameOutcome === \"2\") {\n            setWinningTokenAllowance(details.value);\n          }\n        }\n      }\n    });\n\n    tokenContract.events.Transfer({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        const details = data.returnValues;\n        if (details.from.toLowerCase() === wallet.toLowerCase()) {\n          toast({\n            title: \"GNT Transfer success!\",\n            description: `You have transferred ${\n              details.value\n            } GNT to ${shortenAddr(details.to)}!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          setGntBalance((prev) =>\n            BigNumber.from(prev).sub(BigNumber.from(details.value)).toString()\n          );\n        } else if (details.to.toLowerCase() === wallet.toLowerCase()) {\n          toast({\n            title: \"GNT Transfer success!\",\n            description: `You have received ${\n              details.value\n            } GNT from ${shortenAddr(details.to)}!`,\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n          });\n          setGntBalance((prev) =>\n            BigNumber.from(prev).add(BigNumber.from(details.value)).toString()\n          );\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    addGNTApprovalListener();\n  }, [gntAddr]);\n\n  useEffect(() => {\n    const updateAllowance = async () => {\n      setMain2TknAllowance(\n        parseInt(\n          await getMainToken2SenderApprovalAmt(wallet, game && game.addr)\n        )\n      );\n    };\n    const setBalance = async () => {\n      setHmtknBalance(await getMainTokenBalance(wallet));\n      setGytBalance(await getBalance(wallet, game && game.addr, 1));\n      setGntBalance(await getBalance(wallet, game && game.addr, 2));\n    };\n    const setGameTokenAddr = async () => {\n      setGytAddr(await getGameTokenAddrByGameAddr(game && game.addr, 1));\n      setGntAddr(await getGameTokenAddrByGameAddr(game && game.addr, 2));\n    };\n    const setMainTokenAddr = async () => {\n      setHmtknAddr(await getMainTokenAddr());\n    };\n\n    updateAllowance();\n    setBalance();\n    setGameTokenAddr();\n    setMainTokenAddr();\n  }, [wallet, game]);\n\n  useEffect(() => {\n    addNewListingListener();\n    addListingFulfilledListener();\n  }, [game && game.id]);\n\n  const addGameConcludedListener = async () => {\n    if (!game) {\n      return;\n    }\n    console.log(\"game concluded listener added\");\n    hwangMarket.events.GameConcluded({}, async (error, data) => {\n      if (error) {\n        console.log(\"listener error:\", error);\n      } else {\n        if (data.returnValues.gameId !== id) {\n          return;\n        }\n        const outcome = data.returnValues.gameOutcome;\n        toast({\n          title: \"Game concluded!\",\n          description: `The game has concluded with an outcome of \"${\n            outcome === \"1\" ? \"YES\" : \"NO\"\n          }\"!`,\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n\n        setGame((prev) => {\n          const copy = JSON.parse(JSON.stringify(prev));\n          copy.gameOutcome = outcome;\n          return copy;\n        });\n        setGameOutcome(data.returnValues.gameOutcome);\n        setWinningTokenBalance(\n          await getBalance(wallet, game.addr, parseInt(outcome))\n        );\n        setWinningTokenAllowance(\n          await getTokenAllowance(\n            wallet,\n            game.addr,\n            outcome === \"1\" ? gytAddr : gntAddr\n          )\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    addPlayerJoinedGameListener();\n  }, [game && game.id]);\n\n  useEffect(() => {\n    addGameConcludedListener();\n  }, [game && game.id]);\n\n  useEffect(() => {\n    if (!game || !game.createdTime) {\n      return;\n    }\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      let perc = Math.min(\n        Math.floor(\n          ((Date.now() / 1000 - game.createdTime) /\n            (game.resolveTime - game.createdTime)) *\n            100\n        ),\n        100\n      );\n      if (perc < 0) {\n        perc = 100;\n      }\n      setPercentage(perc);\n\n      const timeLeft = Math.max(\n        0,\n        Math.floor(game.resolveTime - Date.now() / 1000)\n      );\n      let s = \"\";\n      if (timeLeft === 0) {\n        setDiffText(\"Closed\");\n      } else if (timeLeft < 60) {\n        if (timeLeft > 1) {\n          s = \"s\";\n        }\n        setDiffText(`${timeLeft} second${s}`);\n      } else if (timeLeft < 60 * 60) {\n        if (Math.max(1, Math.floor(timeLeft / 60)) > 1) {\n          s = \"s\";\n        }\n        setDiffText(`${Math.max(1, Math.floor(timeLeft / 60))} minute${s}`);\n      } else if (timeLeft < 24 * 60 * 60) {\n        if (Math.max(1, Math.floor(timeLeft / (60 * 60))) > 1) {\n          s = \"s\";\n        }\n        setDiffText(\n          `${Math.max(1, Math.floor(timeLeft / (60 * 60)))} hour${s}`\n        );\n      } else {\n        setDiffText(\">24 hours\");\n      }\n    }, 1000);\n\n    return () => clearInterval(intervalId); //This is important\n  }, [game]);\n\n  const [gameOutcome, setGameOutcome] = useState(\"0\");\n\n  useEffect(() => {\n    // fetch game outcome\n    if (percentage !== 100) {\n      return;\n    }\n    const updateGameOutcome = async () => {\n      // update game outcome\n      const game = await getGameById(id);\n      const outcome = game.gameOutcome;\n      setGameOutcome(outcome);\n      setWinningTokenBalance(\n        await getBalance(wallet, game.addr, parseInt(outcome))\n      );\n      setWinningTokenAllowance(\n        await getTokenAllowance(\n          wallet,\n          game.addr,\n          outcome === \"1\" ? gytAddr : gntAddr\n        )\n      );\n    };\n\n    updateGameOutcome();\n  }, [gntAddr, gytAddr, id, percentage, wallet]);\n\n  /*\n    addr: \"0x64C3bb915Dd98231B3b2649A350B28d746a087Af\"\n    betNoAmount: \"0\"\n    betYesAmount: \"0\"\n    createdTime: \"1666719306\"\n    gameOutcome: \"0\"\n    id: \"2\"\n    oracleAddr: \"0x0d79df66BE487753B02D015Fb622DED7f0E9798d\"\n    resolveTime: \"1666722600\"\n    tag: \"Price Feeds\"\n    threshold: \"200000000000\"\n    title: \"Hello world!\"\n    totalAmount: \"0\"\n  */\n\n  const lineWidth = 60;\n\n  return (\n    <Box m=\"8\" mx=\"16\">\n      {game ? (\n        <Box\n          pt=\"8\"\n          pb=\"16\"\n          px=\"5\"\n          border={colorMode === \"light\" ? \"1px solid gray\" : \"1px solid white\"}\n          borderRadius=\"30px\"\n        >\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-evenly\"\n            flexWrap=\"wrap\"\n            rowGap=\"3\"\n          >\n            <Box maxW=\"650px\">\n              <Heading>{game.title}</Heading>\n              <Badge mt=\"2\" colorScheme=\"green\" variant=\"outline\">\n                {game.tag}\n              </Badge>\n              <Box\n                display=\"flex\"\n                justifyContent=\"space-evenly\"\n                alignItems=\"center\"\n                my=\"8\"\n              >\n                <Box>\n                  <Box textAlign=\"center\">\n                    <Stat size=\"sm\">\n                      <StatLabel>Total Amount</StatLabel>\n                      <StatNumber>\n                        {parseInt(game.betNoAmount) +\n                          parseInt(game.betYesAmount)}{\" \"}\n                        HMTKN\n                      </StatNumber>\n                    </Stat>\n                  </Box>\n                  <Box\n                    my=\"5\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    columnGap=\"8\"\n                  >\n                    <Box>\n                      <Stat size=\"sm\">\n                        <StatLabel>Total Yes Amount</StatLabel>\n                        <StatNumber>{game.betYesAmount} HMTKN</StatNumber>\n                      </Stat>\n                    </Box>\n                    <Box>\n                      <Stat size=\"sm\">\n                        <StatLabel>Total No Amount</StatLabel>\n                        <StatNumber>{game.betNoAmount} HMTKN</StatNumber>\n                      </Stat>\n                    </Box>\n                  </Box>\n                </Box>\n                <Box>\n                  <PieChart\n                    style={{\n                      fontFamily:\n                        '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\n                      fontSize: \"8px\",\n                    }}\n                    data={[\n                      {\n                        title: \"No\",\n                        value: Math.max(0.01, parseInt(game.betNoAmount)),\n                        color: \"#FF1E1E\",\n                      },\n                      {\n                        title: \"Yes\",\n                        value: Math.max(0.01, parseInt(game.betYesAmount)),\n                        color: \"#3CCF4E\",\n                      },\n                    ]}\n                    radius={50}\n                    lineWidth={60}\n                    segmentsStyle={{\n                      transition: \"stroke .3s\",\n                      cursor: \"pointer\",\n                    }}\n                    animate\n                    label={({ dataEntry }) => dataEntry.title}\n                    labelPosition={100 - lineWidth / 2}\n                    labelStyle={{\n                      fill: colorMode === \"light\" ? \"#1A202C\" : \"#EDF2F7\",\n                      pointerEvents: \"none\",\n                    }}\n                  />\n                </Box>\n              </Box>\n\n              <Box\n                display=\"flex\"\n                justifyContent=\"flex-start\"\n                alignItems=\"center\"\n                columnGap=\"5\"\n                // bgColor={colorMode === \"light\" ? \"cyan.100\" : \"\"}\n                borderRadius=\"25px\"\n                // p=\"8\"\n                px=\"5\"\n                py=\"7\"\n                border={\n                  colorMode === \"light\" ? \"1px solid gray\" : \"1px solid white\"\n                }\n              >\n                <Box whiteSpace=\"nowrap\">\n                  <Text>Game outcome:</Text>\n                  <Text>Contract creation time:</Text>\n                  <Text>Contract address:</Text>\n                  <Text>Oracle address:</Text>\n                  <Text>Threshold for resolution:</Text>\n                </Box>\n                <Box>\n                  <Badge\n                    fontSize=\"1em\"\n                    variant=\"outline\"\n                    colorScheme={\n                      game.gameOutcome === \"0\"\n                        ? \"purple\"\n                        : game.gameOutcome === \"1\"\n                        ? \"green\"\n                        : \"red\"\n                    }\n                  >\n                    {game.gameOutcome === \"0\"\n                      ? \"TBD\"\n                      : game.gameOutcome === \"1\"\n                      ? \"Yes\"\n                      : \"No\"}\n                  </Badge>\n                  <Text>{game.createdTime}</Text>\n\n                  <Link\n                    isExternal\n                    href={`https://goerli.etherscan.io/address/${game.addr}`}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                  >\n                    {game.addr}\n                    <FontAwesomeIcon\n                      style={{ marginLeft: \"6px\" }}\n                      icon={faExternalLink}\n                    />\n                  </Link>\n\n                  <Link\n                    isExternal\n                    href={`https://goerli.etherscan.io/address/${game.oracleAddr}`}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    color={colorMode === \"light\" ? \"teal.700\" : \"teal.300\"}\n                  >\n                    {game.oracleAddr}\n                    <FontAwesomeIcon\n                      style={{ marginLeft: \"6px\" }}\n                      icon={faExternalLink}\n                    />\n                  </Link>\n\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Text>{game.threshold}</Text>\n                    <Tooltip\n                      label=\"Higher than or equal to threshold results in an outcome of Yes.\"\n                      fontSize=\"md\"\n                    >\n                      <FontAwesomeIcon\n                        style={{ marginLeft: \"6px\" }}\n                        icon={faQuestion}\n                      />\n                    </Tooltip>\n                  </Box>\n                </Box>\n              </Box>\n              <Divider my=\"10\" />\n              <Box>\n                <GameTransactionsHistory gameAddr={game && game.addr} />\n              </Box>\n            </Box>\n            <Box display=\"flex\" flexDir=\"column\">\n              <Box w=\"full\" textAlign=\"center\">\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  columnGap=\"2.5\"\n                  mt=\"3\"\n                  mb=\"7\"\n                  flexWrap=\"wrap\"\n                >\n                  <Text fontSize=\"xl\" whiteSpace=\"nowrap\">\n                    Resolution Time:\n                  </Text>\n                  <Text\n                    fontSize=\"lg\"\n                    fontWeight=\"bold\"\n                    whiteSpace=\"nowrap\"\n                    textDecor=\"underline\"\n                  >\n                    {parseInt(game.resolveTime) &&\n                      new Intl.DateTimeFormat(\"en-US\", {\n                        year: \"numeric\",\n                        month: \"2-digit\",\n                        day: \"2-digit\",\n                        hour: \"2-digit\",\n                        minute: \"2-digit\",\n                        second: \"2-digit\",\n                        timeZoneName: \"short\",\n                      }).format(parseInt(game.resolveTime) * 1000)}\n                  </Text>\n                  {/* <Timestamp date={Date} /> */}\n                </Box>\n                <Box my=\"3\" mx=\"auto\" maxW=\"350px\">\n                  <Box>\n                    <CircularProgressbar\n                      value={percentage}\n                      text={diffText}\n                      strokeWidth={4}\n                      styles={buildStyles({\n                        textSize: \"14px\",\n                        textColor: colorMode === \"light\" ? \"black\" : \"white\",\n                        trailColor:\n                          colorMode === \"light\" ? \"#4A5568\" : \"#718096\",\n                        pathColor:\n                          colorMode === \"light\" ? \"#0BC5EA\" : \"#76E4F7\",\n                      })}\n                    />\n                  </Box>\n                </Box>\n\n                {percentage === 100 && game.gameOutcome === \"0\" && (\n                  <Box textAlign=\"center\">\n                    <Box w=\"500px\" mx=\"auto\" my=\"3\">\n                      <Text fontSize=\"sm\">\n                        Well this is awkward, it seems the game is already over\n                        but our auto trigger is late or not working correctly.\n                        Fret not, you can trigger the game resolution manually\n                        by clicking the button below.\n                      </Text>\n                      <Text fontSize=\"sm\" fontWeight=\"bold\">\n                        Note: You will be paying a small gas fee for the call.\n                        If you believe you are too early, maybe come back in a\n                        bit, our trigger runs hourly.\n                      </Text>\n                    </Box>\n                    <Button\n                      colorScheme=\"whatsapp\"\n                      variant=\"outline\"\n                      onClick={() => triggerResolve(wallet, game.addr)}\n                    >\n                      Resolve game\n                    </Button>\n                  </Box>\n                )}\n              </Box>\n\n              <Box>\n                {gameOutcome === \"0\" && (\n                  <>\n                    <Heading size=\"md\" mt=\"5\" mb=\"3\">\n                      Mintable token supply\n                    </Heading>\n                    <StatGroup>\n                      <Stat>\n                        <StatLabel>Exchange rate for 1 Game Token</StatLabel>\n                        <StatNumber>1 HMTKN</StatNumber>\n                        <StatHelpText>Fixed</StatHelpText>\n                      </Stat>\n                      <Stat>\n                        <StatLabel>Game Yes Token supply left</StatLabel>\n                        <StatNumber>{1000 - game.betYesAmount}</StatNumber>\n                      </Stat>\n                      <Stat>\n                        <StatLabel>Game No Token supply left</StatLabel>\n                        <StatNumber>{1000 - game.betNoAmount}</StatNumber>\n                      </Stat>\n                    </StatGroup>\n                  </>\n                )}\n                <Divider my=\"7\" />\n                <Heading size=\"md\" mb=\"3\">\n                  Owned tokens\n                </Heading>\n                <StatGroup w=\"100%\">\n                  <Stat>\n                    <StatLabel>Game Yes Token</StatLabel>\n                    <StatNumber>{gytBalance}</StatNumber>\n                    <StatHelpText>GYT (GameYesToken)</StatHelpText>\n                    <StatHelpText>\n                      <Text fontSize=\"xs\">{gytAddr}</Text>\n                    </StatHelpText>\n                  </Stat>\n                  <Stat>\n                    <StatLabel>Game No Token</StatLabel>\n                    <StatNumber>{gntBalance}</StatNumber>\n                    <StatHelpText>GNT (GameNoToken)</StatHelpText>\n                    <StatHelpText>\n                      <Text fontSize=\"xs\">{gntAddr}</Text>\n                    </StatHelpText>\n                  </Stat>\n                </StatGroup>\n                <Divider my=\"7\" />\n                {gameOutcome !== \"0\" ? (\n                  <Box>\n                    <Heading mb=\"4\" size=\"md\">\n                      Trade in game token\n                    </Heading>\n                    <StatGroup>\n                      <Stat>\n                        <StatLabel>Winning token</StatLabel>\n                        <StatNumber>\n                          {\" \"}\n                          {gameOutcome === \"1\"\n                            ? \"Game Yes Token\"\n                            : \"Game No Token\"}\n                        </StatNumber>\n                        <StatHelpText>\n                          <Text fontSize=\"xs\">\n                            {gameOutcome === \"1\" ? gytAddr : gntAddr}\n                          </Text>\n                        </StatHelpText>\n                      </Stat>\n                    </StatGroup>\n\n                    <Box mt=\"3\">\n                      {(gameOutcome === \"1\" &&\n                        BigNumber.from(gytBalance).gt(BigNumber.from(0))) ||\n                      (gameOutcome === \"2\" &&\n                        BigNumber.from(gntBalance).gt(BigNumber.from(0))) ? (\n                        <Button\n                          colorScheme=\"whatsapp\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            setIsDialog(true);\n                            onOpen();\n                          }}\n                        >\n                          Collect Winnings{\" \"}\n                          {winningTokenAllowance < winningTokenBalance &&\n                            \"(Approval required first)\"}\n                        </Button>\n                      ) : (\n                        <Text fontWeight=\"bold\">\n                          You have no winning tokens to claim.\n                        </Text>\n                      )}\n                    </Box>\n                  </Box>\n                ) : percentage < 100 ? (\n                  <Box>\n                    <Heading mb=\"4\" size=\"md\">\n                      Mint game tokens\n                    </Heading>\n                    <FormControl isRequired>\n                      <FormLabel>Game token side</FormLabel>\n                      <Select\n                        placeholder=\"Select game token side\"\n                        onChange={(e) => {\n                          setBuyTokenSide(e.target.value);\n                          setMaxLimit(\n                            1000 -\n                              (e.target.value === \"1\"\n                                ? game.betYesAmount\n                                : game.betNoAmount)\n                          );\n                          setBuyTokenAmt(0);\n                        }}\n                        value={buyTokenSide}\n                      >\n                        <option value=\"1\">Yes</option>\n                        <option value=\"2\">No</option>\n                      </Select>\n                    </FormControl>\n                    <FormControl isRequired mt=\"3\">\n                      <FormLabel>Amount of game token</FormLabel>\n                      <NumberInput\n                        value={buyTokenAmt}\n                        min={1}\n                        max={maxLimit}\n                        onChange={(v) => setBuyTokenAmt(v)}\n                      >\n                        <NumberInputField />\n                        <NumberInputStepper>\n                          <NumberIncrementStepper />\n                          <NumberDecrementStepper />\n                        </NumberInputStepper>\n                      </NumberInput>\n                    </FormControl>\n                    {!(\n                      (buyTokenSide !== \"1\" && buyTokenSide !== \"2\") ||\n                      buyTokenAmt <= 0 ||\n                      buyTokenAmt > maxLimit ||\n                      buyTokenAmt > main2TknAllowance\n                    ) && (\n                      <Box>\n                        <Heading mt=\"8\" mb=\"4\" size=\"sm\">\n                          Transaction Summary\n                        </Heading>\n                        <StatGroup w=\"100%\">\n                          <Stat>\n                            <StatLabel>\n                              {buyTokenSide === \"1\" ? \"GYT\" : \"GNT\"}\n                            </StatLabel>\n                            <StatNumber>{buyTokenAmt}</StatNumber>\n                            <StatHelpText>\n                              <StatArrow type=\"increase\" />\n                              Gain {buyTokenAmt}{\" \"}\n                              {buyTokenSide === \"1\" ? \"GYT\" : \"GNT\"}\n                            </StatHelpText>\n                            <StatHelpText>\n                              <Text fontSize=\"xs\">\n                                {buyTokenSide === \"1\" ? gytAddr : gntAddr}\n                              </Text>\n                            </StatHelpText>\n                          </Stat>\n                          <Stat>\n                            <StatLabel>HMTKN</StatLabel>\n                            <StatNumber>\n                              {buyTokenAmt * game2MainConversionRate}\n                            </StatNumber>\n                            <StatHelpText>\n                              <StatArrow type=\"decrease\" />\n                              Lose {buyTokenAmt} HMTKN\n                            </StatHelpText>\n                            <StatHelpText>\n                              <Text fontSize=\"xs\">{hmtknAddr}</Text>\n                            </StatHelpText>\n                          </Stat>\n                        </StatGroup>\n                      </Box>\n                    )}\n                    {buyTokenAmt > maxLimit && (\n                      <Box\n                        border=\"1px solid red\"\n                        textAlign=\"center\"\n                        p=\"1\"\n                        borderRadius=\"20px\"\n                        my=\"2\"\n                      >\n                        <Text>\n                          Cannot mint the requested token amount, try purchasing\n                          from a player's listing.\n                        </Text>\n                      </Box>\n                    )}\n                    <Button\n                      colorScheme=\"green\"\n                      variant=\"outline\"\n                      mt=\"6\"\n                      disabled={\n                        (buyTokenSide !== \"1\" && buyTokenSide !== \"2\") ||\n                        buyTokenAmt <= 0 ||\n                        buyTokenAmt > maxLimit ||\n                        buyTokenAmt > main2TknAllowance\n                      }\n                      onClick={triggerPurchase}\n                    >\n                      Mint Game Tokens\n                    </Button>\n                    {buyTokenAmt > main2TknAllowance && (\n                      <Box display=\"flex\" alignItems=\"center\" mt=\"2\">\n                        <FontAwesomeIcon\n                          icon={faX}\n                          color=\"red\"\n                          style={{ marginRight: \"5px\" }}\n                        />\n                        <Text>\n                          You cannot complete the purchase as your allowance is\n                          too low.\n                        </Text>\n                        <Button\n                          mx=\"3\"\n                          colorScheme=\"green\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setIsDialog(true);\n                            onOpen();\n                          }}\n                        >\n                          Increase allowance\n                        </Button>\n                      </Box>\n                    )}\n                  </Box>\n                ) : (\n                  <Box>\n                    <Heading size=\"md\">Game is closed.</Heading>\n                  </Box>\n                )}\n                <AlertDialog\n                  motionPreset=\"slideInBottom\"\n                  leastDestructiveRef={cancelRef}\n                  onClose={onClose}\n                  isOpen={isDialog && isOpen}\n                  isCentered\n                >\n                  <AlertDialogOverlay />\n\n                  <AlertDialogContent\n                    minW={{ base: \"100%\", lg: \"max-content\" }}\n                  >\n                    {gameOutcome === \"0\" && errorMsg ? (\n                      <GameErrorDialog errorMsg={errorMsg} onClose={onClose} />\n                    ) : gameOutcome === \"0\" &&\n                      buyTokenAmt > main2TknAllowance ? (\n                      <IncreaseAllowanceDialog\n                        wallet={wallet}\n                        gameAddr={game && game.addr}\n                        onClose={onClose}\n                        allowAmt={buyTokenAmt * game2MainConversionRate}\n                      />\n                    ) : gameOutcome === \"0\" ? (\n                      <PurchaseConfirmationDialog\n                        trxHash={purchaseTrxHash}\n                        onClose={onClose}\n                      />\n                    ) : winningTokenAllowance < winningTokenBalance ? (\n                      <ClaimWinningIncAllowanceDialog\n                        wallet={wallet}\n                        gameAddr={game && game.addr}\n                        onClose={onClose}\n                        outcome={game && game.gameOutcome}\n                        approvalAmt={winningTokenBalance}\n                        winningTokenAddr={\n                          gameOutcome === \"1\" ? gytAddr : gntAddr\n                        }\n                      />\n                    ) : winningTokenAllowance === winningTokenBalance ? (\n                      <ClaimWinningDialog\n                        wallet={wallet}\n                        gameAddr={game && game.addr}\n                        outcome={game && game.gameOutcome}\n                        onClose={onClose}\n                        withdrawAmt={winningTokenBalance}\n                        hmtknAddr={hmtknAddr}\n                        winningTokenAddr={\n                          gameOutcome === \"1\" ? gytAddr : gntAddr\n                        }\n                        totalLoseAmt={\n                          gameOutcome === \"1\"\n                            ? game && game.betNoAmount\n                            : game && game.betYesAmount\n                        }\n                        totalWinAmt={\n                          gameOutcome === \"1\"\n                            ? game && game.betYesAmount\n                            : game && game.betNoAmount\n                        }\n                      />\n                    ) : (\n                      <GameErrorDialog\n                        errorMsg=\"We got lost in the sauce. :(\"\n                        onClose={onClose}\n                      />\n                    )}\n                  </AlertDialogContent>\n                </AlertDialog>\n              </Box>\n\n              <Divider my=\"10\" />\n\n              <Box>\n                <GameActiveListings\n                  game={game}\n                  setIsDialog={setIsDialog}\n                  onOpen={onOpen}\n                  gytAddr={gytAddr}\n                  gntAddr={gntAddr}\n                  hmtknAddr={hmtknAddr}\n                  setIsCreate={setIsCreate}\n                  setListingSelected={setListingSelected}\n                />\n\n                <Drawer\n                  size=\"lg\"\n                  isOpen={!isDialog && isOpen}\n                  placement=\"right\"\n                  onClose={onClose}\n                  finalFocusRef={cancelRef}\n                >\n                  <DrawerOverlay />\n                  {isCreate ? (\n                    <CreateListingDrawer\n                      wallet={wallet}\n                      gytAddr={gytAddr}\n                      gytBalance={gytBalance}\n                      gntAddr={gntAddr}\n                      gntBalance={gntBalance}\n                      hmtknAddr={hmtknAddr}\n                      toast={toast}\n                      onClose={onClose}\n                    />\n                  ) : (\n                    <ListingDetailDrawer\n                      wallet={wallet}\n                      listingSelected={listingSelected}\n                      onClose={onClose}\n                      toast={toast}\n                    />\n                  )}\n                </Drawer>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      ) : (\n        <Spinner color=\"red.500\" />\n      )}\n    </Box>\n  );\n}\n","import {\n  Box,\n  Heading,\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  TableContainer,\n  Badge,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  PopoverAnchor,\n  Button,\n  Text,\n  Tag,\n  useColorMode,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport { Link as routerLink } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { shortenAddr } from \"../util/helper\";\nimport { getPlayersTrxRecords } from \"../util/interact\";\n\nexport default function PlayersHistory({ wallet }) {\n  const [records, setRecords] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { colorMode } = useColorMode();\n\n  useEffect(() => {\n    const getRecords = async () => {\n      setIsLoading(true);\n      setRecords(await getPlayersTrxRecords(wallet));\n      setIsLoading(false);\n    };\n    getRecords();\n  }, [wallet]);\n\n  return (\n    <Box pt=\"8\" pb=\"16\" px=\"5\" m=\"8\" mx=\"16\">\n      {isLoading ? (\n        <Box mx=\"auto\">\n          <Spinner color=\"red.500\" size=\"xl\" />\n        </Box>\n      ) : (\n        <Box>\n          <Heading size=\"lg\" mb=\"10\">\n            Transaction History\n          </Heading>\n          <TableContainer>\n            <Table variant=\"striped\" size=\"sm\">\n              <TableCaption>\n                Your BET and WITHDRAW transactions from HMTKN to Game Tokens\n              </TableCaption>\n              <Thead>\n                <Tr>\n                  <Th>Game</Th>\n                  <Th>Activity Type</Th>\n                  <Th>From</Th>\n                  <Th>To</Th>\n                  <Th isNumeric>Transaction Amount</Th>\n                  <Th>Transaction Game side</Th>\n                  <Th>Transaction Timestamp</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {records && records.length > 0 ? (\n                  records.map((r) => (\n                    <Tr>\n                      <Td>\n                        <Link as={routerLink} to={`/game/${r.gameId}`}>\n                          <Text\n                            color={\n                              colorMode === \"light\" ? \"teal.700\" : \"teal.300\"\n                            }\n                          >\n                            {r.gameId}\n                          </Text>\n                        </Link>\n                      </Td>\n                      <Td>\n                        <Badge\n                          variant=\"outline\"\n                          colorScheme={\n                            r.activityType === \"BET\" ? \"teal\" : \"pink\"\n                          }\n                        >\n                          {r.activityType}\n                        </Badge>\n                      </Td>\n                      <Td>\n                        <Popover>\n                          <PopoverTrigger>\n                            <Tag\n                              _hover={{ cursor: \"pointer\" }}\n                              variant=\"outline\"\n                              color={colorMode === \"light\" ? \"black\" : \"white\"}\n                            >\n                              {shortenAddr(r.from)}\n                            </Tag>\n                          </PopoverTrigger>\n                          <PopoverContent\n                            minW={{ base: \"100%\", lg: \"max-content\" }}\n                          >\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverHeader>Address</PopoverHeader>\n                            <PopoverBody>{r.from}</PopoverBody>\n                          </PopoverContent>\n                        </Popover>\n                      </Td>\n                      <Td>\n                        <Popover>\n                          <PopoverTrigger>\n                            <Tag\n                              _hover={{ cursor: \"pointer\" }}\n                              variant=\"outline\"\n                              color={colorMode === \"light\" ? \"black\" : \"white\"}\n                            >\n                              {shortenAddr(r.to)}\n                            </Tag>\n                          </PopoverTrigger>\n                          <PopoverContent\n                            minW={{ base: \"100%\", lg: \"max-content\" }}\n                          >\n                            <PopoverArrow />\n                            <PopoverCloseButton />\n                            <PopoverHeader>Address</PopoverHeader>\n                            <PopoverBody>{r.to}</PopoverBody>\n                          </PopoverContent>\n                        </Popover>\n                      </Td>\n                      <Td isNumeric>{r.trxAmt}</Td>\n                      <Td>\n                        {r.gameSide === \"1\" ? (\n                          <Badge colorScheme=\"whatsapp\" variant=\"outline\">\n                            Yes\n                          </Badge>\n                        ) : (\n                          <Badge colorScheme=\"red\" variant=\"outline\">\n                            No\n                          </Badge>\n                        )}\n                      </Td>\n                      <Td>\n                        {new Intl.DateTimeFormat(\"en-US\", {\n                          year: \"numeric\",\n                          month: \"2-digit\",\n                          day: \"2-digit\",\n                          hour: \"2-digit\",\n                          minute: \"2-digit\",\n                          second: \"2-digit\",\n                          timeZoneName: \"short\",\n                        }).format(parseInt(r.trxTime) * 1000)}\n                      </Td>\n                    </Tr>\n                  ))\n                ) : (\n                  <Tr>\n                    <Td>-</Td>\n                    <Td>-</Td>\n                    <Td>-</Td>\n                    <Td>-</Td>\n                    <Td>-</Td>\n                    <Td>-</Td>\n                    <Td>-</Td>\n                  </Tr>\n                )}\n              </Tbody>\n            </Table>\n          </TableContainer>\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import GamesGallery from \"./components/GamesGallery\";\nimport { Box, useColorMode, useDisclosure } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport CommonTop from \"./components/CommonTop\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport { Routes } from \"react-router-dom\";\n\nimport { createBrowserRouter, RouterProvider, Route, HashRouter } from \"react-router-dom\";\nimport Game from \"./components/Game\";\nimport GetHMTKN from \"./components/hmtknModals/GetHMTKN\";\nimport PlayersHistory from \"./components/PlayersHistory\";\n\nfunction App() {\n  const [walletAddress, setWallet] = useState(\"\");\n  const { toggleColorMode } = useColorMode();\n\n  return (\n    <Box>\n      <CommonTop\n        wallet={walletAddress}\n        setWallet={setWallet}\n        toggleColorMode={toggleColorMode}\n      />\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={<GamesGallery walletAddress={walletAddress} />}\n        />\n        <Route\n          exact\n          path=\"/game/:id\"\n          element={<Game wallet={walletAddress} />}\n        />\n        <Route\n          exact\n          path=\"/history\"\n          element={<PlayersHistory wallet={walletAddress} />}\n        />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// 1. import `extendTheme` function\nimport { extendTheme } from \"@chakra-ui/react\";\n\n// 2. Add your color mode config\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n};\n\n// 3. extend the theme\nconst theme = extendTheme({ config });\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <HashRouter>\n      <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n      <App />\n    </HashRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}