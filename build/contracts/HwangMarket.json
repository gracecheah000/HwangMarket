{
  "contractName": "HwangMarket",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gameContractRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameContractRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HwangMarket.sol\":\"HwangMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/GameContract.sol\":{\"keccak256\":\"0xddd3a65fdefd9295f69161f8c082b3e550ae263034a962c359cf5d7aabd19be4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79f6663637b21776fb404277bfa2e5d413b372f286667cc0fb073b8a28d5d95a\",\"dweb:/ipfs/QmSP2FGPBRYvKXsNZMcj3oRRguYxvY4RDo95GyuYyqznwn\"]},\"project:/contracts/HwangMarket.sol\":{\"keccak256\":\"0x85411368af057b0b16901ea6e57c9fc13f146f072af12991881084f0364a4a8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3502916e40077c8b95feff44aab172bd417b9d2cbb6045e1df1392f555dd678\",\"dweb:/ipfs/QmZ75kmAatwbU78S1QhPA3KPhojYRs2nQhMuyCo5eYZFXD\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610edf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633f863f191461003b5780637255d7291461006b575b600080fd5b610055600480360381019061005091906101a7565b610075565b6040516100629190610215565b60405180910390f35b6100736100a8565b005b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000336040516100b79061015f565b6100c19190610215565b604051809103906000f0801580156100dd573d6000803e3d6000fd5b50905080600160008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101406000546001610149565b60008190555050565b60008183610157919061025f565b905092915050565b610c168061029483390190565b600080fd5b6000819050919050565b61018481610171565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b6000602082840312156101bd576101bc61016c565b5b60006101cb84828501610192565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ff826101d4565b9050919050565b61020f816101f4565b82525050565b600060208201905061022a6000830184610206565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061026a82610171565b915061027583610171565b925082820190508082111561028d5761028c610230565b5b9291505056fe608060405234801561001057600080fd5b50604051610c16380380610c16833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610aff806101176000396000f3fe6080604052600436106100705760003560e01c8063200d2ed21161004e578063200d2ed2146100f75780636fd075fc146101225780639260b33f1461013e578063d84c1ac91461016757610070565b806302d05d3f1461007557806312065fe0146100a05780631746bd1b146100cb575b600080fd5b34801561008157600080fd5b5061008a61017e565b60405161009791906106aa565b60405180910390f35b3480156100ac57600080fd5b506100b56101a2565b6040516100c291906106de565b60405180910390f35b3480156100d757600080fd5b506100e06101aa565b6040516100ee929190610770565b60405180910390f35b34801561010357600080fd5b5061010c6101e6565b6040516101199190610799565b60405180910390f35b61013c60048036038101906101379190610811565b6101f9565b005b34801561014a57600080fd5b506101656004803603810190610160919061088f565b610440565b005b34801561017357600080fd5b5061017c610511565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a900460ff16915091509091565b600060149054906101000a900460ff1681565b60008015610294573373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461028f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102869061093f565b60405180910390fd5b610323565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610322576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610319906109d1565b60405180910390fd5b5b8273ffffffffffffffffffffffffffffffffffffffff163134111561037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490610a3d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e290610aa9565b60405180910390fd5b8134146103f757600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047857600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146104c457600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561050c573d6000803e3d6000fd5b505050565b600180156105ac573373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e9061093f565b60405180910390fd5b61063b565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361063a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610631906109d1565b60405180910390fd5b5b6001600060146101000a81548160ff02191690836001811115610661576106606106f9565b5b021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069482610669565b9050919050565b6106a481610689565b82525050565b60006020820190506106bf600083018461069b565b92915050565b6000819050919050565b6106d8816106c5565b82525050565b60006020820190506106f360008301846106cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610739576107386106f9565b5b50565b600081905061074a82610728565b919050565b600061075a8261073c565b9050919050565b61076a8161074f565b82525050565b6000604082019050610785600083018561069b565b6107926020830184610761565b9392505050565b60006020820190506107ae6000830184610761565b92915050565b600080fd5b6107c281610689565b81146107cd57600080fd5b50565b6000813590506107df816107b9565b92915050565b6107ee816106c5565b81146107f957600080fd5b50565b60008135905061080b816107e5565b92915050565b60008060408385031215610828576108276107b4565b5b6000610836858286016107d0565b9250506020610847858286016107fc565b9150509250929050565b600061085c82610669565b9050919050565b61086c81610851565b811461087757600080fd5b50565b60008135905061088981610863565b92915050565b6000602082840312156108a5576108a46107b4565b5b60006108b38482850161087a565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f74207468652063726561746f72206f6620746869732060008201527f67616d6521000000000000000000000000000000000000000000000000000000602082015250565b60006109296025836108bc565b9150610934826108cd565b604082019050919050565b600060208201905081810360008301526109588161091c565b9050919050565b7f596f7520617265207468652063726561746f72206f6620746869732067616d6560008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006109bb6021836108bc565b91506109c68261095f565b604082019050919050565b600060208201905081810360008301526109ea816109ae565b9050919050565b7f596f7520646f206e6f74206861766520656e6f7567682062616c616e63650000600082015250565b6000610a27601e836108bc565b9150610a32826109f1565b602082019050919050565b60006020820190508181036000830152610a5681610a1a565b9050919050565b7f496e76616c6964205472616e73616374696f6e00000000000000000000000000600082015250565b6000610a936013836108bc565b9150610a9e82610a5d565b602082019050919050565b60006020820190508181036000830152610ac281610a86565b905091905056fea264697066735822122098d4c8cbbdfb57d2ce266195c7860fb33aa9bafa1b3bb01918067cbc5a9801df64736f6c63430008110033a2646970667358221220e784039290b37aaa9a74e71f4857f7226f727b765666b23f2737facb30d39a0164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80633f863f191461003b5780637255d7291461006b575b600080fd5b610055600480360381019061005091906101a7565b610075565b6040516100629190610215565b60405180910390f35b6100736100a8565b005b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000336040516100b79061015f565b6100c19190610215565b604051809103906000f0801580156100dd573d6000803e3d6000fd5b50905080600160008054815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101406000546001610149565b60008190555050565b60008183610157919061025f565b905092915050565b610c168061029483390190565b600080fd5b6000819050919050565b61018481610171565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b6000602082840312156101bd576101bc61016c565b5b60006101cb84828501610192565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ff826101d4565b9050919050565b61020f816101f4565b82525050565b600060208201905061022a6000830184610206565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061026a82610171565b915061027583610171565b925082820190508082111561028d5761028c610230565b5b9291505056fe608060405234801561001057600080fd5b50604051610c16380380610c16833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610aff806101176000396000f3fe6080604052600436106100705760003560e01c8063200d2ed21161004e578063200d2ed2146100f75780636fd075fc146101225780639260b33f1461013e578063d84c1ac91461016757610070565b806302d05d3f1461007557806312065fe0146100a05780631746bd1b146100cb575b600080fd5b34801561008157600080fd5b5061008a61017e565b60405161009791906106aa565b60405180910390f35b3480156100ac57600080fd5b506100b56101a2565b6040516100c291906106de565b60405180910390f35b3480156100d757600080fd5b506100e06101aa565b6040516100ee929190610770565b60405180910390f35b34801561010357600080fd5b5061010c6101e6565b6040516101199190610799565b60405180910390f35b61013c60048036038101906101379190610811565b6101f9565b005b34801561014a57600080fd5b506101656004803603810190610160919061088f565b610440565b005b34801561017357600080fd5b5061017c610511565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060149054906101000a900460ff16915091509091565b600060149054906101000a900460ff1681565b60008015610294573373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461028f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102869061093f565b60405180910390fd5b610323565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610322576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610319906109d1565b60405180910390fd5b5b8273ffffffffffffffffffffffffffffffffffffffff163134111561037d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037490610a3d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146103eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e290610aa9565b60405180910390fd5b8134146103f757600080fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461047857600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146104c457600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561050c573d6000803e3d6000fd5b505050565b600180156105ac573373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e9061093f565b60405180910390fd5b61063b565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361063a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610631906109d1565b60405180910390fd5b5b6001600060146101000a81548160ff02191690836001811115610661576106606106f9565b5b021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069482610669565b9050919050565b6106a481610689565b82525050565b60006020820190506106bf600083018461069b565b92915050565b6000819050919050565b6106d8816106c5565b82525050565b60006020820190506106f360008301846106cf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610739576107386106f9565b5b50565b600081905061074a82610728565b919050565b600061075a8261073c565b9050919050565b61076a8161074f565b82525050565b6000604082019050610785600083018561069b565b6107926020830184610761565b9392505050565b60006020820190506107ae6000830184610761565b92915050565b600080fd5b6107c281610689565b81146107cd57600080fd5b50565b6000813590506107df816107b9565b92915050565b6107ee816106c5565b81146107f957600080fd5b50565b60008135905061080b816107e5565b92915050565b60008060408385031215610828576108276107b4565b5b6000610836858286016107d0565b9250506020610847858286016107fc565b9150509250929050565b600061085c82610669565b9050919050565b61086c81610851565b811461087757600080fd5b50565b60008135905061088981610863565b92915050565b6000602082840312156108a5576108a46107b4565b5b60006108b38482850161087a565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f74207468652063726561746f72206f6620746869732060008201527f67616d6521000000000000000000000000000000000000000000000000000000602082015250565b60006109296025836108bc565b9150610934826108cd565b604082019050919050565b600060208201905081810360008301526109588161091c565b9050919050565b7f596f7520617265207468652063726561746f72206f6620746869732067616d6560008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006109bb6021836108bc565b91506109c68261095f565b604082019050919050565b600060208201905081810360008301526109ea816109ae565b9050919050565b7f596f7520646f206e6f74206861766520656e6f7567682062616c616e63650000600082015250565b6000610a27601e836108bc565b9150610a32826109f1565b602082019050919050565b60006020820190508181036000830152610a5681610a1a565b9050919050565b7f496e76616c6964205472616e73616374696f6e00000000000000000000000000600082015250565b6000610a936013836108bc565b9150610a9e82610a5d565b602082019050919050565b60006020820190508181036000830152610ac281610a86565b905091905056fea264697066735822122098d4c8cbbdfb57d2ce266195c7860fb33aa9bafa1b3bb01918067cbc5a9801df64736f6c63430008110033a2646970667358221220e784039290b37aaa9a74e71f4857f7226f727b765666b23f2737facb30d39a0164736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1991:3",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:3",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:3",
                "type": ""
              }
            ],
            "src": "7:75:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:3"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:3",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:3"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:3",
                "type": ""
              }
            ],
            "src": "334:77:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:3"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:3"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:3"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:3",
                "type": ""
              }
            ],
            "src": "417:122:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:3"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:3",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:3",
                "type": ""
              }
            ],
            "src": "545:139:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:3"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:3",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:3",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:3",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:3",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:3",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:3"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:3"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:3"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:3"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:3"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:3"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:3",
                "type": ""
              }
            ],
            "src": "690:329:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:81:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:65:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1095:5:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1102:42:3",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1091:54:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:3",
                "type": ""
              }
            ],
            "src": "1025:126:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:51:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:35:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1241:5:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1223:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:24:3"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:3"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:3",
                "type": ""
              }
            ],
            "src": "1157:96:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1324:53:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1341:3:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1364:5:3"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1346:17:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:24:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:37:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:37:3"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1312:5:3",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1319:3:3",
                "type": ""
              }
            ],
            "src": "1259:118:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:124:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1571:6:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1584:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1595:1:3",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1580:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1580:17:3"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:43:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:71:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:71:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:3",
                "type": ""
              }
            ],
            "src": "1383:222:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1639:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1656:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1659:77:3",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1649:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1649:88:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1649:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1753:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1756:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1746:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1746:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1746:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1777:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1780:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1770:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1770:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1770:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1611:180:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1841:147:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1851:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1874:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1856:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1856:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "1851:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1885:25:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1908:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1890:17:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:20:3"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "1885:1:3"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1919:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1930:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1933:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1926:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1926:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1919:3:3"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1959:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1961:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1961:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1961:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1951:1:3"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "1954:3:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1948:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1948:10:3"
                  },
                  "nodeType": "YulIf",
                  "src": "1945:36:3"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1828:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1831:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1837:3:3",
                "type": ""
              }
            ],
            "src": "1797:191:3"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "160:418:2:-:0;;;309:27;;;;;;;;;;160:418;;;;;;",
  "deployedSourceMap": "160:418:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;378:195;;;:::i;:::-;;249:55;;;;;;;;;;;;;;;;;;;;;;:::o;378:195::-;414:20;454:10;437:28;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;414:51;;514:7;472:20;:31;493:9;;472:31;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;541:26;554:9;;565:1;541:12;:26::i;:::-;529:9;:38;;;;407:166;378:195::o;2755:96:0:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:180::-;1659:77;1656:1;1649:88;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1797:191;1837:3;1856:20;1874:1;1856:20;:::i;:::-;1851:25;;1890:20;1908:1;1890:20;:::i;:::-;1885:25;;1933:1;1930;1926:9;1919:16;;1954:3;1951:1;1948:10;1945:36;;;1961:18;;:::i;:::-;1945:36;1797:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"./GameContract.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract HwangMarket {\r\n  using SafeMath for uint256;\r\n\r\n  uint256 private gameCount;\r\n  mapping(uint256 => address) public gameContractRegistry;\r\n  constructor() public {\r\n  }\r\n\r\n  // create game contract instance\r\n  function createGame() public {\r\n    GameContract newGame = new GameContract(msg.sender);\r\n    gameContractRegistry[gameCount] = address(newGame);\r\n    gameCount = SafeMath.add(gameCount, 1);\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\tammi\\Documents\\GitHub\\HwangMarket\\contracts\\HwangMarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/HwangMarket.sol",
    "exportedSymbols": {
      "GameContract": [
        482
      ],
      "HwangMarket": [
        531
      ],
      "SafeMath": [
        311
      ]
    },
    "id": 532,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 484,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "absolutePath": "project:/contracts/GameContract.sol",
        "file": "./GameContract.sol",
        "id": 485,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 532,
        "sourceUnit": 483,
        "src": "69:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 486,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 532,
        "sourceUnit": 312,
        "src": "99:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HwangMarket",
        "contractDependencies": [
          482
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 531,
        "linearizedBaseContracts": [
          531
        ],
        "name": "HwangMarket",
        "nameLocation": "169:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 489,
            "libraryName": {
              "id": 487,
              "name": "SafeMath",
              "nameLocations": [
                "192:8:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 311,
              "src": "192:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "186:27:2",
            "typeName": {
              "id": 488,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 491,
            "mutability": "mutable",
            "name": "gameCount",
            "nameLocation": "235:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 531,
            "src": "219:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 490,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "219:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "3f863f19",
            "id": 495,
            "mutability": "mutable",
            "name": "gameContractRegistry",
            "nameLocation": "284:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 531,
            "src": "249:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 494,
              "keyType": {
                "id": 492,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "257:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "249:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 493,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "268:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "330:6:2",
              "statements": []
            },
            "id": 499,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:2"
            },
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:2"
            },
            "scope": 531,
            "src": "309:27:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "407:166:2",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "newGame",
                      "nameLocation": "427:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "414:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GameContract_$482",
                        "typeString": "contract GameContract"
                      },
                      "typeName": {
                        "id": 503,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 502,
                          "name": "GameContract",
                          "nameLocations": [
                            "414:12:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 482,
                          "src": "414:12:2"
                        },
                        "referencedDeclaration": 482,
                        "src": "414:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GameContract_$482",
                          "typeString": "contract GameContract"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 511,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "454:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "458:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "454:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "437:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GameContract_$482_$",
                        "typeString": "function (address) returns (contract GameContract)"
                      },
                      "typeName": {
                        "id": 506,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 505,
                          "name": "GameContract",
                          "nameLocations": [
                            "441:12:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 482,
                          "src": "441:12:2"
                        },
                        "referencedDeclaration": 482,
                        "src": "441:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GameContract_$482",
                          "typeString": "contract GameContract"
                        }
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GameContract_$482",
                      "typeString": "contract GameContract"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "414:51:2"
                },
                {
                  "expression": {
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 512,
                        "name": "gameContractRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "472:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 514,
                      "indexExpression": {
                        "id": 513,
                        "name": "gameCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "493:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "472:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 517,
                          "name": "newGame",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 504,
                          "src": "514:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GameContract_$482",
                            "typeString": "contract GameContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_GameContract_$482",
                            "typeString": "contract GameContract"
                          }
                        ],
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "506:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "506:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "506:16:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "472:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "472:50:2"
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 521,
                      "name": "gameCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "529:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 524,
                          "name": "gameCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "554:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "565:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 522,
                          "name": "SafeMath",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 311,
                          "src": "541:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
                            "typeString": "type(library SafeMath)"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "550:3:2",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 175,
                        "src": "541:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "541:26:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "529:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "529:38:2"
                }
              ]
            },
            "functionSelector": "7255d729",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createGame",
            "nameLocation": "387:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:2:2"
            },
            "returnParameters": {
              "id": 501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:0:2"
            },
            "scope": 531,
            "src": "378:195:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 532,
        "src": "160:418:2",
        "usedErrors": []
      }
    ],
    "src": "33:547:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0227D82a3565648A55cBEFb1c0DcDd4246638135",
      "transactionHash": "0x548cf5ba001e3056a4ad8bd3ce4e241ce754a92c16b5086f023e85a7ed5211b2"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-14T09:14:51.386Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}